{"EpubVersion":2,"filepath":"","floatingtheme":[],"folded":false,"markups":[{"date":"2023-07-06 18:09:53","docid":0,"fillcolor":"ffffed99","id":1,"markups":[{"date":"2023-07-06 18:09:56","docid":0,"fillcolor":"ffffed99","id":2,"markups":[{"date":"2023-07-06 18:10:48","docid":0,"fillcolor":"ffffed99","id":3,"originaltext":"C语言宏中\"#“和”##\"的用法","page":31,"textblocks":[{"first":[75.521240234375,184.54928588867188,7.766517639160156,15.5],"last":[214.62359619140625,184.54928588867188,12.19232177734375,15.5],"length":16,"rects":[[75.521240234375,184.54928588867188,151.294677734375,15.5]],"start":5,"text":"C语言宏中\"#“和”##\"的用法"}],"type":5,"uuid":"88e31111df40046f6177ce039b967316"},{"date":"2023-07-06 18:11:16","docid":0,"fillcolor":"ffffed99","id":4,"markups":[{"date":"2023-07-06 18:12:49","docid":0,"fillcolor":"ffffed99","id":5,"originaltext":"如果键入volatile，编译器会逐一的进行编译并产生相应的机器代码（产生四条代码）","page":32,"textblocks":[{"first":[477.3407897949219,653.9791870117188,9.753875732421875,12.5],"last":[390.90283203125,668.985107421875,9.753875732421875,12.5],"length":43,"rects":[[477.3407897949219,653.9791870117188,39.015472412109375,12.5],[75.52127075195312,668.985107421875,325.13543701171875,12.5]],"start":456,"text":"如果键入\nvolatile，编译器会逐一的进行编译并产生相应的机器代码（产生四条代码）"}],"type":5,"uuid":"f618d5bddac6bcad8edb486fb945395b"}],"originaltext":"关键字volatile有什么含意？并举出三个不同的例子","page":32,"textblocks":[{"first":[75.5212631225586,403.7135925292969,12.192329406738281,15.5],"last":[340.48504638671875,403.7135925292969,12.19232177734375,15.5],"length":27,"rects":[[75.5212631225586,403.7135925292969,277.1561050415039,15.5]],"start":6,"text":"关键字volatile有什么含意？并举出三个不同的例子"}],"type":5,"uuid":"c711cc74145d90fa47e65c9fdd64f459"},{"date":"2023-07-06 18:12:52","docid":0,"fillcolor":"ffffed99","id":6,"markups":[{"date":"2023-07-06 18:15:03","docid":0,"fillcolor":"ffffed99","id":12,"originaltext":" 在模块内（但在函数体外）\n可以被模块内所用函数访问，但不能被模块外其它函数访问","page":32,"textblocks":[{"first":[95.3726577758789,735.0112915039062,2.5360031127929688,12.5],"last":[205.32272338867188,735.0112915039062,9.753860473632812,12.5],"length":13,"rects":[[95.3726577758789,735.0112915039062,119.70392608642578,12.5]],"start":568,"text":" 在模块内（但在函数体外）"},{"first":[332.1230163574219,735.0112915039062,9.753875732421875,12.5],"last":[156.55337524414062,750.0172119140625,9.753860473632812,12.5],"length":27,"rects":[[332.1230163574219,735.0112915039062,185.32351684570312,12.5],[98.03020477294922,750.0172119140625,68.27703094482422,12.5]],"start":593,"text":"可以被模块内所用函数访问，但不能被模块\n外其它函数访问"}],"type":5,"uuid":"82a1180c5aa3a8bda632485282c1c4bc"}],"originaltext":"关键字static的作用是什么？","page":32,"textblocks":[{"first":[75.52127075195312,693.2454833984375,12.192329406738281,15.5],"last":[219.251220703125,693.2454833984375,12.19232177734375,15.5],"length":16,"rects":[[75.52127075195312,693.2454833984375,155.92227172851562,15.5]],"start":501,"text":"关键字static的作用是什么？"}],"type":5,"uuid":"3dcc02dc1ee95910b1376fe252e39280"},{"date":"2023-07-06 18:16:32","docid":0,"fillcolor":"ffffed99","id":13,"markups":[{"date":"2023-07-06 18:16:52","docid":0,"fillcolor":"ffffed99","id":16,"originaltext":"指示编译器这部分代码按C语言的进行编译","page":33,"textblocks":[{"first":[493.2987060546875,152.05572509765625,9.753875732421875,12.5],"last":[228.04244995117188,167.0616455078125,9.753860473632812,12.5],"length":20,"rects":[[493.2987060546875,152.05572509765625,19.50775146484375,12.5],[75.521240234375,167.0616455078125,162.2750701904297,12.5]],"start":270,"text":"指示\n编译器这部分代码按C语言的进行编译"}],"type":5,"uuid":"61ff3b15abac7c64f2710893575d0499"}],"originaltext":"extern”C” 的作用是什么？","page":33,"textblocks":[{"first":[75.521240234375,125.3958969116211,7.205665588378906,15.500007629394531],"last":[210.75860595703125,125.3958969116211,12.19232177734375,15.500007629394531],"length":17,"rects":[[75.521240234375,125.3958969116211,147.4296875,15.500007629394531]],"start":196,"text":"extern”C” 的作用是什么？"}],"type":5,"uuid":"0f405b5a27f4c64b1d9e73c27e78c81a"},{"date":"2023-07-06 19:05:05","docid":0,"fillcolor":"ffffed99","id":19,"markups":[{"date":"2023-07-06 19:05:10","docid":0,"fillcolor":"ffffed99","id":20,"originaltext":"strlen用来计算字符串的长度（在C/C++中，字符串是以\"\\0\"作为结束符的），它从内存的某个位置（可以是字符串开头，中间某个位置，甚至是某个不确定的内存区域）开始扫描直到碰到第一个字符串结束符\\0为止","page":34,"textblocks":[{"first":[75.52122497558594,721.3751831054688,4.652595520019531,13.5],"last":[104.18781280517578,751.3870239257812,9.753860473632812,13.5],"length":105,"rects":[[75.52122497558594,721.3751831054688,442.4886016845703,13.5],[75.52120971679688,736.381103515625,438.9240417480469,13.5],[75.52120971679688,751.3870239257812,38.42046356201172,13.5]],"start":729,"text":"strlen用来计算字符串的长度（在C/C++中，字符串是以\"\\0\"作为结束符的），它从内存的某个位置（可\n以是字符串开头，中间某个位置，甚至是某个不确定的内存区域）开始扫描直到碰到第一个字符串结束\n符\\0为止"}],"type":5,"uuid":"94238ae83eeabea5e28c1b47d3ccda11"}],"originaltext":"strlen(\"\\0\") =0，sizeof(\"\\0\")=2","page":34,"textblocks":[{"first":[75.521240234375,700.3662109375,4.652595520019531,12.5],"last":[202.40774536132812,700.3662109375,5.5792083740234375,12.5],"length":30,"rects":[[75.521240234375,700.3662109375,132.46571350097656,12.5]],"start":697,"text":"strlen(\"\\0\") =0，sizeof(\"\\0\")=2"}],"type":5,"uuid":"17d754afb5dc32b0973c3d874001874f"},{"date":"2023-07-06 19:10:39","docid":0,"fillcolor":"ffffed99","id":21,"markups":[{"date":"2023-07-06 19:18:20","docid":0,"fillcolor":"ffffed99","id":22,"originaltext":" sizeof既是关键字，也是运算符，但不是函数","page":35,"textblocks":[{"first":[299.9547119140625,78.11528015136719,2.5360107421875,13.5],"last":[484.8984375,78.11528015136719,9.753875732421875,13.5],"length":24,"rects":[[299.9547119140625,78.11528015136719,194.69760131835938,13.5]],"start":76,"text":" sizeof既是关键字，也是运算符，但不是函数"}],"type":5,"uuid":"80bae0e958616b81b82a350bda20a4b7"},{"date":"2023-07-06 19:19:51","docid":0,"fillcolor":"ffffed99","id":26,"originaltext":"编译程序的 sizeof都是在编译的时候计算的","page":35,"textblocks":[{"first":[127.29167938232422,182.456787109375,9.753868103027344,13.5],"last":[302.474853515625,182.456787109375,9.753875732421875,13.5],"length":23,"rects":[[127.29167938232422,182.456787109375,184.93704986572266,13.5]],"start":366,"text":"编译程序的 sizeof都是在编译的时候计算的"}],"type":5,"uuid":"48c27d34929d68702fea42fef7f4debe"}],"originaltext":"sizeof和strlen有什么区别","page":35,"textblocks":[{"first":[75.5212631225586,29.246604919433594,6.0595855712890625,15.5],"last":[207.50326538085938,29.246604919433594,12.19232177734375,15.5],"length":18,"rects":[[75.5212631225586,29.246604919433594,144.17432403564453,15.5]],"start":0,"text":"sizeof和strlen有什么区别"}],"type":5,"uuid":"dde32f3194e5ab589c41ee842c60c9af"},{"date":"2023-07-06 19:18:35","docid":0,"fillcolor":"ffffed99","id":23,"markups":[{"date":"2023-07-06 19:18:58","docid":0,"fillcolor":"ffffed99","id":24,"originaltext":"strlen则是在运行期计算的，用来计算字符串的实际长度","page":35,"textblocks":[{"first":[110.32069396972656,197.46270751953125,4.652595520019531,13.5],"last":[341.1557312011719,197.46270751953125,9.753875732421875,13.5],"length":28,"rects":[[110.32069396972656,197.46270751953125,240.5889129638672,13.5]],"start":417,"text":"strlen则是在运行期计算的，用来计算字符串的实际长度"}],"type":5,"uuid":"3d8ae60bf817915291da336f4117d562"}],"originaltext":"而strlen是函数","page":35,"textblocks":[{"first":[98.0301284790039,93.12120056152344,9.753860473632812,13.5],"last":[153.2955322265625,93.12120056152344,9.753860473632812,13.5],"length":10,"rects":[[98.0301284790039,93.12120056152344,65.0192642211914,13.5]],"start":103,"text":"而strlen是函数"}],"type":5,"uuid":"1c332bcd04f10ab9c07530a867958af8"},{"date":"2023-07-07 11:33:03","docid":0,"fillcolor":"ffffed99","id":27,"markups":[{"date":"2023-07-07 11:33:38","docid":0,"fillcolor":"ffffed99","id":28,"originaltext":"联合体中所有成员共用一块地址空间，即联合体只存放了一个被选中的成员","page":35,"textblocks":[{"first":[429.68048095703125,662.9312744140625,9.753875732421875,12.5],"last":[322.3879089355469,677.9371948242188,9.753875732421875,12.5],"length":34,"rects":[[429.68048095703125,662.9312744140625,87.78485107421875,12.5],[98.04895782470703,677.9371948242188,234.09282684326172,12.5]],"start":879,"text":"联合体中所有成员共\n用一块地址空间，即联合体只存放了一个被选中的成员"}],"type":5,"uuid":"c39aae3dcf383ef28b652f8816f718c7"},{"date":"2023-07-07 11:33:52","docid":0,"fillcolor":"ffffed99","id":30,"originaltext":"一个联合型变量的长度等于其最长的成员的长度。","page":35,"textblocks":[{"first":[234.60308837890625,722.9550170898438,9.753860473632812,12.5],"last":[439.4343566894531,722.9550170898438,9.753875732421875,12.5],"length":22,"rects":[[234.60308837890625,722.9550170898438,214.58514404296875,12.5]],"start":1035,"text":"一个联合型变量的长度等于其最长的成员的长度。"}],"type":5,"uuid":"114823ed685fb043c665c03671782d43"},{"date":"2023-07-07 11:33:44","docid":0,"fillcolor":"ffffed99","id":29,"originaltext":"而结构体中所有成员占用空间是累加的","page":35,"textblocks":[{"first":[341.8956604003906,677.9371948242188,9.753875732421875,12.5],"last":[497.95758056640625,677.9371948242188,9.753875732421875,12.5],"length":17,"rects":[[341.8956604003906,677.9371948242188,165.8157958984375,12.5]],"start":914,"text":"而结构体中所有成员占用空间是累加的"}],"type":5,"uuid":"b13b267cf6653985941b72c61c658862"},{"date":"2023-07-13 17:46:30","docid":0,"group":[{"date":"2023-07-13 17:46:30","docid":0,"id":32,"linecolor":"ffa0ec6f","linewidth":2,"page":36,"rect":[35.55243055139725,-80.74619820147859,565.2233874103495,199.455161229025],"type":2,"uuid":"e4619bb9474e04f004467e0da0f12479"}],"id":31,"imgfile":"63eec47160cb182dda79c963ab680d32.png","linecolor":"ffa0ec6f","linewidth":2,"page":35,"rect":[35.55243055139725,767.0888829140457,565.2233874103495,1047.2902423445494],"type":2,"uuid":"38f12add124ee849374fc7446fc63297"}],"originaltext":"C语言中 struct与 union的区别是什么","page":35,"textblocks":[{"first":[75.5400390625,598.0062866210938,7.766517639160156,15.5],"last":[271.14703369140625,598.0062866210938,12.19232177734375,15.5],"length":24,"rects":[[75.5400390625,598.0062866210938,207.79931640625,15.5]],"start":748,"text":"C语言中 struct与 union的区别是什么"}],"type":5,"uuid":"56eb19aa259d43611a1f75338638ea9a"}],"originaltext":"C/C++","page":28,"textblocks":[{"first":[75.52165222167969,367.713623046875,10.8731689453125,16.5],"last":[114.06421661376953,367.713623046875,9.746589660644531,16.5],"length":5,"rects":[[75.52165222167969,367.713623046875,48.289154052734375,16.5]],"start":221,"text":"C/C++"}],"type":5,"uuid":"a7e33b512aea1a75c103321503c9e63c"},{"date":"2023-07-13 17:46:47","docid":0,"fillcolor":"fffeeb73","id":33,"markups":[{"date":"2023-07-13 17:46:54","docid":0,"fillcolor":"fffeeb73","id":34,"originaltext":"它最重要的特点就是可写（可寻址）","page":36,"textblocks":[{"first":[280.3517761230469,233.043701171875,9.753875732421875,12.5],"last":[426.6598205566406,233.043701171875,9.753875732421875,12.5],"length":16,"rects":[[280.3517761230469,233.043701171875,156.06192016601562,12.5]],"start":328,"text":"它最重要的特点就是可写（可寻址）"}],"type":5,"uuid":"410e8fdfcecb2ea408dc9aab711b0452"},{"date":"2023-07-13 17:47:30","docid":0,"fillcolor":"fffeeb73","id":35,"originaltext":"右值\n它最重要的特点是可读","page":36,"textblocks":[{"first":[75.52056884765625,269.55853271484375,9.753860473632812,13.5],"last":[85.27442932128906,269.55853271484375,9.753860473632812,13.5],"length":2,"rects":[[75.52056884765625,269.55853271484375,19.507720947265625,13.5]],"start":390,"text":"右值"},{"first":[290.1056213378906,269.55853271484375,9.753875732421875,13.5],"last":[377.8904724121094,269.55853271484375,9.753875732421875,13.5],"length":10,"rects":[[290.1056213378906,269.55853271484375,97.53872680664062,13.5]],"start":412,"text":"它最重要的特点是可读"}],"type":5,"uuid":"c5b7a8b441b1377a1f8d4f9bdbf90998"}],"originaltext":"左值和右值是什么","page":36,"textblocks":[{"first":[75.52053833007812,206.28387451171875,12.192329406738281,15.5],"last":[160.86685180664062,206.28387451171875,12.19232177734375,15.5],"length":8,"rects":[[75.52053833007812,206.28387451171875,97.53863525390625,15.5]],"start":296,"text":"左值和右值是什么"}],"type":5,"uuid":"36c3287eed44ee6a4efc3d703453f19f"},{"date":"2023-07-13 17:51:47","docid":0,"fillcolor":"fffeeb73","id":36,"markups":[{"date":"2023-07-13 18:24:58","docid":0,"fillcolor":"fffeeb73","id":38,"originaltext":"因为短路计算的问题，对于&&操作，由于在两个表达式的返回值中，如果有一个为假则整个表达式的值都为假，如果前一个语句的返回值为 false，则无论后一个语句的返回值是真是假，整个条件判断都为假，不用执行后一个语句","page":36,"textblocks":[{"first":[75.52125549316406,596.96337890625,9.753860473632812,12.5],"last":[173.05990600585938,626.9752197265625,9.753860473632812,12.5],"length":107,"rects":[[75.52125549316406,596.96337890625,443.4108123779297,12.5],[75.52125549316406,611.9692993164062,433.5204315185547,12.5],[75.52125549316406,626.9752197265625,107.29251098632812,12.5]],"start":671,"text":"因为短路计算的问题，对于&&操作，由于在两个表达式的返回值中，如果有一个为假则整个表达式的值\n都为假，如果前一个语句的返回值为 false，则无论后一个语句的返回值是真是假，整个条件判断都为\n假，不用执行后一个语句"}],"type":5,"uuid":"958aa85e95c509ca497cc2444bb8b044"}],"originaltext":"什么是短路求值？","page":36,"textblocks":[{"first":[75.52056884765625,333.0840148925781,12.192329406738281,15.5],"last":[160.86688232421875,333.0840148925781,12.19232177734375,15.5],"length":8,"rects":[[75.52056884765625,333.0840148925781,97.53863525390625,15.5]],"start":471,"text":"什么是短路求值？"}],"type":5,"uuid":"642f523f394c7a70b6990b19e8ed45b7"},{"date":"2023-07-13 18:26:06","docid":0,"fillcolor":"fffeeb73","id":39,"markups":[{"date":"2023-07-13 18:26:08","docid":0,"fillcolor":"fffeeb73","id":40,"originaltext":"后置自增运算符需要把原来变量的值复制到一个临时的存储空间，等运算结束后才会返回这个临时变量的值。所以前置自增运算符效率比后置自增要高","page":37,"textblocks":[{"first":[75.5212631225586,80.04638671875,9.753860473632812,12.5],"last":[270.5986022949219,95.05230712890625,9.753875732421875,12.5],"length":67,"rects":[[75.5212631225586,80.04638671875,438.9240493774414,12.5],[75.5212631225586,95.05230712890625,204.83121490478516,12.5]],"start":0,"text":"后置自增运算符需要把原来变量的值复制到一个临时的存储空间，等运算结束后才会返回这个临时变量\n的值。所以前置自增运算符效率比后置自增要高"}],"type":5,"uuid":"9333ba039849e45bf4111ac2949cd32d"}],"originaltext":"++a和a++有什么区别？两者是如何实现的？","page":36,"textblocks":[{"first":[75.52127075195312,666.2415771484375,6.961822509765625,15.5],"last":[300.98193359375,666.2415771484375,12.19232177734375,15.5],"length":22,"rects":[[75.52127075195312,666.2415771484375,237.65298461914062,15.5]],"start":824,"text":"++a和a++有什么区别？两者是如何实现的？"}],"type":5,"uuid":"c4d612407acf9a1e9097795cf1a2e55c"}],"originaltext":"嵌入式知识点总结","page":28,"textblocks":[{"first":[75.52165222167969,328.14862060546875,21.9462890625,24.5],"last":[229.1456756591797,328.14862060546875,21.9462890625,24.5],"length":8,"rects":[[75.52165222167969,328.14862060546875,175.5703125,24.5]],"start":211,"text":"嵌入式知识点总结"}],"type":5,"uuid":"f78687d55c66df35121002ace2537dc8"},{"date":"2023-07-13 19:02:49","docid":0,"fillcolor":"fffeeb73","id":41,"markups":[{"date":"2023-07-13 19:03:01","docid":0,"fillcolor":"fffeeb73","id":42,"originaltext":"1. 静态存储区分配","page":37,"textblocks":[{"first":[87.52598571777344,309.39923095703125,5.5792083740234375,13.5],"last":[156.55331420898438,309.39923095703125,9.753860473632812,13.5],"length":10,"rects":[[87.52598571777344,309.39923095703125,78.78118896484375,13.5]],"start":89,"text":"1. 静态存储区分配"}],"type":5,"uuid":"9e4d954c02d1e6b3ba5c697e666799b1"},{"date":"2023-07-13 19:03:03","docid":0,"fillcolor":"fffeeb73","id":43,"originaltext":"2. 栈上分配","page":37,"textblocks":[{"first":[87.5259780883789,355.1170959472656,5.5792083740234375,13.5],"last":[127.2917251586914,355.1170959472656,9.753868103027344,13.5],"length":7,"rects":[[87.5259780883789,355.1170959472656,49.519615173339844,13.5]],"start":143,"text":"2. 栈上分配"}],"type":5,"uuid":"36e19ace28175a95d0cd185b976edf3a"},{"date":"2023-07-13 19:03:05","docid":0,"fillcolor":"fffeeb73","id":44,"originaltext":"3. 堆上分配","page":37,"textblocks":[{"first":[87.5259780883789,400.8852233886719,5.5792083740234375,13.5],"last":[127.2917251586914,400.8852233886719,9.753868103027344,13.5],"length":7,"rects":[[87.5259780883789,400.8852233886719,49.519615173339844,13.5]],"start":196,"text":"3. 堆上分配"}],"type":5,"uuid":"0811a4a51416e618d583dde8dd775064"}],"originaltext":"内存","page":37,"textblocks":[{"first":[75.5212631225586,254.62872314453125,14.630790710449219,17.5],"last":[90.15206146240234,254.62872314453125,14.630790710449219,17.5],"length":2,"rects":[[75.5212631225586,254.62872314453125,29.26158905029297,17.5]],"start":68,"text":"内存"}],"type":5,"uuid":"8354552ec90f88e02bf8dd29f793c2ee"},{"date":"2023-07-13 19:11:29","docid":0,"fillcolor":"fffeeb73","id":45,"markups":[{"date":"2023-07-13 19:13:02","docid":0,"fillcolor":"fffeeb73","id":47,"originaltext":"1. 申请方式","page":37,"textblocks":[{"first":[87.52598571777344,452.2054138183594,5.5792083740234375,13.5],"last":[127.2917251586914,452.2054138183594,9.753868103027344,13.5],"length":7,"rects":[[87.52598571777344,452.2054138183594,49.51960754394531,13.5]],"start":215,"text":"1. 申请方式"}],"type":5,"uuid":"824c3e934b723e9d73901172fc576371"},{"date":"2023-07-13 19:13:03","docid":0,"fillcolor":"fffeeb73","id":48,"markups":[{"date":"2023-07-13 19:13:56","docid":0,"fillcolor":"fffeeb73","id":53,"originaltext":"栈空间有限。在Windows下,栈是向低地址扩展的数据结 构","page":37,"textblocks":[{"first":[98.03014373779297,506.97711181640625,9.753860473632812,12.5],"last":[339.61761474609375,506.97711181640625,9.753875732421875,12.5],"length":30,"rects":[[98.03014373779297,506.97711181640625,251.34134674072266,12.5]],"start":265,"text":"栈空间有限。在Windows下,栈是向低地址扩展的数据结 构"}],"type":5,"uuid":"aca876e16288adecc7729d7d13761f7e"},{"date":"2023-07-13 19:14:09","docid":0,"fillcolor":"fffeeb73","id":54,"originaltext":"堆是很大的自由存储区。堆是向高地址扩展的数据结构，是不连续的内存区域。这是由于系统是用链表来存储的空闲内存地址的，自然是不连续的","page":37,"textblocks":[{"first":[98.0301284790039,573.2529907226562,9.753860473632812,12.5],"last":[293.10748291015625,587.2589111328125,9.753875732421875,12.5],"length":65,"rects":[[98.0301284790039,573.2529907226562,419.41634368896484,12.5],[98.0301284790039,587.2589111328125,204.83123016357422,12.5]],"start":426,"text":"堆是很大的自由存储区。堆是向高地址扩展的数据结构，是不连续的内存区域。这是由于系统是用\n链表来存储的空闲内存地址的，自然是不连续的"}],"type":5,"uuid":"e886424b41a52551c8dc39802091fdfc"}],"originaltext":"2. 申请大小的限制","page":37,"textblocks":[{"first":[87.52598571777344,491.9711608886719,5.5792083740234375,12.5],"last":[156.55331420898438,491.9711608886719,9.753860473632812,12.5],"length":10,"rects":[[87.52598571777344,491.9711608886719,78.78118896484375,12.5]],"start":254,"text":"2. 申请大小的限制"}],"type":5,"uuid":"7300bdc4628aac94404262c2f8080693"},{"date":"2023-07-13 19:13:15","docid":0,"fillcolor":"fffeeb73","id":50,"markups":[{"date":"2023-07-13 19:13:36","docid":0,"fillcolor":"fffeeb73","id":51,"originaltext":"栈由系统自动分配，速度较快。","page":37,"textblocks":[{"first":[98.0301284790039,636.778564453125,9.753860473632812,12.5],"last":[224.83041381835938,636.778564453125,9.753860473632812,12.5],"length":14,"rects":[[98.0301284790039,636.778564453125,136.55414581298828,12.5]],"start":562,"text":"栈由系统自动分配，速度较快。"}],"type":5,"uuid":"48108e303264f0a1459cb90ee78536a3"},{"date":"2023-07-13 19:13:37","docid":0,"fillcolor":"fffeeb73","id":52,"originaltext":"堆是由new分配的内存，一般速度比较慢，而且容易产生内存碎片,不过用起来最方便.","page":37,"textblocks":[{"first":[98.0301284790039,657.0365600585938,9.753860473632812,12.5],"last":[460.8545227050781,657.0365600585938,2.594512939453125,12.5],"length":40,"rects":[[98.0301284790039,657.0365600585938,365.41890716552734,12.5]],"start":588,"text":"堆是由new分配的内存，一般速度比较慢，而且容易产生内存碎片,不过用起来最方便."}],"type":5,"uuid":"418b03ef168dbb7c03d2b2ff8bb62d1c"}],"originaltext":"3. 申请效率","page":37,"textblocks":[{"first":[87.52597045898438,621.7725830078125,5.5792083740234375,12.5],"last":[127.29170989990234,621.7725830078125,9.753868103027344,12.5],"length":7,"rects":[[87.52597045898438,621.7725830078125,49.51960754394531,12.5]],"start":554,"text":"3. 申请效率"}],"type":5,"uuid":"c3fc4074342913b4ed297933b3e96b6f"}],"originaltext":"堆与栈有什么区别？","page":37,"textblocks":[{"first":[75.52122497558594,424.44561767578125,12.192329406738281,15.5],"last":[173.05987548828125,424.44561767578125,12.19232177734375,15.5],"length":9,"rects":[[75.52122497558594,424.44561767578125,109.73097229003906,15.5]],"start":204,"text":"堆与栈有什么区别？"}],"type":5,"uuid":"d513ba9c557f83cd86da484250b7a6d5"}],"maxid":54,"notelinks":[],"scalingratio":90,"summaries":[],"title":"嵌入式软件开发笔试面试指南-已解锁(1)","unimportant":[]}