{"EpubVersion":2,"filepath":"","floatingtheme":[],"folded":false,"markups":[{"date":"2023-04-11 21:40:15","docid":0,"fillcolor":"fffeeb73","id":24,"markups":[{"date":"2023-04-11 17:07:55","docid":0,"fillcolor":"fffeeb73","id":1,"originaltext":"这个指令隐式的定义了两个 cmake 变量:<projectname>_BINARY_DIR 以及<projectname>_SOURCE_DIR","page":7,"textblocks":[{"first":[212.8000030517578,359.1187438964844,12,13.5],"last":[422.823974609375,372.7613220214844,7.2239990234375,13.96875],"length":74,"rects":[[212.8000030517578,359.1187438964844,216.22398376464844,13.5],[56.79999923706055,372.7613220214844,373.24797439575195,13.96875]],"start":497,"text":"这个指令隐式的定义了两个 cmake 变量:\n<projectname>_BINARY_DIR 以及<projectname>_SOURCE_DIR"}],"type":5,"uuid":"e2e405834ae93069f058d45d71231696"},{"date":"2023-04-11 19:37:08","docid":0,"fillcolor":"fffeeb73","id":2,"originaltext":"通过外部编译进行工程构建，HELLO_SOURCE_DIR 仍然指代工程路径，即/backup/cmake/t1而 HELLO_BINARY_DIR 则指代编译路径，即/backup/cmake/t1/build","page":11,"textblocks":[{"first":[56.79999923706055,77.1187744140625,12.000003814697266,13.5],"last":[448.97198486328125,110.7613525390625,7.2239990234375,13.96875],"length":108,"rects":[[56.79999923706055,77.1187744140625,393.9999885559082,13.5],[56.79999923706055,90.7613525390625,115.64799880981445,13.96875],[56.79999923706055,110.7613525390625,399.3959846496582,13.96875]],"start":12,"text":"通过外部编译进行工程构建，HELLO_SOURCE_DIR 仍然指代工程路径，即\n/backup/cmake/t1\n而 HELLO_BINARY_DIR 则指代编译路径，即/backup/cmake/t1/build"}],"type":5,"uuid":"a0bcc703e82f9ced192a7af03e63b0ba"},{"date":"2023-04-12 13:03:39","docid":0,"fillcolor":"fffeeb73","id":42,"originaltext":"如果你需要看到 make 构建的详细过程，可以使用 make VERBOSE=1 或者 VERBOSE=1 make 命令来进行构建","page":6,"textblocks":[{"first":[56.79999923706055,624.7613525390625,12.000003814697266,13.96875],"last":[160.10000610351562,639.1187744140625,12,13.5],"length":67,"rects":[[56.79999923706055,624.7613525390625,466.32402420043945,13.96875],[56.79999923706055,639.1187744140625,115.30000686645508,13.5]],"start":880,"text":"如果你需要看到 make 构建的详细过程，可以使用 make VERBOSE=1 或者 VERBOSE=1 \nmake 命令来进行构建"}],"type":5,"uuid":"8e93f61a84f9ceaf31014ffe5761fcae"}],"originaltext":"三，初试 cmake – cmake 的 helloworld","page":5,"textblocks":[{"first":[56.79999923706055,56.7484130859375,16.000003814697266,18.625],"last":[365.0999755859375,56.7484130859375,9.631988525390625,18.625],"length":31,"rects":[[56.79999923706055,56.7484130859375,317.9319648742676,18.625]],"start":0,"text":"三，初试 cmake – cmake 的 helloworld"}],"type":5,"uuid":"a28ba1c359b146a785cb9c7aa8fbadba"},{"date":"2023-04-11 21:41:33","docid":0,"fillcolor":"fffeeb73","id":25,"markups":[{"date":"2023-04-11 21:43:21","docid":0,"fillcolor":"fffeeb73","id":26,"markups":[{"date":"2023-04-11 19:47:42","docid":0,"fillcolor":"fffeeb73","id":3,"originaltext":"ADD_SUBDIRECTORY(source_dir [binary_dir] [EXCLUDE_FROM_ALL])这个指令用于向当前工程添加存放源文件的子目录，并可以指定中间二进制和目标二进制存放的位置。EXCLUDE_FROM_ALL 参数的含义是将这个目录从编译过程中排除","page":13,"textblocks":[{"first":[56.79999923706055,136.7613525390625,7.224002838134766,13.96875],"last":[450.79998779296875,171.1187744140625,12,13.5],"length":143,"rects":[[56.79999923706055,136.7613525390625,433.5479621887207,13.96875],[56.79999923706055,157.1187744140625,479.9999885559082,13.5],[56.79999923706055,171.1187744140625,405.9999885559082,13.5]],"start":26,"text":"ADD_SUBDIRECTORY(source_dir [binary_dir] [EXCLUDE_FROM_ALL])\n这个指令用于向当前工程添加存放源文件的子目录，并可以指定中间二进制和目标二进制存\n放的位置。EXCLUDE_FROM_ALL 参数的含义是将这个目录从编译过程中排除"}],"type":5,"uuid":"92e6afa0f722243f605d71d63d9fbdda"}],"originaltext":"2，添加子目录 src：","page":12,"textblocks":[{"first":[56.79999923706055,429.71875,7.224002838134766,13.5],"last":[160.1999969482422,429.71875,12,13.5],"length":12,"rects":[[56.79999923706055,429.71875,115.39999771118164,13.5]],"start":493,"text":"2，添加子目录 src："}],"type":5,"uuid":"b71cb6c061c23cb5bbcd386b6f1493a7"},{"date":"2023-04-11 21:43:35","docid":0,"fillcolor":"fffeeb73","id":27,"markups":[{"date":"2023-04-11 20:57:50","docid":0,"fillcolor":"fffeeb73","id":4,"originaltext":"我们都可以通过 SET 指令重新定义 EXECUTABLE_OUTPUT_PATH 和 LIBRARY_OUTPUT_PATH 变量来指定最终的目标二进制的位置","page":13,"textblocks":[{"first":[487.1000061035156,453.63592529296875,12,15.330078125],"last":[212.8000030517578,483.1187438964844,12,13.5],"length":82,"rects":[[487.1000061035156,453.63592529296875,47.999969482421875,15.330078125],[56.79999923706055,468.7613220214844,476.4000129699707,13.96875],[56.79999923706055,483.1187438964844,168.00000381469727,13.5]],"start":698,"text":"我们都可\n以通过 SET 指令重新定义 EXECUTABLE_OUTPUT_PATH 和 LIBRARY_OUTPUT_PATH 变量\n来指定最终的目标二进制的位置"}],"type":5,"uuid":"52ac7fdfac2bab9507ac0cb147b0d4ea"}],"originaltext":"3，换个地方保存目标二进制","page":13,"textblocks":[{"first":[56.79999923706055,435.1187438964844,7.224002838134766,13.5],"last":[196.10000610351562,435.1187438964844,12,13.5],"length":13,"rects":[[56.79999923706055,435.1187438964844,151.30000686645508,13.5]],"start":635,"text":"3，换个地方保存目标二进制"}],"type":5,"uuid":"50c0a413322ef2592a372e1477cd0aed"},{"date":"2023-04-11 21:43:55","docid":0,"fillcolor":"fffeeb73","id":28,"markups":[{"date":"2023-04-11 21:17:17","docid":0,"id":6,"imgfile":"7b05a5b05171c74cbaf2ff9bbf59688a.png","linecolor":"ffa0ec6f","linewidth":2,"page":15,"rect":[98.823705261511,90.99011886883025,468.2074328548417,274.778107312494],"type":2,"uuid":"d60f7fdaabf52324f235a7eacda677bb"},{"date":"2023-04-11 21:17:53","docid":0,"id":7,"imgfile":"9f40d005388b124e3ef2ab1ede3788a3.png","linecolor":"ffa0ec6f","linewidth":2,"page":16,"rect":[50.01443619942325,224.161087544403,468.81001642350947,351.30622053329824],"type":2,"uuid":"988d3372f4b10173b91f66232477abc8"},{"date":"2023-04-11 21:18:01","docid":0,"id":8,"imgfile":"bdd4cf8ecb47ba33d9ce62f18cd618d0.png","linecolor":"ffa0ec6f","linewidth":2,"page":16,"rect":[92.7978695748335,39.167931963403745,483.2720220715355,156.06914428494724],"type":2,"uuid":"8a057f20c56f694844671913b8d763c9"},{"date":"2023-04-11 21:18:12","docid":0,"id":9,"imgfile":"68cab5522bee1bd97d5203c0a9d2c468.png","linecolor":"ffa0ec6f","linewidth":2,"page":16,"rect":[101.234039536182,403.7309910073925,492.91335917021945,582.0957273330465],"type":2,"uuid":"5207eefe7db1df4628cacb7e62d3ac5e"}],"originaltext":"4，如何安装。","page":14,"textblocks":[{"first":[56.79999923706055,117.1187744140625,7.224002838134766,13.5],"last":[124.0999984741211,117.1187744140625,12.000007629394531,13.5],"length":7,"rects":[[56.79999923706055,117.1187744140625,79.30000686645508,13.5]],"start":38,"text":"4，如何安装。"}],"type":5,"uuid":"497705c899b978e32b35f7fdd86b4f4a"},{"date":"2023-04-11 21:45:38","docid":0,"fillcolor":"fffeeb73","id":29,"markups":[{"date":"2023-04-11 21:46:18","docid":0,"fillcolor":"fffeeb73","id":31,"markups":[{"date":"2023-04-11 21:46:11","docid":0,"fillcolor":"fffeeb73","id":30,"originaltext":"cmake -DCMAKE_INSTALL_PREFIX=/tmp/t2/usr","page":18,"textblocks":[{"first":[56.79999923706055,626.7613525390625,7.224002838134766,13.96875],"last":[338.62396240234375,626.7613525390625,7.2239990234375,13.96875],"length":40,"rects":[[56.79999923706055,626.7613525390625,289.0479621887207,13.96875]],"start":833,"text":"cmake -DCMAKE_INSTALL_PREFIX=/tmp/t2/usr"}],"type":5,"uuid":"127f99e15944cc9bbbbd2ded84a62c26"}],"originaltext":"现在进入 build 目录进行外部编译，注意使用 CMAKE_INSTALL_PREFIX 参数，这里我们将它安装到了/tmp/t2 目录：","page":18,"textblocks":[{"first":[56.79999923706055,591.635986328125,12.000003814697266,15.330078125],"last":[205.8000030517578,607.1187744140625,12,13.5],"length":71,"rects":[[56.79999923706055,591.635986328125,478.29997634887695,15.330078125],[56.79999923706055,607.1187744140625,161.00000381469727,13.5]],"start":761,"text":"现在进入 build 目录进行外部编译，注意使用 CMAKE_INSTALL_PREFIX 参数，这里我们\n将它安装到了/tmp/t2 目录："}],"type":5,"uuid":"65c89f0784dbe7ce9ce2ee19c42f9152"},{"date":"2023-04-11 21:16:38","docid":0,"fillcolor":"fffeeb73","id":5,"originaltext":"如果我没有定义 CMAKE_INSTALL_PREFIX 会安装到什么地方？你可以尝试以下，cmake ..;make;make install，你会发现CMAKE_INSTALL_PREFIX 的默认定义是/usr/local","page":19,"textblocks":[{"first":[56.79999923706055,276.7613525390625,12.000003814697266,13.96875],"last":[340.7720031738281,310.7613525390625,7.2239990234375,13.96875],"length":116,"rects":[[56.79999923706055,276.7613525390625,341.3000068664551,13.96875],[56.79999923706055,296.7613525390625,343.9000129699707,13.96875],[56.79999923706055,310.7613525390625,291.1960029602051,13.96875]],"start":263,"text":"如果我没有定义 CMAKE_INSTALL_PREFIX 会安装到什么地方？\n你可以尝试以下，cmake ..;make;make install，你会发现\nCMAKE_INSTALL_PREFIX 的默认定义是/usr/local"}],"type":5,"uuid":"006924473560c92e1ceeabb204d1f2e6"}],"originaltext":"6，尝试我们修改的结果：","page":18,"textblocks":[{"first":[56.79999923706055,573.1187744140625,7.224002838134766,13.5],"last":[184.10000610351562,573.1187744140625,12,13.5],"length":12,"rects":[[56.79999923706055,573.1187744140625,139.30000686645508,13.5]],"start":748,"text":"6，尝试我们修改的结果："}],"type":5,"uuid":"1198cfc453eab1f51d651b2d3f8c32c7"}],"originaltext":"四，更好一点的 Hello World","page":12,"position":{"x":390,"y":1292},"textblocks":[{"first":[56.79999923706055,56.7484130859375,16.000003814697266,18.625],"last":[277.7319641113281,56.7484130859375,9.631988525390625,18.625],"length":19,"rects":[[56.79999923706055,56.7484130859375,230.5639533996582,18.625]],"start":0,"text":"四，更好一点的 Hello World"}],"type":5,"uuid":"0ebcc507be9120784a547fe8ed140876"},{"date":"2023-04-11 21:38:48","docid":0,"fillcolor":"fffeeb73","id":21,"markups":[{"date":"2023-04-11 21:39:26","docid":0,"fillcolor":"fffeeb73","id":22,"originaltext":"一，准备工作：","page":20,"textblocks":[{"first":[56.79999923706055,269.71875,12.000003814697266,13.5],"last":[128.8000030517578,269.71875,12,13.5],"length":7,"rects":[[56.79999923706055,269.71875,84.00000381469727,13.5]],"start":193,"text":"一，准备工作："}],"type":5,"uuid":"99d5ae4d3a1df0b491ee3933dd28c5ec"},{"date":"2023-04-11 21:39:29","docid":0,"fillcolor":"fffeeb73","id":23,"originaltext":"二，建立共享库","page":20,"textblocks":[{"first":[56.79999923706055,329.71875,12.000003814697266,13.5],"last":[128.8000030517578,329.71875,12,13.5],"length":7,"rects":[[56.79999923706055,329.71875,84.00000381469727,13.5]],"start":240,"text":"二，建立共享库"}],"type":5,"uuid":"973485696603cdcef0459d13f67e8f42"},{"date":"2023-04-11 21:32:53","docid":0,"fillcolor":"fffeeb73","id":10,"markups":[{"date":"2023-04-11 21:33:02","docid":0,"id":11,"imgfile":"1a69026bcf00df6929275ddd5c427cce.png","linecolor":"ffa0ec6f","linewidth":2,"page":21,"rect":[110.27279306619825,376.61473041734376,471.8229342668482,436.87308728411875],"type":2,"uuid":"2393bcb769cdc27beb4c59f1abac529e"}],"originaltext":"三，编译共享库:","page":21,"textblocks":[{"first":[56.79999923706055,117.1187744140625,12.000003814697266,13.5],"last":[140.8000030517578,117.1187744140625,7.2239990234375,13.5],"length":8,"rects":[[56.79999923706055,117.1187744140625,91.22400283813477,13.5]],"start":68,"text":"三，编译共享库:"}],"type":5,"uuid":"90118a75a58126abdd363411b3414162"},{"date":"2023-04-11 21:33:08","docid":0,"fillcolor":"fffeeb73","id":12,"markups":[{"date":"2023-04-11 21:33:22","docid":0,"fillcolor":"fffeeb73","id":13,"originaltext":"因为 hello 作为一个 target 是不能重名的，所以，静态库构建指令无效","page":22,"textblocks":[{"first":[128.8000030517578,91.1187744140625,12,13.5],"last":[505.8999938964844,91.1187744140625,12.000030517578125,13.5],"length":40,"rects":[[128.8000030517578,91.1187744140625,389.1000213623047,13.5]],"start":50,"text":"因为 hello 作为一个 target 是不能重名的，所以，静态库构建指令无效"}],"type":5,"uuid":"80d1c938e9027c1bdcf00ff8b9304e60"},{"date":"2023-04-11 21:33:27","docid":0,"id":14,"imgfile":"146d39d28f71ecaeeeb467dd396daf1e.png","linecolor":"ffa0ec6f","linewidth":2,"markups":[{"date":"2023-04-11 21:34:03","docid":0,"fillcolor":"fffeeb73","id":15,"originaltext":"在本例中，我们需要作的是向 lib/CMakeLists.txt 中添加一条：SET_TARGET_PROPERTIES(hello_static PROPERTIES OUTPUT_NAME \"hello\")这样，我们就可以同时得到 libhello.so/libhello.a 两个库了。","page":22,"textblocks":[{"first":[56.79999923706055,457.63592529296875,12.000003814697266,15.330078125],"last":[412.6000061035156,498.7613220214844,12,13.968780517578125],"length":148,"rects":[[56.79999923706055,457.63592529296875,362.9000129699707,15.330078125],[56.79999923706055,478.7613220214844,476.8959846496582,13.96875],[56.79999923706055,498.7613220214844,367.8000068664551,13.968780517578125]],"start":517,"text":"在本例中，我们需要作的是向 lib/CMakeLists.txt 中添加一条：\nSET_TARGET_PROPERTIES(hello_static PROPERTIES OUTPUT_NAME \"hello\")\n这样，我们就可以同时得到 libhello.so/libhello.a 两个库了。"}],"type":5,"uuid":"54b33142c51a2d0867f0dd69ca2b10a1"}],"page":22,"rect":[44.5911840814135,127.747716557563,406.14132528206346,188.60865699300575],"type":2,"uuid":"3dc24bf374555ceeea88fa90127519b7"},{"date":"2023-04-11 21:35:16","docid":0,"fillcolor":"fffeeb73","group":[{"date":"2023-04-11 21:35:16","docid":0,"fillcolor":"fffeeb73","id":17,"originaltext":"","page":23,"textblocks":[{"first":[56.79999923706055,57.1187744140625,12.000003814697266,13.5],"last":[198.72398376464844,70.7613525390625,7.2239990234375,13.96875],"length":69,"rects":[[56.79999923706055,57.1187744140625,485.20000076293945,13.5],[56.79999923706055,70.7613525390625,149.1479835510254,13.96875]],"start":0,"text":"个新的 target 时，会尝试清理掉其他使用这个名字的库，因为，在构建 libhello.a 时，\n就会清理掉 libhello.so."}],"type":5,"uuid":"c75fe24fa910acf9fdc35279013614ca"}],"id":16,"markups":[{"date":"2023-04-11 21:35:51","docid":0,"id":18,"imgfile":"3909786814966732b75146fb1ce7bc1e.png","linecolor":"ffa0ec6f","linewidth":2,"page":23,"rect":[43.98860051274575,122.32446443955324,547.1458803503169,198.24999409168976],"type":2,"uuid":"54b15fe8d717326355782007a52e5c9d"}],"originaltext":"cmake 在构建一\n个新的 target 时，会尝试清理掉其他使用这个名字的库，因为，在构建 libhello.a 时，就会清理掉 libhello.so.","page":22,"textblocks":[{"first":[448.6000061035156,765.635986328125,7.2239990234375,15.330078125],"last":[0,0,0,0],"length":11,"rects":[[448.6000061035156,765.635986328125,86.49996948242188,15.330078125],[448.6000061035156,765.635986328125,86.49996948242188,15.330078125]],"start":995,"text":"cmake 在构建一\n"}],"type":5,"uuid":"31f3a6946afb049d02d9bb985c61a137"}],"originaltext":"四，添加静态库：","page":21,"textblocks":[{"first":[56.79999923706055,667.1187744140625,12.000003814697266,13.5],"last":[140.8000030517578,667.1187744140625,12,13.5],"length":8,"rects":[[56.79999923706055,667.1187744140625,96.00000381469727,13.5]],"start":728,"text":"四，添加静态库："}],"type":5,"uuid":"b90c44073862cd1e736cec6b5b71647f"},{"date":"2023-04-11 21:38:24","docid":0,"fillcolor":"fffeeb73","id":19,"markups":[{"date":"2023-04-11 21:47:47","docid":0,"fillcolor":"fffeeb73","id":34,"originaltext":"SET_TARGET_PROPERTIES(hello PROPERTIES VERSION 1.2 SOVERSION 1)VERSION 指代动态库版本，SOVERSION 指代 API 版本。","page":23,"textblocks":[{"first":[56.79999923706055,452.7613220214844,7.224002838134766,13.96875],"last":[347.79998779296875,472.7613220214844,12,13.96875],"length":100,"rects":[[56.79999923706055,452.7613220214844,455.24797439575195,13.96875],[56.79999923706055,472.7613220214844,302.9999885559082,13.96875]],"start":534,"text":"SET_TARGET_PROPERTIES(hello PROPERTIES VERSION 1.2 SOVERSION 1)\nVERSION 指代动态库版本，SOVERSION 指代 API 版本。"}],"type":5,"uuid":"48c0f1bac74608b6c90db1e218ff3b78"}],"originaltext":"五，动态库版本号","page":23,"textblocks":[{"first":[56.79999923706055,293.1187744140625,12.000003814697266,13.5],"last":[140.8000030517578,293.1187744140625,12,13.5],"length":8,"rects":[[56.79999923706055,293.1187744140625,96.00000381469727,13.5]],"start":354,"text":"五，动态库版本号"}],"type":5,"uuid":"112d244b73370e3c7c11f91fa127daa8"},{"date":"2023-04-11 21:51:12","docid":0,"fillcolor":"fffeeb73","id":37,"markups":[{"date":"2023-04-11 21:52:47","docid":0,"fillcolor":"fffeeb73","group":[{"date":"2023-04-11 21:52:47","docid":0,"fillcolor":"fffeeb73","id":39,"originaltext":"","page":24,"textblocks":[{"first":[92.30000305175781,56.7613525390625,7.2239990234375,13.96875],"last":[258.4960021972656,76.7613525390625,7.2239990234375,13.96875],"length":49,"rects":[[92.30000305175781,56.7613525390625,173.4239959716797,13.96875],[92.30000305175781,76.7613525390625,173.4199981689453,13.96875]],"start":0,"text":"LIBRARY DESTINATION lib \nARCHIVE DESTINATION lib)"}],"type":5,"uuid":"c8dee25b914508febdc9cf06bd445c40"}],"id":38,"originaltext":"INSTALL(TARGETS hello hello_static \nLIBRARY DESTINATION lib ARCHIVE DESTINATION lib)","page":23,"textblocks":[{"first":[56.79999923706055,760.7613525390625,7.224002838134766,13.96875],"last":[0,0,0,0],"length":36,"rects":[[56.79999923706055,760.7613525390625,252.92396926879883,13.96875],[56.79999923706055,760.7613525390625,252.92396926879883,13.96875]],"start":982,"text":"INSTALL(TARGETS hello hello_static \n"}],"type":5,"uuid":"60c9f6d123102587c7e1fd7c0c24749d"},{"date":"2023-04-11 21:52:57","docid":0,"fillcolor":"fffeeb73","id":40,"originaltext":"INSTALL(FILES hello.h DESTINATION include/hello)","page":24,"textblocks":[{"first":[56.79999923706055,116.7613525390625,7.224002838134766,13.96875],"last":[396.4239807128906,116.7613525390625,7.2239990234375,13.96875],"length":48,"rects":[[56.79999923706055,116.7613525390625,346.8479804992676,13.96875]],"start":50,"text":"INSTALL(FILES hello.h DESTINATION include/hello)"}],"type":5,"uuid":"850115ac2f51f308e0ae86eac118dea8"}],"originaltext":"六，安装共享库和头文件","page":23,"position":{"x":448,"y":1611},"textblocks":[{"first":[56.79999923706055,633.1187744140625,12.000003814697266,13.5],"last":[176.8000030517578,633.1187744140625,12,13.5],"length":11,"rects":[[56.79999923706055,633.1187744140625,132.00000381469727,13.5]],"start":768,"text":"六，安装共享库和头文件"}],"type":5,"uuid":"e7e0f4d48317f4c2b7560573487b0f2c"}],"originaltext":"五，静态库与动态库构建","page":20,"textblocks":[{"first":[56.79999923706055,57.2249755859375,16.000003814697266,18],"last":[230.10000610351562,57.2249755859375,16,18],"length":11,"rects":[[56.79999923706055,57.2249755859375,189.30000686645508,18]],"start":0,"text":"五，静态库与动态库构建"}],"type":5,"uuid":"45bc1ef5c1bce21e5c4517bb8bb25427"},{"date":"2023-04-11 21:53:39","docid":0,"fillcolor":"fffeeb73","id":41,"markups":[{"date":"2023-04-12 16:39:49","docid":0,"fillcolor":"fffeeb73","id":44,"markups":[{"date":"2023-04-12 16:39:54","docid":0,"fillcolor":"fffeeb73","id":45,"markups":[{"date":"2023-04-12 17:09:44","docid":0,"fillcolor":"fffeeb73","id":47,"markups":[{"date":"2023-04-12 17:09:33","docid":0,"fillcolor":"fffeeb73","id":46,"originaltext":"１，CMAKE_INCLUDE_DIRECTORIES_BEFORE，通过 SET 这个 cmake 变量为 on，可以将添加的头文件搜索路径放在已有路径的前面","page":26,"textblocks":[{"first":[56.79999923706055,246.7613525390625,12.000003814697266,13.96875],"last":[284.79998779296875,261.1187744140625,12,13.5],"length":81,"rects":[[56.79999923706055,246.7613525390625,471.4999885559082,13.96875],[56.79999923706055,261.1187744140625,239.9999885559082,13.5]],"start":404,"text":"１，CMAKE_INCLUDE_DIRECTORIES_BEFORE，通过 SET 这个 cmake 变量为 on，可以\n将添加的头文件搜索路径放在已有路径的前面"}],"type":5,"uuid":"d613055d539412543f2a53de44620720"},{"date":"2023-04-12 17:09:50","docid":0,"fillcolor":"fffeeb73","id":48,"originaltext":"２，通过 AFTER 或者 BEFORE 参数，也可以控制是追加还是置前。","page":26,"textblocks":[{"first":[56.79999923706055,281.1187744140625,12.000003814697266,13.5],"last":[397.8999938964844,281.1187744140625,12,13.5],"length":37,"rects":[[56.79999923706055,281.1187744140625,353.0999946594238,13.5]],"start":487,"text":"２，通过 AFTER 或者 BEFORE 参数，也可以控制是追加还是置前。"}],"type":5,"uuid":"46fbc3309c64842d5c7f907d9a3ef0b1"}],"originaltext":"两种方式来进行控制搜索路径添加的方式","page":26,"textblocks":[{"first":[152.8000030517578,227.1187744140625,12,13.5],"last":[356.79998779296875,227.1187744140625,12,13.5],"length":18,"rects":[[152.8000030517578,227.1187744140625,215.99998474121094,13.5]],"start":384,"text":"两种方式来进行控制搜索路径添加的方式"}],"type":5,"uuid":"cb05080b5e1f67560cba31f0247b907e"}],"originaltext":"INCLUDE_DIRECTORIES([AFTER|BEFORE] [SYSTEM] dir1 dir2 ...)","page":26,"textblocks":[{"first":[56.79999923706055,178.7613525390625,7.224002838134766,13.96875],"last":[468.6959533691406,178.7613525390625,7.2239990234375,13.96875],"length":58,"rects":[[56.79999923706055,178.7613525390625,419.1199531555176,13.96875]],"start":235,"text":"INCLUDE_DIRECTORIES([AFTER|BEFORE] [SYSTEM] dir1 dir2 ...)"}],"type":5,"uuid":"9fd59fee7f791716ec83b0574fc6f3dc"}],"originaltext":"４，引入头文件搜索路径。","page":26,"textblocks":[{"first":[56.79999923706055,57.1187744140625,12.000003814697266,13.5],"last":[188.8000030517578,57.1187744140625,12,13.5],"length":12,"rects":[[56.79999923706055,57.1187744140625,144.00000381469727,13.5]],"start":0,"text":"４，引入头文件搜索路径。"}],"type":5,"uuid":"414ec7ba46c57a793cb53fbea9444828"},{"date":"2023-04-12 17:11:05","docid":0,"fillcolor":"fffeeb73","id":50,"markups":[{"date":"2023-04-12 17:11:10","docid":0,"fillcolor":"fffeeb73","id":51,"markups":[{"date":"2023-04-12 17:11:46","docid":0,"fillcolor":"fffeeb73","id":53,"originaltext":"添加非标准的共享库搜索路径","page":26,"textblocks":[{"first":[164.8000030517578,615.1187744140625,12,13.5],"last":[308.79998779296875,615.1187744140625,12,13.5],"length":13,"rects":[[164.8000030517578,615.1187744140625,155.99998474121094,13.5]],"start":935,"text":"添加非标准的共享库搜索路径"}],"type":5,"uuid":"a9b3d7b1ea56438352b7481c245b8186"}],"originaltext":"LINK_DIRECTORIES(directory1 directory2 ...)","page":26,"textblocks":[{"first":[56.79999923706055,594.7613525390625,7.224002838134766,13.96875],"last":[360.2999572753906,594.7613525390625,7.2239990234375,13.96875],"length":43,"rects":[[56.79999923706055,594.7613525390625,310.7239570617676,13.96875]],"start":882,"text":"LINK_DIRECTORIES(directory1 directory2 ...)"}],"type":5,"uuid":"8d1895f030acbd319f5b19bb9a2a3ac2"},{"date":"2023-04-12 17:11:36","docid":0,"fillcolor":"fffeeb73","id":52,"markups":[{"date":"2023-04-12 17:11:54","docid":0,"fillcolor":"fffeeb73","id":54,"originaltext":"这个指令可以用来为 target 添加需要链接的共享库","page":26,"textblocks":[{"first":[56.79999923706055,763.1187744140625,12.000003814697266,13.5],"last":[321,763.1187744140625,12,13.5],"length":27,"rects":[[56.79999923706055,763.1187744140625,276.20000076293945,13.5]],"start":1157,"text":"这个指令可以用来为 target 添加需要链接的共享库"}],"type":5,"uuid":"adbc83f3eb19ddc3d81c9228220871c1"}],"originaltext":"TARGET_LINK_LIBRARIES 的全部语法是:TARGET_LINK_LIBRARIES(target library1                      <debug | optimized> library2                      ...)","page":26,"textblocks":[{"first":[56.79999923706055,682.7613525390625,7.224002838134766,13.96875],"last":[237.4720001220703,751.4000244140625,7.2239990234375,2.5],"length":145,"rects":[[56.79999923706055,682.7613525390625,233.42399978637695,13.96875],[56.79999923706055,702.7613525390625,267.37199783325195,13.96875],[56.79999923706055,722.7613525390625,361.2960090637207,13.96875],[56.79999923706055,751.4000244140625,187.89599990844727,2.5]],"start":1011,"text":"TARGET_LINK_LIBRARIES 的全部语法是:\nTARGET_LINK_LIBRARIES(target library1\n                      <debug | optimized> library2\n                      ...)"}],"type":5,"uuid":"24f165ed9ea934893672a772386299f1"}],"originaltext":"5，为 target 添加共享库","page":26,"textblocks":[{"first":[56.79999923706055,515.1187744140625,7.224002838134766,13.5],"last":[184.1999969482422,515.1187744140625,12,13.5],"length":16,"rects":[[56.79999923706055,515.1187744140625,139.39999771118164,13.5]],"start":754,"text":"5，为 target 添加共享库"}],"type":5,"uuid":"df6676b4119b6278085da2aac9119c05"},{"date":"2023-04-12 17:29:23","docid":0,"fillcolor":"fffeeb73","id":56,"markups":[{"date":"2023-04-12 17:44:02","docid":0,"fillcolor":"fffeeb73","id":82,"originaltext":"务必注意，这两个是环境变量而不是 cmake 变量。","page":28,"textblocks":[{"first":[56.79999923706055,157.1187744140625,12.000003814697266,13.5],"last":[313.79998779296875,157.1187744140625,12,13.5],"length":26,"rects":[[56.79999923706055,157.1187744140625,268.9999885559082,13.5]],"start":79,"text":"务必注意，这两个是环境变量而不是 cmake 变量。"}],"type":5,"uuid":"c0b089014b9d78fc5fcdf1b87ace4eda"}],"originaltext":"6，特殊的环境变量 CMAKE_INCLUDE_PATH 和 CMAKE_LIBRARY_PATH","page":28,"textblocks":[{"first":[56.79999923706055,116.7613525390625,7.224002838134766,13.96875],"last":[432.1719665527344,116.7613525390625,7.2239990234375,13.96875],"length":49,"rects":[[56.79999923706055,116.7613525390625,382.5959663391113,13.96875]],"start":29,"text":"6，特殊的环境变量 CMAKE_INCLUDE_PATH 和 CMAKE_LIBRARY_PATH"}],"type":5,"uuid":"3ddcdb64bc69072b85bb8a82b68b4f6e"}],"originaltext":"六，如何使用外部共享库和头文件","page":25,"textblocks":[{"first":[56.79999923706055,57.2249755859375,16.000003814697266,18],"last":[299.4999694824219,57.2249755859375,16,18],"length":15,"rects":[[56.79999923706055,57.2249755859375,258.6999702453613,18]],"start":0,"text":"六，如何使用外部共享库和头文件"}],"type":5,"uuid":"39da92f1cc7aaf2d4f85596f4bf08b99"},{"date":"2023-04-12 17:32:07","docid":0,"fillcolor":"fffeeb73","id":57,"markups":[{"date":"2023-04-12 17:32:49","docid":0,"fillcolor":"fffeeb73","id":58,"markups":[{"date":"2023-04-12 17:32:55","docid":0,"fillcolor":"fffeeb73","id":59,"originaltext":"使用${}进行变量的引用","page":30,"textblocks":[{"first":[176.8000030517578,121.71875,12,13.5],"last":[294.5,121.71875,12,13.5],"length":12,"rects":[[176.8000030517578,121.71875,129.6999969482422,13.5]],"start":47,"text":"使用${}进行变量的引用"}],"type":5,"uuid":"7d923ee810cbb27be1fb6239754fc099"}],"originaltext":"一，cmake 变量引用的方式","page":30,"textblocks":[{"first":[56.79999923706055,101.71875,12.000003814697266,13.5],"last":[191.39999389648438,101.71875,12,13.5],"length":15,"rects":[[56.79999923706055,101.71875,146.59999465942383,13.5]],"start":20,"text":"一，cmake 变量引用的方式"}],"type":5,"uuid":"f7a9763493088dabc84626b5a2aa5e04"},{"date":"2023-04-12 17:33:17","docid":0,"fillcolor":"fffeeb73","id":60,"markups":[{"date":"2023-04-12 17:33:24","docid":0,"fillcolor":"fffeeb73","id":61,"originaltext":"SET(HELLO_SRC main.SOURCE_PATHc)，就 PROJECT_BINARY_DIR 可以通过${HELLO_SRC}来引用这个自定义变量了.","page":30,"textblocks":[{"first":[56.79999923706055,283.361328125,7.224002838134766,13.96875],"last":[275.5,297.361328125,7.2239990234375,13.96875],"length":83,"rects":[[56.79999923706055,283.361328125,438.0999946594238,13.96875],[56.79999923706055,297.361328125,225.92399978637695,13.96875]],"start":261,"text":"SET(HELLO_SRC main.SOURCE_PATHc)，就 PROJECT_BINARY_DIR 可以通过\n${HELLO_SRC}来引用这个自定义变量了."}],"type":5,"uuid":"3c4ee1144568bfdace44baefd918ba93"}],"originaltext":"二，cmake 自定义变量的方式：","page":30,"textblocks":[{"first":[56.79999923706055,175.71875,12.000003814697266,13.5],"last":[215.39999389648438,175.71875,12,13.5],"length":17,"rects":[[56.79999923706055,175.71875,170.59999465942383,13.5]],"start":89,"text":"二，cmake 自定义变量的方式："}],"type":5,"uuid":"7dee653c5834ddab089524b07cbed908"},{"date":"2023-04-12 17:33:41","docid":0,"fillcolor":"fffeeb73","id":62,"markups":[{"date":"2023-04-12 17:33:48","docid":0,"fillcolor":"fffeeb73","id":63,"originaltext":"1，CMAKE_BINARY_DIR   PROJECT_BINARY_DIR   <projectname>_BINARY_DIR这三个变量指代的内容是一致的","page":30,"textblocks":[{"first":[56.79999923706055,357.361328125,7.224002838134766,13.96875],"last":[212.8000030517578,417.71875,12,13.5],"length":83,"rects":[[56.79999923706055,357.361328125,134.8959846496582,13.96875],[56.79999923706055,377.361328125,151.79599380493164,13.96875],[56.79999923706055,397.361328125,195.1479835510254,13.96875],[56.79999923706055,417.71875,168.00000381469727,13.5]],"start":359,"text":"1，CMAKE_BINARY_DIR\n   PROJECT_BINARY_DIR\n   <projectname>_BINARY_DIR\n这三个变量指代的内容是一致的"}],"type":5,"uuid":"7081d225c34cc34670d5994cdde62ee4"},{"date":"2023-04-12 17:33:55","docid":0,"fillcolor":"fffeeb73","id":64,"originaltext":"２，CMAKE_SOURCE_DIR    PROJECT_SOURCE_DIR    <projectname>_SOURCE_DIR","page":30,"textblocks":[{"first":[56.79999923706055,485.361328125,12.000003814697266,13.96875],"last":[251.92396545410156,525.361328125,7.2240142822265625,13.96875],"length":70,"rects":[[56.79999923706055,485.361328125,139.64799880981445,13.96875],[56.79999923706055,505.361328125,158.99597549438477,13.96875],[56.79999923706055,525.361328125,202.34798049926758,13.96875]],"start":553,"text":"２，CMAKE_SOURCE_DIR\n    PROJECT_SOURCE_DIR\n    <projectname>_SOURCE_DIR"}],"type":5,"uuid":"12dc5ab2fbbce01b126a52621d728477"},{"date":"2023-04-12 17:34:32","docid":0,"fillcolor":"fffeeb73","id":65,"originaltext":"３，CMAKE_CURRENT_SOURCE_DIR","page":30,"textblocks":[{"first":[56.79999923706055,619.361328125,12.000003814697266,13.96875],"last":[247.02398681640625,619.361328125,7.2239990234375,13.96875],"length":26,"rects":[[56.79999923706055,619.361328125,197.4479866027832,13.96875]],"start":752,"text":"３，CMAKE_CURRENT_SOURCE_DIR"}],"type":5,"uuid":"2029c6fa47c3fd85dc1d9b7179eeff66"},{"date":"2023-04-12 17:34:42","docid":0,"fillcolor":"fffeeb73","id":66,"markups":[{"date":"2023-04-12 17:36:32","docid":0,"fillcolor":"fffeeb73","id":67,"originaltext":"使用我们上面提到的 ADD_SUBDIRECTORY(src bin)可以更改这个变量的值。","page":30,"textblocks":[{"first":[56.79999923706055,733.361328125,12.000003814697266,13.96875],"last":[467.8999938964844,733.361328125,12,13.96875],"length":46,"rects":[[56.79999923706055,733.361328125,423.0999946594238,13.96875]],"start":944,"text":"使用我们上面提到的 ADD_SUBDIRECTORY(src bin)可以更改这个变量的值。"}],"type":5,"uuid":"7cdaea34f39ce1c508b8d6337947ffb7"},{"date":"2023-04-12 17:37:06","docid":0,"fillcolor":"fffeeb73","id":68,"originaltext":"使用 SET(EXECUTABLE_OUTPUT_PATH <新路径>)并不会对这个变量造成影响，它仅仅修改了最终目标文件存放的路径","page":30,"textblocks":[{"first":[56.79999923706055,753.361328125,12.000003814697266,13.96875],"last":[212.8000030517578,767.71875,12,13.5],"length":67,"rects":[[56.79999923706055,753.361328125,471.20000076293945,13.96875],[56.79999923706055,767.71875,168.00000381469727,13.5]],"start":991,"text":"使用 SET(EXECUTABLE_OUTPUT_PATH <新路径>)并不会对这个变量造成影响，它仅仅\n修改了最终目标文件存放的路径"}],"type":5,"uuid":"d257a2fc4e54c4a79acdddb96886ed96"}],"originaltext":"４，CMAKE_CURRRENT_BINARY_DIR","page":30,"textblocks":[{"first":[56.79999923706055,679.361328125,12.000003814697266,13.96875],"last":[254.24798583984375,679.361328125,7.2239990234375,13.96875],"length":27,"rects":[[56.79999923706055,679.361328125,204.6719856262207,13.96875]],"start":828,"text":"４，CMAKE_CURRRENT_BINARY_DIR"}],"type":5,"uuid":"9fa570dc691b70cd0e1cdb1b78adb8f1"},{"date":"2023-04-12 17:37:31","docid":0,"fillcolor":"fffeeb73","id":69,"originaltext":"５，CMAKE_CURRENT_LIST_FILE","page":31,"textblocks":[{"first":[56.79999923706055,76.7613525390625,12.000003814697266,13.96875],"last":[239.79998779296875,76.7613525390625,7.2239990234375,13.96875],"length":25,"rects":[[56.79999923706055,76.7613525390625,190.2239875793457,13.96875]],"start":0,"text":"５，CMAKE_CURRENT_LIST_FILE"}],"type":5,"uuid":"5c585fd8a8d99a2714b79bb3b42794dd"},{"date":"2023-04-12 17:37:56","docid":0,"fillcolor":"fffeeb73","id":71,"originaltext":"６，CMAKE_CURRENT_LIST_LINE","page":31,"textblocks":[{"first":[56.79999923706055,136.7613525390625,12.000003814697266,13.96875],"last":[239.79998779296875,136.7613525390625,7.2239990234375,13.96875],"length":25,"rects":[[56.79999923706055,136.7613525390625,190.2239875793457,13.96875]],"start":57,"text":"６，CMAKE_CURRENT_LIST_LINE"}],"type":5,"uuid":"520376bb2cf5a890d8c5edeb4961a3a8"},{"date":"2023-04-12 17:37:58","docid":0,"fillcolor":"fffeeb73","id":72,"markups":[{"date":"2023-04-12 17:39:10","docid":0,"fillcolor":"fffeeb73","id":73,"originaltext":"这时候你就可以通过 INCLUDE 指令来调用自己的模块了","page":31,"textblocks":[{"first":[56.79999923706055,319.1187744140625,12.000003814697266,13.5],"last":[340.20001220703125,319.1187744140625,12,13.5],"length":29,"rects":[[56.79999923706055,319.1187744140625,295.4000129699707,13.5]],"start":319,"text":"这时候你就可以通过 INCLUDE 指令来调用自己的模块了"}],"type":5,"uuid":"52b9a226e9306efbffa3ce5f593479cf"}],"originaltext":"7，CMAKE_MODULE_PATH","page":31,"textblocks":[{"first":[56.79999923706055,196.7613525390625,7.224002838134766,13.96875],"last":[191.69998168945312,196.7613525390625,7.2239990234375,13.96875],"length":19,"rects":[[56.79999923706055,196.7613525390625,142.12398147583008,13.96875]],"start":94,"text":"7，CMAKE_MODULE_PATH"}],"type":5,"uuid":"ab1c2c777b492a9519da441cabf51718"},{"date":"2023-04-12 17:39:20","docid":0,"fillcolor":"fffeeb73","id":74,"originaltext":"８，EXECUTABLE_OUTPUT_PATH 和 LIBRARY_OUTPUT_PATH分别用来重新定义最终结果的存放目录，前面我们已经提到了这两个变量。","page":31,"textblocks":[{"first":[56.79999923706055,358.7613220214844,12.000003814697266,13.96875],"last":[440.79998779296875,379.1187438964844,12,13.5],"length":80,"rects":[[56.79999923706055,358.7613220214844,337.0719795227051,13.96875],[56.79999923706055,379.1187438964844,395.9999885559082,13.5]],"start":350,"text":"８，EXECUTABLE_OUTPUT_PATH 和 LIBRARY_OUTPUT_PATH\n分别用来重新定义最终结果的存放目录，前面我们已经提到了这两个变量。"}],"type":5,"uuid":"b2fcb3db1800d976a6b3742c0c881b54"},{"date":"2023-04-12 17:40:08","docid":0,"fillcolor":"fffeeb73","id":75,"originaltext":"9，PROJECT_NAME","page":31,"textblocks":[{"first":[56.79999923706055,418.7613220214844,7.224002838134766,13.96875],"last":[155.57199096679688,418.7613220214844,7.2239990234375,13.96875],"length":14,"rects":[[56.79999923706055,418.7613220214844,105.99599075317383,13.96875]],"start":431,"text":"9，PROJECT_NAME"}],"type":5,"uuid":"f2ec423e30ed89ddcdd28ff35bf3efb6"}],"originaltext":"三，cmake 常用变量","page":30,"textblocks":[{"first":[56.79999923706055,337.71875,12.000003814697266,13.5],"last":[155.39999389648438,337.71875,12,13.5],"length":12,"rects":[[56.79999923706055,337.71875,110.59999465942383,13.5]],"start":345,"text":"三，cmake 常用变量"}],"type":5,"uuid":"d622d44b8ce57a98baf397bca2e70eaa"},{"date":"2023-04-12 17:40:23","docid":0,"fillcolor":"fffeeb73","id":76,"markups":[{"date":"2023-04-12 17:40:30","docid":0,"fillcolor":"fffeeb73","id":77,"originaltext":"使用$ENV{NAME}指令就可以调用系统的环境变量了","page":31,"textblocks":[{"first":[56.79999923706055,519.1187744140625,12.000003814697266,13.5],"last":[321.1000061035156,519.1187744140625,12,13.5],"length":27,"rects":[[56.79999923706055,519.1187744140625,276.3000068664551,13.5]],"start":488,"text":"使用$ENV{NAME}指令就可以调用系统的环境变量了"}],"type":5,"uuid":"5f11b42cfccc792359de85b062ff7513"},{"date":"2023-04-12 17:40:42","docid":0,"fillcolor":"fffeeb73","id":78,"originaltext":"设置环境变量的方式是：SET(ENV{变量名} 值)","page":31,"textblocks":[{"first":[56.79999923706055,579.1187744140625,12.000003814697266,13.5],"last":[177.10000610351562,598.7613525390625,7.2239990234375,13.96875],"length":27,"rects":[[56.79999923706055,579.1187744140625,132.00000381469727,13.5],[56.79999923706055,598.7613525390625,127.52400588989258,13.96875]],"start":559,"text":"设置环境变量的方式是：\nSET(ENV{变量名} 值)"}],"type":5,"uuid":"62f41bd82af49cd83058de134bf87135"},{"date":"2023-04-12 17:42:15","docid":0,"fillcolor":"fffeeb73","id":79,"originaltext":"1,CMAKE_INCLUDE_CURRENT_DIR","page":31,"textblocks":[{"first":[56.79999923706055,638.7613525390625,7.224002838134766,13.96875],"last":[244.69998168945312,638.7613525390625,7.2239990234375,13.96875],"length":27,"rects":[[56.79999923706055,638.7613525390625,195.12398147583008,13.96875]],"start":587,"text":"1,CMAKE_INCLUDE_CURRENT_DIR"}],"type":5,"uuid":"befaa02d0db992950437f379b01fa7e9"},{"date":"2023-04-12 17:42:49","docid":0,"fillcolor":"fffeeb73","id":80,"originaltext":"2,CMAKE_INCLUDE_DIRECTORIES_PROJECT_BEFORE","page":31,"textblocks":[{"first":[56.79999923706055,746.7613525390625,7.224002838134766,13.96875],"last":[353.07196044921875,746.7613525390625,7.2239990234375,13.96875],"length":42,"rects":[[56.79999923706055,746.7613525390625,303.4959602355957,13.96875]],"start":799,"text":"2,CMAKE_INCLUDE_DIRECTORIES_PROJECT_BEFORE"}],"type":5,"uuid":"4b2ba571031d4e7320fc210ad5255075"},{"date":"2023-04-12 17:43:16","docid":0,"fillcolor":"fffeeb73","id":81,"originaltext":"3,CMAKE_INCLUDE_PATH 和 CMAKE_LIBRARY_PATH","page":32,"textblocks":[{"first":[56.79999923706055,76.7613525390625,7.224002838134766,13.96875],"last":[340.97198486328125,76.7613525390625,7.2239990234375,13.96875],"length":41,"rects":[[56.79999923706055,76.7613525390625,291.3959846496582,13.96875]],"start":14,"text":"3,CMAKE_INCLUDE_PATH 和 CMAKE_LIBRARY_PATH"}],"type":5,"uuid":"a70b5ae247ad2c3b212b5ed06e1be2bf"}],"originaltext":"四，cmake 调用环境变量的方式","page":31,"textblocks":[{"first":[56.79999923706055,499.1187438964844,12.000003814697266,13.500030517578125],"last":[215.39999389648438,499.1187438964844,12,13.500030517578125],"length":17,"rects":[[56.79999923706055,499.1187438964844,170.59999465942383,13.500030517578125]],"start":470,"text":"四，cmake 调用环境变量的方式"}],"type":5,"uuid":"23627869882ba2348af4d3b05fc7a68a"},{"date":"2023-04-12 17:45:18","docid":0,"fillcolor":"fffeeb73","id":83,"originaltext":"五，系统信息","page":32,"textblocks":[{"first":[56.79999923706055,137.1187744140625,12.000003814697266,13.5],"last":[116.80000305175781,137.1187744140625,12,13.5],"length":6,"rects":[[56.79999923706055,137.1187744140625,72.00000381469727,13.5]],"start":68,"text":"五，系统信息"}],"type":5,"uuid":"ae82b2ad3d835c108865b0b899ec209c"},{"date":"2023-04-12 17:46:02","docid":0,"fillcolor":"fffeeb73","id":84,"markups":[{"date":"2023-04-12 17:47:15","docid":0,"fillcolor":"fffeeb73","id":88,"originaltext":"1，CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS，用来控制 IF ELSE 语句的书写方式","page":32,"textblocks":[{"first":[56.79999923706055,376.7613220214844,7.224002838134766,13.96875],"last":[501.8999938964844,376.7613220214844,12.000030517578125,13.96875],"length":56,"rects":[[56.79999923706055,376.7613220214844,457.10002517700195,13.96875]],"start":462,"text":"1，CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS，用来控制 IF ELSE 语句的书写方式"}],"type":5,"uuid":"ccddd3318143e1e99954614bd2f415ba"},{"date":"2023-04-12 17:46:50","docid":0,"fillcolor":"fffeeb73","id":85,"markups":[{"date":"2023-04-12 17:46:55","docid":0,"fillcolor":"fffeeb73","id":86,"originaltext":"这个开关用来控制默认的库编译方式，如果不进行设置，使用 ADD_LIBRARY 并没有指定库类型的情况下，默认编译生成的库都是静态库","page":32,"textblocks":[{"first":[56.79999923706055,451.1187438964844,12.000003814697266,13.5],"last":[284.79998779296875,465.1187438964844,12,13.5],"length":67,"rects":[[56.79999923706055,451.1187438964844,480.29997634887695,13.5],[56.79999923706055,465.1187438964844,239.9999885559082,13.5]],"start":553,"text":"这个开关用来控制默认的库编译方式，如果不进行设置，使用 ADD_LIBRARY 并没有指定库\n类型的情况下，默认编译生成的库都是静态库"}],"type":5,"uuid":"72116588573f84aec4a8d7f8fca9b1ae"}],"originaltext":"2，BUILD_SHARED_LIBS","page":32,"textblocks":[{"first":[56.79999923706055,430.7613220214844,7.224002838134766,13.96875],"last":[191.69998168945312,430.7613220214844,7.2239990234375,13.96875],"length":19,"rects":[[56.79999923706055,430.7613220214844,142.12398147583008,13.96875]],"start":533,"text":"2，BUILD_SHARED_LIBS"}],"type":5,"uuid":"db889eefa54e13fa8d3055052a599322"},{"date":"2023-04-12 17:47:04","docid":0,"fillcolor":"fffeeb73","id":87,"markups":[{"date":"2023-04-12 17:47:33","docid":0,"fillcolor":"fffeeb73","id":90,"originaltext":"也可以通过指令 ADD_DEFINITIONS()添加。","page":32,"textblocks":[{"first":[152.89999389648438,523.635986328125,12,15.330078125],"last":[386.1000061035156,523.635986328125,12,15.330078125],"length":28,"rects":[[152.89999389648438,523.635986328125,245.20001220703125,15.330078125]],"start":689,"text":"也可以通过指令 ADD_DEFINITIONS()添加。"}],"type":5,"uuid":"44fa9d81c46597ee99a434de7c3482a9"}],"originaltext":"３，CMAKE_C_FLAGS","page":32,"textblocks":[{"first":[56.79999923706055,504.7613525390625,12.000003814697266,13.96875],"last":[167.54800415039062,504.7613525390625,7.2239990234375,13.96875],"length":15,"rects":[[56.79999923706055,504.7613525390625,117.97200393676758,13.96875]],"start":663,"text":"３，CMAKE_C_FLAGS"}],"type":5,"uuid":"d9f6b67ca8f80515998e17a2443cabcb"},{"date":"2023-04-12 17:47:27","docid":0,"fillcolor":"fffeeb73","id":89,"originaltext":"4，CMAKE_CXX_FLAGS","page":32,"textblocks":[{"first":[56.79999923706055,544.7613525390625,7.224002838134766,13.96875],"last":[177.24798583984375,544.7613525390625,7.2239990234375,13.96875],"length":17,"rects":[[56.79999923706055,544.7613525390625,127.6719856262207,13.96875]],"start":718,"text":"4，CMAKE_CXX_FLAGS"}],"type":5,"uuid":"4a9bca7ef05facea5b605852e9833a92"}],"originaltext":"六，主要的开关选项","page":32,"textblocks":[{"first":[56.79999923706055,357.1187438964844,12.000003814697266,13.5],"last":[152.8000030517578,357.1187438964844,12,13.5],"length":9,"rects":[[56.79999923706055,357.1187438964844,108.00000381469727,13.5]],"start":451,"text":"六，主要的开关选项"}],"type":5,"uuid":"2cdd06822824e8bd495651087b532d91"}],"originaltext":"七，cmake 常用变量和常用环境变量","page":30,"textblocks":[{"first":[56.79999923706055,57.2249755859375,16.000003814697266,18],"last":[316.0999755859375,57.2249755859375,16,18],"length":19,"rects":[[56.79999923706055,57.2249755859375,275.29997634887695,18]],"start":0,"text":"七，cmake 常用变量和常用环境变量"}],"type":5,"uuid":"55e35840a58cbc49f06768c38a7106cc"},{"date":"2023-04-12 17:47:51","docid":0,"fillcolor":"fffeeb73","id":92,"markups":[{"date":"2023-04-12 17:48:21","docid":0,"fillcolor":"fffeeb73","id":93,"markups":[{"date":"2023-04-12 18:13:52","docid":0,"fillcolor":"fffeeb73","id":96,"originaltext":"向 C/C++编译器添加-D 定义","page":33,"textblocks":[{"first":[56.79999923706055,319.71875,12.000003814697266,13.5],"last":[196.1999969482422,319.71875,12,13.5],"length":17,"rects":[[56.79999923706055,319.71875,151.39999771118164,13.5]],"start":439,"text":"向 C/C++编译器添加-D 定义"}],"type":5,"uuid":"8457157f6a8197fd37d6b3712ed6135a"}],"originaltext":"1，ADD_DEFINITIONS","page":33,"textblocks":[{"first":[56.79999923706055,299.361328125,7.224002838134766,13.96875],"last":[177.24798583984375,299.361328125,7.2239990234375,13.96875],"length":17,"rects":[[56.79999923706055,299.361328125,127.6719856262207,13.96875]],"start":421,"text":"1，ADD_DEFINITIONS"}],"type":5,"uuid":"02e6d59661cd9fcda81444acc3aa351a"},{"date":"2023-04-12 18:09:13","docid":0,"fillcolor":"fffeeb73","id":94,"markups":[{"date":"2023-04-12 18:09:18","docid":0,"fillcolor":"fffeeb73","id":95,"originaltext":"定义 target 依赖的其他 target，确保在编译本 target 之前，其他的 target 已经被构建。","page":33,"textblocks":[{"first":[56.79999923706055,452.2359313964844,12.000003814697266,15.330078125],"last":[68.80000305175781,467.71875,12,13.5],"length":58,"rects":[[56.79999923706055,452.2359313964844,478.20000076293945,15.330078125],[56.79999923706055,467.71875,24.000003814697266,13.5]],"start":638,"text":"定义 target 依赖的其他 target，确保在编译本 target 之前，其他的 target 已经被构\n建。"}],"type":5,"uuid":"e933d563f6d00801186a215580895cda"}],"originaltext":"２，ADD_DEPENDENCIES","page":33,"textblocks":[{"first":[56.79999923706055,433.361328125,12.000003814697266,13.96875],"last":[189.2239990234375,433.361328125,7.2239990234375,13.96875],"length":18,"rects":[[56.79999923706055,433.361328125,139.64799880981445,13.96875]],"start":619,"text":"２，ADD_DEPENDENCIES"}],"type":5,"uuid":"a567a74c7db10b750225a65e3022e46b"},{"date":"2023-04-12 18:16:43","docid":0,"fillcolor":"fffeeb73","id":97,"markups":[{"date":"2023-04-12 18:22:35","docid":0,"fillcolor":"fffeeb73","id":99,"originaltext":"ADD_EXECUTABLE(t1 main)，cmake 会自动的在本目录查找 main.c 或者 main.cpp等，当然，最好不要偷这个懒，以免这个目录确实存在一个 main.c 一个 main","page":9,"textblocks":[{"first":[56.79999923706055,270.7613525390625,7.224002838134766,13.96875],"last":[465.0719909667969,285.1187744140625,7.2239990234375,13.5],"length":101,"rects":[[56.79999923706055,270.7613525390625,469.14799880981445,13.96875],[56.79999923706055,285.1187744140625,415.4959907531738,13.5]],"start":291,"text":"ADD_EXECUTABLE(t1 main)，cmake 会自动的在本目录查找 main.c 或者 main.cpp\n等，当然，最好不要偷这个懒，以免这个目录确实存在一个 main.c 一个 main"}],"type":5,"uuid":"fc8aa7e032e81fed43c076f67414b494"}],"originaltext":"３，ADD_EXECUTABLE、ADD_LIBRARY、ADD_SUBDIRECTORY ","page":33,"textblocks":[{"first":[56.79999923706055,547.361328125,12.000003814697266,13.96875],"last":[401.0959777832031,547.361328125,2.404022216796875,13.96875],"length":46,"rects":[[56.79999923706055,547.361328125,346.70000076293945,13.96875]],"start":778,"text":"３，ADD_EXECUTABLE、ADD_LIBRARY、ADD_SUBDIRECTORY "}],"type":5,"uuid":"e1852cc723a3bd76147a1db6a0d99399"},{"date":"2023-04-12 18:17:32","docid":0,"fillcolor":"fffeeb73","id":98,"markups":[{"date":"2023-04-12 18:25:46","docid":0,"fillcolor":"fffeeb73","id":100,"originaltext":"ADD_TEST(mytest ${PROJECT_BINARY_DIR}/bin/main)ENABLE_TESTING()生成 Makefile 后，就可以运行 make test 来执行测试了。","page":34,"textblocks":[{"first":[56.79999923706055,96.7613525390625,7.224002838134766,13.96875],"last":[369.29998779296875,155.63595581054688,12,15.330078125],"length":102,"rects":[[56.79999923706055,96.7613525390625,339.62395095825195,13.96875],[56.79999923706055,116.7613525390625,115.64799880981445,13.96875],[56.79999923706055,155.63595581054688,324.4999885559082,15.330078125]],"start":48,"text":"ADD_TEST(mytest ${PROJECT_BINARY_DIR}/bin/main)\nENABLE_TESTING()\n生成 Makefile 后，就可以运行 make test 来执行测试了。"}],"type":5,"uuid":"d57c3fa303d7a8723181ccd4b12b08c9"}],"originaltext":"４，ADD_TEST 与 ENABLE_TESTING 指令。","page":33,"textblocks":[{"first":[56.79999923706055,601.361328125,12.000003814697266,13.96875],"last":[283,601.361328125,12,13.96875],"length":31,"rects":[[56.79999923706055,601.361328125,238.20000076293945,13.96875]],"start":842,"text":"４，ADD_TEST 与 ENABLE_TESTING 指令。"}],"type":5,"uuid":"e1e0bb46963846422c31891f1b36bf5f"}],"originaltext":"八，cmake 常用指令","page":33,"textblocks":[{"first":[56.79999923706055,57.2249755859375,16.000003814697266,18],"last":[194.8000030517578,57.2249755859375,16,18],"length":12,"rects":[[56.79999923706055,57.2249755859375,154.00000381469727,18]],"start":0,"text":"八，cmake 常用指令"}],"type":5,"uuid":"c492477bbf722c553ead8f0c8da1bc3c"}],"maxid":100,"notelinks":[],"scalingratio":100,"title":"CMake Practice","unimportant":[]}