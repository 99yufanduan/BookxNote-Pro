{"EpubVersion":2,"filepath":"","floatingtheme":[],"folded":false,"markups":[{"date":"2022-06-16 12:43:01","docid":0,"fillcolor":"fffeeb73","id":1,"markups":[{"date":"2022-06-16 12:44:48","docid":0,"fillcolor":"fffeeb73","id":4,"markups":[{"date":"2022-06-16 12:44:52","docid":0,"fillcolor":"fffeeb73","id":5,"originaltext":"精配准的模式基本上已经固定为使用ICP算法及各种变种","page":1,"textblocks":[{"first":[255.90826416015625,44.483642578125,9.812255859375,13.5],"last":[255.90826416015625,63.04582214355469,9.812255859375,10.962120056152344],"length":27,"rects":[[255.90826416015625,44.483642578125,232.2264404296875,13.5],[255.90826416015625,63.04582214355469,9.812255859375,10.962120056152344]],"start":122,"text":"精配准的模式基本上已经固定为使用ICP算法及各种变\n种"}],"type":5,"uuid":"f0c03014dbec5eede99b4f7b28201cf2"}],"originaltext":"从精配准讲起","page":1,"textblocks":[{"first":[255.90826416015625,28.53875732421875,9.812255859375,13.5],"last":[304.9695129394531,28.53875732421875,9.812255859375,13.5],"length":6,"rects":[[255.90826416015625,28.53875732421875,58.873504638671875,13.5]],"start":115,"text":"从精配准讲起"}],"type":5,"uuid":"eac9d650375418d82e9ebcf0c42c94f4"},{"date":"2022-06-16 12:44:57","docid":0,"fillcolor":"fffeeb73","id":6,"markups":[{"date":"2022-06-16 12:44:32","docid":0,"fillcolor":"fffeeb73","id":3,"originaltext":"ICP算法的基本原理。它需要一个旋转平移矩阵的初值。这个初值如果不太正确，那么由于它的贪心优化的策略，会使其目标函数下降到某一个局部最优点（当然也是一个错误的旋转平移矩阵）。因此，我们需要找到一个比较准确的初值，这就是粗配准需要做的。","page":2,"textblocks":[{"first":[324.593994140625,425.7083740234375,2.727813720703125,12.5],"last":[471.7777404785156,488.488037109375,9.812255859375,13.5],"length":121,"rects":[[324.593994140625,425.7083740234375,173.35293579101562,12.5],[255.90826416015625,441.6533203125,245.30624389648438,12.5],[255.90826416015625,456.5982666015625,245.30624389648438,13.5],[255.90826416015625,473.24310302734375,245.30624389648438,13.5],[255.90826416015625,488.488037109375,225.68173217773438,13.5]],"start":644,"text":"ICP算法的基本原理。它需要一个旋转平\n移矩阵的初值。这个初值如果不太正确，那么由于它的贪\n心优化的策略，会使其目标函数下降到某一个局部最优点\n（当然也是一个错误的旋转平移矩阵）。因此，我们需要\n找到一个比较准确的初值，这就是粗配准需要做的。"}],"type":5,"uuid":"c483743e331fc0c89a5a0e5f3f03cfe4"},{"date":"2022-06-16 12:45:37","docid":0,"fillcolor":"fffeeb73","id":8,"originaltext":"比较通用的一个是LCP\n解决上述LCP问题，最简单粗暴的方法就是遍历。假设点集P,Q的大小分别为m,n。而找到一个刚体变换需要3对对应点。那么蛮力搜索的需要O(m3n3)的复杂度。对于动辄几百万个点的点云，这种时间复杂度是不可接受的。因此，许多搜索策略被提出。比较容易想到的是RANSAC之类的搜索方法","page":3,"textblocks":[{"first":[320.24365234375,72.85820007324219,9.812255859375,10.962120056152344],"last":[411.2817077636719,72.85820007324219,6.544769287109375,10.962120056152344],"length":11,"rects":[[320.24365234375,72.85820007324219,97.58282470703125,10.962120056152344]],"start":155,"text":"比较通用的一个是LCP"},{"first":[255.90826416015625,160.7777099609375,9.812255859375,12.5],"last":[314.7817687988281,239.5023193359375,9.812255859375,13.5],"length":144,"rects":[[255.90826416015625,160.7777099609375,244.76962280273438,12.5],[255.90826416015625,176.72265625,243.50955200195312,12.5],[255.90826416015625,192.6676025390625,244.76962280273438,12.5],[255.90826416015625,207.6124267578125,235.49398803710938,13.5],[255.90826416015625,223.557373046875,237.13262939453125,13.5],[255.90826416015625,239.5023193359375,68.68576049804688,13.5]],"start":288,"text":"解决上述LCP问题，最简单粗暴的方法就是遍历。假设点\n集P,Q的大小分别为m,n。而找到一个刚体变换需要3对对\n应点。那么蛮力搜索的需要O(m3n3)的复杂度。对于动辄\n几百万个点的点云，这种时间复杂度是不可接受的。因\n此，许多搜索策略被提出。比较容易想到的是RANSAC\n之类的搜索方法"}],"type":5,"uuid":"68b0a5164b8b4c55baa3afb825712e98"},{"date":"2022-06-16 12:45:51","docid":0,"fillcolor":"fffeeb73","id":9,"originaltext":"先介绍一个适用于各种点云，不需要先验信息的搜索策略，称为4PC（4 Point Congruent）","page":3,"textblocks":[{"first":[255.90826416015625,281.90435791015625,9.812255859375,13.5],"last":[403.154296875,299.7665100097656,9.812255859375,10.962127685546875],"length":51,"rects":[[255.90826416015625,281.90435791015625,235.49398803710938,13.5],[255.90826416015625,299.7665100097656,157.05828857421875,10.962127685546875]],"start":465,"text":"先介绍一个适用于各种点云，不需要先验信息的搜索策\n略，称为4PC（4 Point Congruent）"}],"type":5,"uuid":"339027cab49d5d1db06f69c3baecf62b"}],"originaltext":"3、粗配准","page":2,"textblocks":[{"first":[255.90826416015625,409.7635498046875,5.455596923828125,12.5],"last":[290.8021240234375,409.7635498046875,9.812255859375,12.5],"length":5,"rects":[[255.90826416015625,409.7635498046875,44.70611572265625,12.5]],"start":630,"text":"3、粗配准"}],"type":5,"uuid":"2e221c0989240ad744f4e3580e6d9890"}],"originaltext":"点云配准介绍","page":0,"textblocks":[{"first":[255.90826416015625,71.60002136230469,17.17144775390625,20.5],"last":[341.76544189453125,71.60002136230469,17.17144775390625,20.5],"length":6,"rects":[[255.90826416015625,71.60002136230469,103.02862548828125,20.5]],"start":163,"text":"点云配准介绍"}],"type":5,"uuid":"6c9cb6826a6de886f01b8b271034511d"}],"maxid":9,"notelinks":[],"title":"(129条消息) 点云配准介绍_秋无所畏惧的博客-CSDN博客_点云配准","unimportant":[]}