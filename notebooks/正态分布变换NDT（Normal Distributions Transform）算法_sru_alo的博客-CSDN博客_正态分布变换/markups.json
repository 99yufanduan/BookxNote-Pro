{"EpubVersion":2,"filepath":"","floatingtheme":[],"folded":false,"markups":[{"date":"2022-06-29 09:50:25","docid":0,"fillcolor":"fffeeb73","id":1,"originaltext":"正态分布变换NDT（Normal Distributions Transform）算法","page":0,"textblocks":[{"first":[97.5999984741211,63.32999801635742,13.720001220703125,16.500003814697266],"last":[188.34182739257812,84.09000396728516,13.720001220703125,17.5],"length":44,"rects":[[97.5999984741211,63.32999801635742,285.03849029541016,16.500003814697266],[97.5999984741211,84.09000396728516,104.46183013916016,17.5]],"start":257,"text":"正态分布变换NDT（Normal Distributions T\nransform）算法"}],"type":5,"uuid":"0eebb017e795711454837c5e7b9c88d2"},{"date":"2022-06-29 09:52:26","docid":0,"fillcolor":"fffeeb73","id":2,"originaltext":"视图匹配（配准）算法：","page":0,"textblocks":[{"first":[97.5999984741211,352.07000732421875,10.779998779296875,14.5],"last":[205.40000915527344,352.07000732421875,10.779998779296875,14.5],"length":11,"rects":[[97.5999984741211,352.07000732421875,118.58000946044922,14.5]],"start":785,"text":"视图匹配（配准）算法："}],"type":5,"uuid":"4469601a52ed08b59c23b1791b249de1"},{"date":"2022-06-29 09:52:50","docid":0,"fillcolor":"fffeeb73","id":3,"originaltext":"1.ICP","page":0,"textblocks":[{"first":[97.5999984741211,376.17266845703125,4.359039306640625,8.758758544921875],"last":[111.97856140136719,376.17266845703125,5.229278564453125,8.758758544921875],"length":5,"rects":[[97.5999984741211,376.17266845703125,19.60784149169922,8.758758544921875]],"start":797,"text":"1.ICP"}],"type":5,"uuid":"36049c0adbc55f5f2c01433b2e1f6b27"},{"date":"2022-06-29 09:52:54","docid":0,"fillcolor":"fffeeb73","id":4,"originaltext":"缺点：A．要剔除不合适的点对（点对距离过大、包含边界点的点对）   B．基于点对的配准，并没有包含局部形状的信息 C．每次迭代都要搜索最近点，计算代价高昂             存在多种优化了的变体算法，如八叉树等","page":0,"textblocks":[{"first":[99.77820587158203,385.5299987792969,7.840003967285156,10.5],"last":[128.95999145507812,420.80999755859375,7.839996337890625,11.5],"length":111,"rects":[[99.77820587158203,385.5299987792969,283.55306243896484,10.5],[97.5999984741211,398.2900085449219,133.2800064086914,10.5],[97.5999984741211,409.3500061035156,287.03665924072266,11.5],[97.5999984741211,420.80999755859375,39.199989318847656,11.5]],"start":805,"text":"缺点：A．要剔除不合适的点对（点对距离过大、包含边界点的点对）   B．基于点\n对的配准，并没有包含局部形状的信息\n C．每次迭代都要搜索最近点，计算代价高昂             存在多种优化了的变体算法，\n如八叉树等"}],"type":5,"uuid":"de0ff33e92e68d4a40ea7863cfe587eb"},{"date":"2022-06-29 10:49:48","docid":0,"fillcolor":"fffeeb73","id":6,"originaltext":"5.NDT——正态分布变换：","page":0,"textblocks":[{"first":[97.5999984741211,470.2526550292969,4.359039306640625,8.758758544921875],"last":[182.4580535888672,470.2526550292969,10.426849365234375,8.758758544921875],"length":14,"rects":[[97.5999984741211,470.2526550292969,95.28490447998047,8.758758544921875]],"start":1046,"text":"5.NDT——正态分布变换："}],"type":5,"uuid":"5639a90015d85cc0f9c8e4e46262dc20"},{"date":"2022-06-29 10:49:54","docid":0,"fillcolor":"fffeeb73","id":7,"originaltext":"计算 正态分布是一个一次性的工作（初始化），不需要消耗大量代价计算最近邻搜索匹配点","page":0,"textblocks":[{"first":[99.77820587158203,479.9100036621094,7.840003967285156,11.5],"last":[128.95999145507812,492.3699951171875,7.839996337890625,10.5],"length":42,"rects":[[99.77820587158203,479.9100036621094,284.19615936279297,11.5],[97.5999984741211,492.3699951171875,39.199989318847656,10.5]],"start":1063,"text":"计算 正态分布是一个一次性的工作（初始化），不需要消耗大量代价计算最近邻\n搜索匹配点"}],"type":5,"uuid":"9b989321fe7cf972a53b4e03f3a5a476"},{"date":"2022-06-29 10:50:07","docid":0,"fillcolor":"fffeeb73","id":8,"originaltext":"NDT配准的大致概念:","page":0,"textblocks":[{"first":[97.5999984741211,691.3300170898438,9.972480773925781,15.5],"last":[206.0928955078125,691.3300170898438,3.3633575439453125,15.5],"length":11,"rects":[[97.5999984741211,691.3300170898438,111.85625457763672,15.5]],"start":1388,"text":"NDT配准的大致概念:"}],"type":5,"uuid":"3c840104badcd86e22d6cea430849c58"}],"maxid":8,"notelinks":[],"title":"正态分布变换NDT（Normal Distributions Transform）算法_sru_alo的博客-CSDN博客_正态分布变换","unimportant":[]}