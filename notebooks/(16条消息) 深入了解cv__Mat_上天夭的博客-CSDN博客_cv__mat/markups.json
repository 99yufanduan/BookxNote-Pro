{"EpubVersion":2,"filepath":"","floatingtheme":[],"folded":false,"markups":[{"date":"2022-08-06 12:51:29","docid":0,"fillcolor":"fffeeb73","id":1,"originaltext":"深⼊了解cv::Mat","page":0,"textblocks":[{"first":[55.02333450317383,13.912313461303711,17.196666717529297,19.21190071105957],"last":[178.27215576171875,13.912313461303711,5.7264862060546875,19.21190071105957],"length":11,"rects":[[55.02333450317383,13.912313461303711,128.9753074645996,19.21190071105957]],"start":67,"text":"深⼊了解cv::Mat"}],"type":5,"uuid":"fa928e7792e7d9969a269e4dbaebe9ee"},{"date":"2022-08-06 12:51:36","docid":0,"fillcolor":"fffeeb73","id":2,"originaltext":"⼆、实现原理","page":3,"textblocks":[{"first":[55.02333450317383,394.68798828125,13.511669158935547,13.51165771484375],"last":[122.58189392089844,394.68798828125,13.511672973632812,13.51165771484375],"length":6,"rects":[[55.02333450317383,394.68798828125,81.07023239135742,13.51165771484375]],"start":73,"text":"⼆、实现原理"}],"type":5,"uuid":"b91143189a3d85f48065faecd7230c40"},{"date":"2022-08-06 12:52:40","docid":0,"fillcolor":"fffeeb73","id":3,"originaltext":"1、cv::Mat有两个必不可少的组成部分：⼀个头部和⼀个数据块。头部包含了矩阵的所有相关信息（⼤⼩、通道数量、数据类型）。数据块包含了图像中所有像素的值。头部有⼀个指向数据块的指针，即data属性。","page":3,"textblocks":[{"first":[55.02333450317383,423.7257080078125,5.463626861572266,9.82666015625],"last":[280.5092468261719,439.6942138671875,9.82666015625,9.82666015625],"length":101,"rects":[[55.02333450317383,423.7257080078125,685.6935234069824,9.82666015625],[55.02333450317383,439.6942138671875,235.31257247924805,9.82666015625]],"start":80,"text":"1、cv::Mat有两个必不可少的组成部分：⼀个头部和⼀个数据块。头部包含了矩阵的所有相关信息（⼤⼩、通道数量、数据类型）。数据块包含了图像中所有像\n素的值。头部有⼀个指向数据块的指针，即data属性。"}],"type":5,"uuid":"f36bd10d1e7355c50bc3ea50a5c1486e"},{"date":"2022-08-06 12:55:03","docid":0,"fillcolor":"fffeeb73","id":4,"originaltext":"2、cv::Mat有⼀个很重要的属性，即只有在明确要求时，内存块才会被复制。实际上，⼤多数操作仅仅复制了cv::Mat的头部，因此多个对象会同时指向同⼀个数据块。这种内存管理模式可以提⾼应⽤程序的运⾏效率，避免内存泄漏。","page":3,"textblocks":[{"first":[55.02333450317383,465.4891357421875,5.463626861572266,9.82666015625],"last":[359.65057373046875,481.4573974609375,9.82666015625,9.82666015625],"length":111,"rects":[[55.02333450317383,465.4891357421875,687.8815116882324,9.82666015625],[55.02333450317383,481.4573974609375,314.4538993835449,9.82666015625]],"start":182,"text":"2、cv::Mat有⼀个很重要的属性，即只有在明确要求时，内存块才会被复制。实际上，⼤多数操作仅仅复制了cv::Mat的头部，因此多个对象会同时指向同⼀个数\n据块。这种内存管理模式可以提⾼应⽤程序的运⾏效率，避免内存泄漏。"}],"type":5,"uuid":"68b7ea329e22abb90c54b53e7dd9bb32"},{"date":"2022-08-06 12:55:23","docid":0,"fillcolor":"fffeeb73","id":6,"originaltext":"4、当两个图像之间赋值时，图像数据（即像素）并不会被复制，此时两个图像都指向同⼀个内存块。对其中的任何⼀个做转换都会影响到其他图像。如果要对图像内容做⼀个深复制，可以使⽤copyTo⽅法。","page":3,"textblocks":[{"first":[55.02333450317383,549.0157470703125,5.463626861572266,9.82666015625],"last":[253.21234130859375,564.9842529296875,9.82666015625,9.82666015625],"length":95,"rects":[[55.02333450317383,549.0157470703125,683.5055961608887,9.82666015625],[55.02333450317383,564.9842529296875,208.01566696166992,9.82666015625]],"start":398,"text":"4、当两个图像之间赋值时，图像数据（即像素）并不会被复制，此时两个图像都指向同⼀个内存块。对其中的任何⼀个做转换都会影响到其他图像。如果要对\n图像内容做⼀个深复制，可以使⽤copyTo⽅法。"}],"type":5,"uuid":"cda0e380568c24d86650b390258ae065"}],"maxid":6,"notelinks":[],"title":"(16条消息) 深入了解cv__Mat_上天夭的博客-CSDN博客_cv__mat","unimportant":[]}