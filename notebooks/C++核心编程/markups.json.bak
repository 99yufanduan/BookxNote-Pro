{"EpubVersion":2,"filepath":"","floatingtheme":[],"folded":false,"markups":[{"date":"2022-02-11 20:46:13","docid":0,"fillcolor":"ffffed99","id":13,"markups":[{"date":"2022-02-11 20:42:39","docid":0,"id":5,"imgfile":"ce65fc9cd1efea14f74e9dfb92a3b243.png","linecolor":"ff60bb46","linewidth":2,"page":0,"rect":[37.84347884075461,159.78357732763055,439.1712359297448,256.96189336314853],"type":2},{"date":"2022-02-11 20:46:16","docid":0,"fillcolor":"ffffed99","id":14,"markups":[{"date":"2022-02-11 20:44:25","docid":0,"id":8,"imgfile":"9e1b1d678dc595f76fdcb6f311b39d5e.png","linecolor":"ff60bb46","linewidth":2,"page":0,"rect":[36.9090719557977,484.95717329263306,370.0251264429339,583.069896213108],"type":2},{"date":"2022-02-11 20:44:20","docid":0,"id":7,"imgfile":"a3771f91811f19f5eae63df620bcd3b8.png","linecolor":"ff60bb46","linewidth":2,"page":0,"rect":[36.44186851331925,372.3611436553262,477.48191821297786,471.408273460758],"type":2}],"originaltext":"1.1 程序运⾏前","page":0,"textblocks":[{"first":[43,321.25,6.617572784423828,14.5],"last":[111.37149047851562,321.25,12.277496337890625,14.5],"length":9,"rects":[[43,321.25,80.64898681640625,14.5]],"start":260,"text":"1.1 程序运⾏前"}],"type":5},{"date":"2022-02-11 20:46:24","docid":0,"fillcolor":"ffffed99","id":15,"markups":[{"date":"2022-02-11 20:44:46","docid":0,"id":10,"imgfile":"cafb1624a5fcc9e7e84c8de3b67d998e.png","linecolor":"ff60bb46","linewidth":2,"page":2,"rect":[34.10585130092699,174.734087486941,395.72131577924876,249.01943484101486],"type":2},{"date":"2022-02-11 20:45:02","docid":0,"id":11,"imgfile":"fe3d9f1bbc7121dc5e43315c587f97e8.png","linecolor":"ff60bb46","linewidth":2,"page":2,"rect":[35.9746650708408,570.4554032661898,341.9929198942268,643.3391402928282],"type":2}],"originaltext":"1.2 程序运⾏后","page":2,"textblocks":[{"first":[43,148,6.617572784423828,14.5],"last":[111.37149047851562,148,12.277496337890625,14.5],"length":9,"rects":[[43,148,80.64898681640625,14.5]],"start":109,"text":"1.2 程序运⾏后"}],"type":5},{"date":"2022-02-11 20:47:44","docid":0,"fillcolor":"ffffed99","id":16,"markups":[{"date":"2022-02-11 20:47:56","docid":0,"fillcolor":"ff60bb46","id":17,"originaltext":"C++中利⽤==new==操作符在堆区开辟数据 堆区开辟的数据，由程序员⼿动开辟，⼿动释放，释放利⽤操作符 ==delete==","page":3,"textblocks":[{"first":[45.87699890136719,311.70001220703125,6.499500274658203,13.5],"last":[403.5586853027344,338,7.1820068359375,13.5],"length":65,"rects":[[45.87699890136719,311.70001220703125,205.1183624267578,13.5],[43,338,367.7406921386719,13.5]],"start":184,"text":"C++中利⽤==new==操作符在堆区开辟数据\n 堆区开辟的数据，由程序员⼿动开辟，⼿动释放，释放利⽤操作符 ==delete=="}],"type":5},{"date":"2022-03-27 19:27:46","docid":0,"fillcolor":"fffeeb73","id":368,"markups":[{"date":"2022-03-27 19:27:59","docid":0,"fillcolor":"fffeeb73","id":370,"originaltext":"int* a = new int(10);","page":3,"textblocks":[{"first":[84.0859375,494.701904296875,5.775001525878906,10.5],"last":[199.48983764648438,494.701904296875,5.774993896484375,10.5],"length":21,"rects":[[84.0859375,494.701904296875,121.17889404296875,10.5]],"start":317,"text":"int* a = new int(10);"}],"type":5},{"date":"2022-03-27 19:28:03","docid":0,"fillcolor":"fffeeb73","id":371,"originaltext":"delete p;","page":3,"textblocks":[{"first":[84.0859375,665.701904296875,5.775001525878906,10.5],"last":[130.26483154296875,665.701904296875,5.774993896484375,10.5],"length":9,"rects":[[84.0859375,665.701904296875,51.953887939453125,10.5]],"start":460,"text":"delete p;"}],"type":5}],"originaltext":"⽰例1： 基本语法","page":3,"textblocks":[{"first":[43,419,10.5,13.5],"last":[114.936279296875,419,10.5,13.5],"length":9,"rects":[[43,419,82.436279296875,13.5]],"start":291,"text":"⽰例1： 基本语法"}],"type":5},{"date":"2022-03-27 19:27:48","docid":0,"fillcolor":"fffeeb73","id":369,"markups":[{"date":"2022-03-27 19:28:18","docid":0,"fillcolor":"fffeeb73","id":372,"originaltext":"int* arr = new int[10];","page":4,"textblocks":[{"first":[84.0859375,132.451904296875,5.775001525878906,10.5],"last":[211.04452514648438,132.451904296875,5.774993896484375,10.5],"length":23,"rects":[[84.0859375,132.451904296875,132.73358154296875,10.5]],"start":61,"text":"int* arr = new int[10];"}],"type":5},{"date":"2022-03-27 19:28:20","docid":0,"fillcolor":"fffeeb73","id":373,"originaltext":"delete[] arr;","page":4,"textblocks":[{"first":[84.0859375,303.451904296875,5.775001525878906,10.5],"last":[153.3648223876953,303.451904296875,5.774993896484375,10.5],"length":13,"rects":[[84.0859375,303.451904296875,75.05387878417969,10.5]],"start":239,"text":"delete[] arr;"}],"type":5}],"originaltext":"⽰例2：开辟数组","page":4,"textblocks":[{"first":[43,42.5,10.5,12.5],"last":[112.03955078125,42.5,10.5,12.5],"length":8,"rects":[[43,42.5,79.53955078125,12.5]],"start":26,"text":"⽰例2：开辟数组"}],"type":5}],"originaltext":"1.3 new/delete操作符","page":3,"textblocks":[{"first":[43,283.1499938964844,6.617572784423828,14.5],"last":[109.05746459960938,283.1499938964844,12.277496337890625,14.5],"length":10,"rects":[[43,283.1499938964844,78.3349609375,14.5]],"start":172,"text":"1.3 new操作符"}],"type":5},{"annotations":[],"date":"2022-03-05 15:57:37","id":365,"linecolor":"ff59c6ff","markups":[{"date":"2022-03-05 15:59:34","docid":0,"id":367,"linecolor":"ffd01a11","linewidth":7,"originaltext":"malloc\n的全称是memory allocation，中文叫动态内存分配。\n原型：extern void *malloc(unsigned int num_bytes);\n\nfree函数\nvoid free(void *FirstByte)： 该函数是将之前用malloc分配的空间还给程序或者是操作系统，也就是释放了这块内存，让它重新得到自由。\n\nmalloc和new的区别\n1.new 返回指定类型的指针，并且可以自动计算所需要大小。 \n而 malloc 则必须要由我们计算字节数，并且在返回后强行转换为实际类型的指针。\n2.因此C++语言需要一个能完成动态内存分配和初始化工作的运算符new，以及一个能完成清理与释放内存工作的运算符delete。注意new/delete不是库函数。\n3.我们不要企图用malloc/free来完成动态对象的内存管理，应该用new/delete。由于内部数据类型的“对象”没有构造与析构的过程，对它们而言malloc/free和new/delete是等价的。\n4.都在在堆区中分配创建了一个整型对象","page":3,"rect":[258.5083509584648,438.07825442145423,557.1846338803332,671.6755119272055],"type":11}],"page":-1,"title":"1.4 malloc/free","type":7}],"originaltext":"1 内存分区模型","page":0,"textblocks":[{"first":[43,130.75,8.489250183105469,17.5],"last":[134.5545654296875,130.75,15.75,17.5],"length":8,"rects":[[43,130.75,107.3045654296875,17.5]],"start":76,"text":"1 内存分区模型"}],"type":5},{"date":"2022-02-11 20:48:02","docid":0,"fillcolor":"ffffed99","id":18,"markups":[{"date":"2022-02-11 20:48:06","docid":0,"fillcolor":"ffffed99","id":19,"originaltext":"2.1 引⽤的基本使⽤","page":4,"textblocks":[{"first":[43,462.25,6.617572784423828,14.5],"last":[135.92648315429688,462.25,12.277496337890625,14.5],"length":11,"rects":[[43,462.25,105.2039794921875,14.5]],"start":299,"text":"2.1 引⽤的基本使⽤"}],"type":5},{"date":"2022-02-11 20:48:21","docid":0,"fillcolor":"ffffed99","id":20,"markups":[{"date":"2022-02-11 20:48:25","docid":0,"fillcolor":"ff60bb46","id":21,"originaltext":"引⽤必须初始化\n引⽤在初始化后，不可以改变","page":5,"textblocks":[{"first":[73,131.25,10.5,12.5],"last":[199,146.75,10.5,12.5],"length":21,"rects":[[73,131.25,73.5,12.5],[73,146.75,136.5,12.5]],"start":52,"text":"引⽤必须初始化\n引⽤在初始化后，不可以改变"}],"type":5}],"originaltext":"2.2 引⽤注意事项","page":5,"textblocks":[{"first":[43,100.5,6.617572784423828,14.5],"last":[123.64898681640625,100.5,12.277496337890625,14.5],"length":10,"rects":[[43,100.5,92.92648315429688,14.5]],"start":41,"text":"2.2 引⽤注意事项"}],"type":5},{"date":"2022-02-11 20:48:52","docid":0,"fillcolor":"ffffed99","id":22,"originaltext":"2.3 引⽤做函数参数","page":5,"textblocks":[{"first":[43,477.25,6.617572784423828,14.5],"last":[135.92648315429688,477.25,12.277496337890625,14.5],"length":11,"rects":[[43,477.25,105.2039794921875,14.5]],"start":335,"text":"2.3 引⽤做函数参数"}],"type":5},{"date":"2022-02-11 20:49:01","docid":0,"fillcolor":"ffffed99","id":23,"markups":[{"date":"2022-02-11 20:58:02","docid":0,"fillcolor":"ff60bb46","id":25,"originaltext":"作⽤：引⽤是可以作为函数的返回值存在的\n注意：不要返回局部变量引⽤\n⽤法：函数调⽤作为左值","page":6,"textblocks":[{"first":[43,500.25,10.5,12.5],"last":[148,554.25,10.5,12.5],"length":45,"rects":[[43,500.25,199.5,12.5],[43,527.25,136.5,12.5],[43,554.25,115.5,12.5]],"start":435,"text":"作⽤：引⽤是可以作为函数的返回值存在的\n注意：不要返回局部变量引⽤\n⽤法：函数调⽤作为左值"}],"type":5}],"originaltext":"2.4 引⽤做函数返回值","page":6,"textblocks":[{"first":[43,471.3999938964844,6.617572784423828,14.5],"last":[148.2039794921875,471.3999938964844,12.277496337890625,14.5],"length":12,"rects":[[43,471.3999938964844,117.48147583007812,14.5]],"start":422,"text":"2.4 引⽤做函数返回值"}],"type":5},{"date":"2022-02-11 20:57:40","docid":0,"fillcolor":"ffffed99","id":24,"markups":[{"date":"2022-02-11 20:59:25","docid":0,"fillcolor":"ff60bb46","id":26,"originaltext":"本质：引⽤的本质在c++内部实现是⼀个指针常量.","page":7,"textblocks":[{"first":[43,413.75,10.5,12.5],"last":[272.887451171875,413.75,2.845489501953125,12.5],"length":24,"rects":[[43,413.75,232.73294067382812,12.5]],"start":403,"text":"本质：引⽤的本质在c++内部实现是⼀个指针常量."}],"type":5}],"originaltext":"2.5 引⽤的本质","page":7,"textblocks":[{"first":[43,385,6.617572784423828,14.5],"last":[111.37149047851562,385,12.277496337890625,14.5],"length":9,"rects":[[43,385,80.64898681640625,14.5]],"start":393,"text":"2.5 引⽤的本质"}],"type":5},{"date":"2022-02-11 20:59:46","docid":0,"fillcolor":"ffffed99","id":27,"markups":[{"date":"2022-02-11 21:04:47","docid":0,"fillcolor":"ff60bb46","id":28,"originaltext":"在函数形参列表中，可以加==const修饰形参==，防⽌形参改变实参","page":8,"textblocks":[{"first":[43,98,10.5,13.5],"last":[348.689453125,98,10.5,13.5],"length":34,"rects":[[43,98,316.189453125,13.5]],"start":61,"text":"在函数形参列表中，可以加==const修饰形参==，防⽌形参改变实参"}],"type":5}],"originaltext":"2.6 常量引⽤","page":8,"textblocks":[{"first":[43,43,6.617572784423828,14.5],"last":[99.093994140625,43,12.277496337890625,14.5],"length":8,"rects":[[43,43,68.37149047851562,14.5]],"start":26,"text":"2.6 常量引⽤"}],"type":5}],"originaltext":"2 引⽤","page":4,"textblocks":[{"first":[43,430.75,8.489250183105469,17.5],"last":[71.5545654296875,430.75,15.75,17.5],"length":4,"rects":[[43,430.75,44.3045654296875,17.5]],"start":294,"text":"2 引⽤"}],"type":5},{"date":"2022-02-15 16:14:53","docid":0,"fillcolor":"ffffed99","id":29,"markups":[{"date":"2022-02-15 16:14:58","docid":0,"fillcolor":"ffffed99","id":30,"markups":[{"date":"2022-02-15 16:15:36","docid":0,"fillcolor":"ff60bb46","id":31,"originaltext":"//1. 如果某个位置参数有默认值，那么从这个位置往后，从左向右，必须都要有默认值\n//2. 如果函数声明有默认值，函数实现的时候就不能有默认参数","page":8,"textblocks":[{"first":[61,743.25,5.775001525878906,12.5],"last":[352.36474609375,756.5,10.5,12.5],"length":73,"rects":[[61,743.25,406.86474609375,12.5],[61,756.5,301.86474609375,12.5]],"start":629,"text":"//1. 如果某个位置参数有默认值，那么从这个位置往后，从左向右，必须都要有默认值\n//2. 如果函数声明有默认值，函数实现的时候就不能有默认参数"}],"type":5}],"originaltext":"3.1 函数默认参数","page":8,"textblocks":[{"first":[43,559,6.617572784423828,14.5],"last":[123.64898681640625,559,12.277496337890625,14.5],"length":10,"rects":[[43,559,92.92648315429688,14.5]],"start":493,"text":"3.1 函数默认参数"}],"type":5},{"date":"2022-02-15 16:16:04","docid":0,"fillcolor":"ffffed99","id":32,"originaltext":"3.2 函数占位参数","page":9,"textblocks":[{"first":[43,244,6.617572784423828,14.5],"last":[123.64898681640625,244,12.277496337890625,14.5],"length":10,"rects":[[43,244,92.92648315429688,14.5]],"start":187,"text":"3.2 函数占位参数"}],"type":5},{"date":"2022-02-15 16:16:24","docid":0,"fillcolor":"ffffed99","id":35,"markups":[{"date":"2022-02-15 16:16:26","docid":0,"fillcolor":"ffffed99","id":36,"markups":[{"date":"2022-02-15 16:16:35","docid":0,"fillcolor":"ff60bb46","id":37,"originaltext":"注意: 函数的返回值不可以作为函数重载的条件","page":9,"textblocks":[{"first":[43,788.75,10.5,12.5],"last":[248.20703125,788.75,10.5,12.5],"length":22,"rects":[[43,788.75,215.70703125,12.5]],"start":557,"text":"注意: 函数的返回值不可以作为函数重载的条件"}],"type":5}],"originaltext":"3.3.1 函数重载概述","page":9,"textblocks":[{"first":[43,644.75,6.037498474121094,12.5],"last":[122.206298828125,644.75,10.5,12.5],"length":12,"rects":[[43,644.75,89.706298828125,12.5]],"start":473,"text":"3.3.1 函数重载概述"}],"type":5},{"date":"2022-02-15 16:16:44","docid":0,"fillcolor":"ffffed99","id":38,"markups":[{"date":"2022-02-15 16:16:47","docid":0,"fillcolor":"ff60bb46","id":39,"originaltext":"引⽤作为重载条件\n函数重载碰到函数默认参数","page":10,"textblocks":[{"first":[73,734,10.5,13.5],"last":[188.5,750.5,10.5,12.5],"length":21,"rects":[[73,734,84,13.5],[73,750.5,126,12.5]],"start":645,"text":"引⽤作为重载条件\n函数重载碰到函数默认参数"}],"type":5}],"originaltext":"3.3.2 函数重载注意事项","page":10,"textblocks":[{"first":[43,704.7000122070312,6.037498474121094,13.5],"last":[143.206298828125,704.7000122070312,10.5,13.5],"length":14,"rects":[[43,704.7000122070312,110.706298828125,13.5]],"start":630,"text":"3.3.2 函数重载注意事项"}],"type":5}],"originaltext":"3.3 函数重载","page":9,"textblocks":[{"first":[43,613.5,6.617572784423828,14.5],"last":[99.093994140625,613.5,12.277496337890625,14.5],"length":8,"rects":[[43,613.5,68.37149047851562,14.5]],"start":464,"text":"3.3 函数重载"}],"type":5}],"originaltext":"3 函数提⾼","page":8,"textblocks":[{"first":[43,528.25,8.489250183105469,17.5],"last":[103.0545654296875,528.25,15.75,17.5],"length":6,"rects":[[43,528.25,75.8045654296875,17.5]],"start":486,"text":"3 函数提⾼"}],"type":5},{"date":"2022-02-15 16:18:09","docid":0,"fillcolor":"ffffed99","id":40,"markups":[{"date":"2022-02-15 16:18:16","docid":0,"fillcolor":"ff60bb46","id":41,"originaltext":"C++⾯向对象的三⼤特性为：==封装、继承、多态==","page":11,"textblocks":[{"first":[43,671,6.499500274658203,13.5],"last":[284.9144287109375,671,7.1820068359375,13.5],"length":26,"rects":[[43,671,249.096435546875,13.5]],"start":525,"text":"C++⾯向对象的三⼤特性为：==封装、继承、多态=="}],"type":5},{"date":"2022-02-15 16:18:32","docid":0,"fillcolor":"ffffed99","id":43,"markups":[{"date":"2022-02-15 16:18:33","docid":0,"fillcolor":"ffffed99","id":44,"originaltext":"4.1.1 封装的意义","page":12,"textblocks":[{"first":[43,101.75,6.037498474121094,12.5],"last":[111.6953125,101.75,10.5,12.5],"length":11,"rects":[[43,101.75,79.1953125,12.5]],"start":75,"text":"4.1.1 封装的意义"}],"type":5},{"date":"2022-02-15 16:19:09","docid":0,"fillcolor":"ffffed99","id":46,"markups":[{"date":"2022-02-15 16:19:18","docid":0,"fillcolor":"ff60bb46","id":47,"originaltext":"在C++中 struct和class唯⼀的区别就在于 默认的访问权限不同","page":14,"textblocks":[{"first":[43,765.5,10.5,12.5],"last":[316.7734375,765.5,10.5,12.5],"length":36,"rects":[[43,765.5,284.2734375,12.5]],"start":612,"text":"在C++中 struct和class唯⼀的区别就在于 默认的访问权限不同"}],"type":5}],"originaltext":"4.1.2 struct和class区别","page":14,"textblocks":[{"first":[43,737,6.037498474121094,12.5],"last":[142.01171875,737,10.5,12.5],"length":20,"rects":[[43,737,109.51171875,12.5]],"start":591,"text":"4.1.2 struct和class区别"}],"type":5},{"date":"2022-02-15 16:19:21","docid":0,"fillcolor":"ffffed99","id":48,"originaltext":"4.1.3 成员属性设置为私有","page":15,"textblocks":[{"first":[43,449.75,6.037498474121094,12.5],"last":[153.706298828125,449.75,10.5,12.5],"length":15,"rects":[[43,449.75,121.206298828125,12.5]],"start":269,"text":"4.1.3 成员属性设置为私有"}],"type":5}],"originaltext":"4.1 封装","page":12,"textblocks":[{"first":[43,72.5,6.617572784423828,11.5],"last":[74.53900146484375,72.5,12.277496337890625,11.5],"length":6,"rects":[[43,72.5,43.816497802734375,11.5]],"start":68,"text":"4.1 封装"}],"type":5},{"date":"2022-02-15 16:19:40","docid":0,"fillcolor":"ffffed99","id":49,"markups":[{"date":"2022-02-15 16:19:44","docid":0,"fillcolor":"ffffed99","id":50,"markups":[{"date":"2022-02-15 16:20:27","docid":0,"fillcolor":"ff60bb46","id":55,"originaltext":"对象的初始化和清理⼯作是编译器强制要我们做的事情，因此如果我们不提供构造和析构，编译器会提供编译器提供的构造函数和析构函数是空实现。","page":18,"textblocks":[{"first":[43,113,10.5,13.5],"last":[242.5,140,10.5,13.5],"length":67,"rects":[[43,113,483,13.5],[43,140,210,13.5]],"start":114,"text":"对象的初始化和清理⼯作是编译器强制要我们做的事情，因此如果我们不提供构造和析构，编译器会提供\n编译器提供的构造函数和析构函数是空实现。"}],"type":5}],"originaltext":"4.2.1 构造函数和析构函数","page":17,"textblocks":[{"first":[43,719.25,6.037498474121094,12.5],"last":[153.706298828125,719.25,10.5,12.5],"length":15,"rects":[[43,719.25,121.206298828125,12.5]],"start":187,"text":"4.2.1 构造函数和析构函数"}],"type":5},{"date":"2022-02-15 16:20:33","docid":0,"fillcolor":"ffffed99","id":56,"markups":[{"date":"2022-02-15 16:20:43","docid":0,"fillcolor":"ff60bb46","id":57,"originaltext":"两种分类⽅式：\n 按参数分为： 有参构造和⽆参构造\n 按类型分为： 普通构造和拷⻉构造","page":19,"textblocks":[{"first":[43,161.75,10.5,12.5],"last":[195.75244140625,215.75,10.5,12.5],"length":43,"rects":[[43,161.75,73.5,12.5],[43,188.75,163.25244140625,12.5],[43,215.75,163.25244140625,12.5]],"start":80,"text":"两种分类⽅式：\n 按参数分为： 有参构造和⽆参构造\n 按类型分为： 普通构造和拷⻉构造"}],"type":5},{"date":"2022-02-15 16:24:11","docid":0,"fillcolor":"ff60bb46","id":61,"originaltext":"三种调⽤⽅式： 括号法 显⽰法 隐式转换法","page":19,"textblocks":[{"first":[43,242.75,10.5,12.5],"last":[87.876220703125,323.75,10.5,12.5],"length":24,"rects":[[43,242.75,73.5,12.5],[43,269.75,34.376220703125,12.5],[43,296.75,34.376220703125,12.5],[43,323.75,55.376220703125,12.5]],"start":124,"text":"三种调⽤⽅式：\n 括号法\n 显⽰法\n 隐式转换法"}],"type":5}],"originaltext":"4.2.2 构造函数的分类及调⽤","page":19,"textblocks":[{"first":[43,131.75,6.037498474121094,12.5],"last":[164.206298828125,131.75,10.5,12.5],"length":16,"rects":[[43,131.75,131.706298828125,12.5]],"start":63,"text":"4.2.2 构造函数的分类及调⽤"}],"type":5},{"date":"2022-02-15 16:21:08","docid":0,"fillcolor":"ffffed99","id":59,"markups":[{"date":"2022-02-15 16:24:48","docid":0,"fillcolor":"ff60bb46","id":62,"markups":[{"date":"2022-02-15 16:24:50","docid":0,"fillcolor":"ff60bb46","id":63,"originaltext":"使⽤⼀个已经创建完毕的对象来初始化⼀个新对象\n值传递的⽅式给函数参数传值\n以值⽅式返回局部对象","page":20,"textblocks":[{"first":[73,630.5,10.5,12.5],"last":[167.5,663.5,10.5,12.5],"length":47,"rects":[[73,630.5,231,12.5],[73,647,136.5,13.5],[73,663.5,105,12.5]],"start":601,"text":"使⽤⼀个已经创建完毕的对象来初始化⼀个新对象\n值传递的⽅式给函数参数传值\n以值⽅式返回局部对象"}],"type":5}],"originaltext":"C++中拷⻉构造函数调⽤时机通常有三种情况","page":20,"textblocks":[{"first":[43,603.5,6.499500274658203,12.5],"last":[242.36669921875,603.5,10.5,12.5],"length":21,"rects":[[43,603.5,209.86669921875,12.5]],"start":579,"text":"C++中拷⻉构造函数调⽤时机通常有三种情况"}],"type":5}],"originaltext":"4.2.3 拷⻉构造函数调⽤时机","page":20,"textblocks":[{"first":[43,573.5,6.037498474121094,12.5],"last":[164.206298828125,573.5,10.5,12.5],"length":16,"rects":[[43,573.5,131.706298828125,12.5]],"start":562,"text":"4.2.3 拷⻉构造函数调⽤时机"}],"type":5},{"date":"2022-02-15 16:21:27","docid":0,"fillcolor":"ffffed99","id":60,"markups":[{"date":"2022-02-15 16:51:59","docid":0,"fillcolor":"ff60bb46","id":64,"markups":[{"date":"2022-02-15 16:52:03","docid":0,"fillcolor":"ff60bb46","id":65,"originaltext":"1．默认构造函数(⽆参，函数体为空)2．默认析构函数(⽆参，函数体为空)3．默认拷⻉构造函数，对属性进⾏值拷⻉","page":22,"textblocks":[{"first":[43,231.5,5.6595001220703125,12.5],"last":[227.16015625,285.5,10.5,12.5],"length":57,"rects":[[43,231.5,169.49961853027344,12.5],[43,258.5,169.49961853027344,12.5],[43,285.5,194.66015625,12.5]],"start":131,"text":"1．默认构造函数(⽆参，函数体为空)\n2．默认析构函数(⽆参，函数体为空)\n3．默认拷⻉构造函数，对属性进⾏值拷⻉"}],"type":5}],"originaltext":"默认情况下，c++编译器⾄少给⼀个类添加3个函数","page":22,"textblocks":[{"first":[43,204.5,10.5,12.5],"last":[267.3759765625,204.5,10.5,12.5],"length":24,"rects":[[43,204.5,234.8759765625,12.5]],"start":106,"text":"默认情况下，c++编译器⾄少给⼀个类添加3个函数"}],"type":5},{"date":"2022-02-15 16:52:07","docid":0,"fillcolor":"ff60bb46","id":66,"markups":[{"date":"2022-02-15 16:52:10","docid":0,"fillcolor":"ff60bb46","id":67,"originaltext":"如果⽤户定义有参构造函数，c++不在提供默认⽆参构造，但是会提供默认拷⻉构造如果⽤户定义拷⻉构造函数，c++不会再提供其他构造函数","page":22,"textblocks":[{"first":[73,339.5,10.5,12.5],"last":[333.7158203125,366.5,10.5,12.5],"length":66,"rects":[[73,339.5,386.7158203125,12.5],[73,366.5,271.2158203125,12.5]],"start":201,"text":"如果⽤户定义有参构造函数，c++不在提供默认⽆参构造，但是会提供默认拷⻉构造\n如果⽤户定义拷⻉构造函数，c++不会再提供其他构造函数"}],"type":5}],"originaltext":"构造函数调⽤规则如下：","page":22,"textblocks":[{"first":[43,312.5,10.5,12.5],"last":[148,312.5,10.5,12.5],"length":11,"rects":[[43,312.5,115.5,12.5]],"start":189,"text":"构造函数调⽤规则如下："}],"type":5}],"originaltext":"4.2.4 构造函数调⽤规则","page":22,"textblocks":[{"first":[43,174.5,6.037498474121094,12.5],"last":[143.206298828125,174.5,10.5,12.5],"length":14,"rects":[[43,174.5,110.706298828125,12.5]],"start":91,"text":"4.2.4 构造函数调⽤规则"}],"type":5}],"originaltext":"4.2 对象的初始化和清理","page":17,"textblocks":[{"first":[43,625.5,6.617572784423828,14.5],"last":[160.48147583007812,625.5,12.277496337890625,14.5],"length":13,"rects":[[43,625.5,129.75897216796875,14.5]],"start":79,"text":"4.2 对象的初始化和清理"}],"type":5},{"date":"2022-02-18 16:43:02","docid":0,"fillcolor":"ffffed99","id":68,"markups":[{"date":"2022-02-18 16:43:15","docid":0,"fillcolor":"ff60bb46","id":69,"markups":[{"date":"2022-02-18 17:20:11","docid":0,"id":70,"linecolor":"ffd01a11","linewidth":11,"originaltext":"浅拷贝只是对指针的拷贝，拷贝后两个指针指向同一个内存空间，深拷贝不但对指针进行拷贝，而且对指针指向的内容进行拷贝，经深拷贝后的指针是指向两个不同地址的指针。","page":23,"rect":[263.5027415578469,471.87547690323646,542.4887898325258,569.1193860537975],"type":11}],"originaltext":"浅拷⻉：简单的赋值拷⻉操作\n深拷⻉：在堆区重新申请空间，进⾏拷⻉操作","page":23,"textblocks":[{"first":[43,530.75,10.5,12.5],"last":[242.5,557.75,10.5,12.5],"length":34,"rects":[[43,530.75,136.5,12.5],[43,557.75,210,12.5]],"start":540,"text":"浅拷⻉：简单的赋值拷⻉操作\n深拷⻉：在堆区重新申请空间，进⾏拷⻉操作"}],"type":5}],"originaltext":"4.2.5 深拷⻉与浅拷⻉","page":23,"textblocks":[{"first":[43,473.75,6.037498474121094,12.5],"last":[132.706298828125,473.75,10.5,12.5],"length":13,"rects":[[43,473.75,100.206298828125,12.5]],"start":505,"text":"4.2.5 深拷⻉与浅拷⻉"}],"type":5},{"date":"2022-02-18 17:26:49","docid":0,"fillcolor":"ffffed99","id":238,"originaltext":"4.2.6 初始化列表","page":24,"textblocks":[{"first":[43,728.75,6.037498474121094,12.5],"last":[111.706298828125,728.75,10.5,12.5],"length":11,"rects":[[43,728.75,79.206298828125,12.5]],"start":708,"text":"4.2.6 初始化列表"}],"type":5},{"date":"2022-02-18 17:28:13","docid":0,"fillcolor":"ffffed99","id":239,"originaltext":"4.2.7 类对象作为类成员","page":25,"textblocks":[{"first":[43,617,6.037498474121094,13.5],"last":[143.206298828125,617,10.5,13.5],"length":14,"rects":[[43,617,110.706298828125,13.5]],"start":530,"text":"4.2.7 类对象作为类成员"}],"type":5},{"date":"2022-02-18 17:28:56","docid":0,"fillcolor":"ffffed99","id":240,"markups":[{"date":"2022-02-18 17:29:10","docid":0,"fillcolor":"ff60bb46","id":241,"originaltext":"//构造的顺序是 ：先调⽤对象成员的构造，再调⽤本类构造","page":26,"textblocks":[{"first":[84.0859375,795.5,5.775001525878906,12.5],"last":[353.40478515625,795.5,10.5,12.5],"length":28,"rects":[[84.0859375,795.5,279.81884765625,12.5]],"start":670,"text":"//构造的顺序是 ：先调⽤对象成员的构造，再调⽤本类构造"}],"type":5},{"date":"2022-02-18 17:29:15","docid":0,"fillcolor":"ff60bb46","id":243,"originaltext":"//析构顺序与构造相反","page":27,"textblocks":[{"first":[84.0859375,41,5.775001525878906,13.5],"last":[179.6318359375,41,10.5,13.5],"length":11,"rects":[[84.0859375,41,106.0458984375,13.5]],"start":28,"text":"//析构顺序与构造相反"}],"type":5}],"originaltext":"那么当创建B对象时，A与B的构造和析构的顺序是谁先谁后？","page":26,"textblocks":[{"first":[43,69.5,10.5,12.5],"last":[313.810791015625,69.5,10.5,12.5],"length":28,"rects":[[43,69.5,281.310791015625,12.5]],"start":46,"text":"那么当创建B对象时，A与B的构造和析构的顺序是谁先谁后？"}],"type":5},{"date":"2022-02-18 17:30:51","docid":0,"fillcolor":"ffffed99","id":244,"markups":[{"date":"2022-02-18 17:31:08","docid":0,"fillcolor":"ff60bb46","id":245,"markups":[{"date":"2022-02-18 17:31:15","docid":0,"id":246,"imgfile":"2ca88667238d453c8f60dd9ca3118ed6.png","linecolor":"ffa0ec6f","linewidth":2,"page":27,"rect":[41.58110638058222,345.26334399157594,317.6983408853473,490.5636146023745],"type":2}],"originaltext":"静态成员就是在成员变量和成员函数前加上关键字static，称为静态成员","page":27,"textblocks":[{"first":[43,318.5,10.5,12.5],"last":[361.306884765625,318.5,10.5,12.5],"length":35,"rects":[[43,318.5,328.806884765625,12.5]],"start":169,"text":"静态成员就是在成员变量和成员函数前加上关键字static，称为静态成员"}],"type":5}],"originaltext":"4.2.8 静态成员","page":27,"textblocks":[{"first":[43,290,6.037498474121094,12.5],"last":[101.206298828125,290,10.5,12.5],"length":10,"rects":[[43,290,68.706298828125,12.5]],"start":158,"text":"4.2.8 静态成员"}],"type":5},{"date":"2022-02-20 18:40:34","docid":0,"fillcolor":"ffffed99","id":248,"markups":[{"date":"2022-02-20 18:40:35","docid":0,"fillcolor":"ffffed99","id":249,"markups":[{"date":"2022-02-20 18:40:42","docid":0,"fillcolor":"ff60bb46","id":250,"markups":[{"date":"2022-02-20 18:42:47","docid":0,"id":251,"linecolor":"fffe01d4","linewidth":12,"originaltext":"其余属于类本身","page":29,"rect":[263.5027415578469,620.9133750538626,426.99998730421106,645.4999807924038],"type":11},{"date":"2022-02-20 18:43:09","docid":0,"fillcolor":"ff60bb46","id":252,"originaltext":"//非静态成员变量占对象空间","page":29,"textblocks":[{"first":[84.0859375,731.75,5.775001525878906,12.5],"last":[211.1318359375,731.75,10.5,12.5],"length":14,"rects":[[84.0859375,731.75,137.5458984375,12.5]],"start":481,"text":"//非静态成员变量占对象空间"}],"type":5},{"date":"2022-02-20 18:43:11","docid":0,"fillcolor":"ff60bb46","id":253,"originaltext":"//静态成员变量不占对象空间","page":29,"textblocks":[{"first":[84.0859375,761.25,5.775001525878906,12.5],"last":[211.1318359375,761.25,10.5,12.5],"length":14,"rects":[[84.0859375,761.25,137.5458984375,12.5]],"start":508,"text":"//静态成员变量不占对象空间"}],"type":5},{"date":"2022-02-20 18:43:14","docid":0,"fillcolor":"ff60bb46","id":254,"originaltext":"//函数也不占对象空间，所有函数共享⼀个函数实例","page":29,"textblocks":[{"first":[84.0859375,788.75,5.775001525878906,12.5],"last":[316.1318359375,788.75,10.5,12.5],"length":24,"rects":[[84.0859375,788.75,242.5458984375,12.5]],"start":543,"text":"//函数也不占对象空间，所有函数共享⼀个函数实例"}],"type":5}],"originaltext":"在C++中，类内的成员变量和成员函数分开存储\n只有非静态成员变量才属于类的对象上","page":29,"textblocks":[{"first":[43,590,10.5,13.5],"last":[211,617,10.5,13.5],"length":40,"rects":[[43,590,220.36669921875,13.5],[43,617,178.5,13.5]],"start":387,"text":"在C++中，类内的成员变量和成员函数分开存储\n只有非静态成员变量才属于类的对象上"}],"type":5}],"originaltext":"4.3.1 成员变量和成员函数分开存储","page":29,"textblocks":[{"first":[43,560.25,6.037498474121094,12.5],"last":[195.706298828125,560.25,10.5,12.5],"length":19,"rects":[[43,560.25,163.206298828125,12.5]],"start":367,"text":"4.3.1 成员变量和成员函数分开存储"}],"type":5}],"originaltext":"4.3 C++对象模型和this指针","page":29,"textblocks":[{"first":[43,529.9000244140625,6.617572784423828,14.5],"last":[179.6170654296875,529.9000244140625,12.277496337890625,14.5],"length":18,"rects":[[43,529.9000244140625,148.89456176757812,14.5]],"start":348,"text":"4.3 C++对象模型和this指针"}],"type":5},{"date":"2022-02-20 18:43:17","docid":0,"fillcolor":"ffffed99","id":255,"markups":[{"date":"2022-02-20 18:43:28","docid":0,"fillcolor":"ff60bb46","id":256,"markups":[{"date":"2022-02-20 18:43:30","docid":0,"fillcolor":"ff60bb46","id":257,"markups":[{"date":"2022-02-20 18:43:34","docid":0,"fillcolor":"ff60bb46","id":258,"originaltext":"c++通过提供特殊的对象指针，this指针，解决上述问题。this指针指向被调⽤的成员函数所属的对象","page":30,"textblocks":[{"first":[43,413.75,4.851001739501953,12.5],"last":[495.718017578125,413.75,10.5,12.5],"length":50,"rects":[[43,413.75,463.218017578125,12.5]],"start":341,"text":"c++通过提供特殊的对象指针，this指针，解决上述问题。this指针指向被调⽤的成员函数所属的对象"}],"type":5}],"originaltext":"那么问题是：这⼀块代码是如何区分那个对象调⽤⾃⼰的呢？","page":30,"textblocks":[{"first":[43,386.75,10.5,12.5],"last":[316,386.75,10.5,12.5],"length":27,"rects":[[43,386.75,283.5,12.5]],"start":313,"text":"那么问题是：这⼀块代码是如何区分那个对象调⽤⾃⼰的呢？"}],"type":5}],"originaltext":"每⼀个非静态成员函数只会诞⽣⼀份函数实例，也就是说多个同类型的对象会共⽤⼀块代码","page":30,"textblocks":[{"first":[43,359.75,10.5,12.5],"last":[452.5,359.75,10.5,12.5],"length":40,"rects":[[43,359.75,420,12.5]],"start":272,"text":"每⼀个非静态成员函数只会诞⽣⼀份函数实例，也就是说多个同类型的对象会共⽤⼀块代码"}],"type":5},{"date":"2022-02-20 18:43:41","docid":0,"fillcolor":"ff60bb46","id":259,"originaltext":"this指针的⽤途：\n当形参和成员变量同名时，可⽤this指针来区分\n在类的非静态成员函数中返回对象本⾝，可使⽤return *this","page":30,"textblocks":[{"first":[43,494.75,3.5595016479492188,12.5],"last":[341.0440368652344,539.25,4.451995849609375,12.5],"length":68,"rects":[[43,494.75,79.49853515625,12.5],[73,521.75,215.99853515625,12.5],[73,539.25,272.49603271484375,12.5]],"start":437,"text":"this指针的⽤途：\n当形参和成员变量同名时，可⽤this指针来区分\n在类的非静态成员函数中返回对象本⾝，可使⽤return *this"}],"type":5}],"originaltext":"4.3.2 this指针概念","page":30,"textblocks":[{"first":[43,304.25,6.037498474121094,12.5],"last":[119.21728515625,304.25,10.5,12.5],"length":14,"rects":[[43,304.25,86.71728515625,12.5]],"start":225,"text":"4.3.2 this指针概念"}],"type":5},{"date":"2022-02-20 18:43:57","docid":0,"fillcolor":"ffffed99","id":261,"originaltext":"4.3.3 空指针访问成员函数","page":31,"textblocks":[{"first":[43,389.25,6.037498474121094,12.5],"last":[153.706298828125,389.25,10.5,12.5],"length":15,"rects":[[43,389.25,121.206298828125,12.5]],"start":318,"text":"4.3.3 空指针访问成员函数"}],"type":5},{"date":"2022-02-20 18:49:36","docid":0,"fillcolor":"ffffed99","id":263,"markups":[{"date":"2022-02-20 18:49:43","docid":0,"fillcolor":"ff60bb46","id":264,"originaltext":"常函数：成员函数后加const后我们称为这个函数为常函数常函数内不可以修改成员属性成员属性声明时加关键字mutable后，在常函数中依然可以修改","page":32,"textblocks":[{"first":[43,305.25,10.5,12.5],"last":[352.59326171875,365.25,10.5,12.5],"length":75,"rects":[[43,305.25,42,12.5],[73,332.25,224.44921875,12.5],[73,347.75,136.5,12.5],[73,365.25,290.09326171875,12.5]],"start":224,"text":"常函数：\n成员函数后加const后我们称为这个函数为常函数\n常函数内不可以修改成员属性\n成员属性声明时加关键字mutable后，在常函数中依然可以修改"}],"type":5},{"date":"2022-02-20 18:49:47","docid":0,"fillcolor":"ff60bb46","id":265,"originaltext":"常对象：声明对象前加const称该对象为常对象常对象只能调⽤常函数","page":32,"textblocks":[{"first":[43,392.25,10.5,12.5],"last":[167.5,434.75,10.5,12.5],"length":35,"rects":[[43,392.25,42,12.5],[73,419.25,171.9580078125,12.5],[73,434.75,105,12.5]],"start":300,"text":"常对象：\n声明对象前加const称该对象为常对象\n常对象只能调⽤常函数"}],"type":5}],"originaltext":"4.3.4 const修饰成员函数","page":32,"textblocks":[{"first":[43,274.95001220703125,6.037498474121094,13.5],"last":[148.722900390625,274.95001220703125,10.5,13.5],"length":17,"rects":[[43,274.95001220703125,116.222900390625,13.5]],"start":206,"text":"4.3.4 const修饰成员函数"}],"type":5},{"date":"2022-02-20 18:49:54","docid":0,"fillcolor":"ffffed99","id":266,"markups":[{"date":"2022-02-20 18:50:03","docid":0,"fillcolor":"ffffed99","id":268,"originaltext":"4.4.1 全局函数做友元","page":33,"textblocks":[{"first":[43,752.75,6.037498474121094,12.5],"last":[132.706298828125,752.75,10.5,12.5],"length":13,"rects":[[43,752.75,100.206298828125,12.5]],"start":616,"text":"4.4.1 全局函数做友元"}],"type":5},{"date":"2022-02-20 18:50:06","docid":0,"fillcolor":"ffffed99","id":269,"originaltext":"4.4.2 类做友元","page":34,"textblocks":[{"first":[43,686.25,6.037498474121094,12.5],"last":[101.206298828125,686.25,10.5,12.5],"length":10,"rects":[[43,686.25,68.706298828125,12.5]],"start":589,"text":"4.4.2 类做友元"}],"type":5},{"date":"2022-02-20 18:50:09","docid":0,"fillcolor":"ffffed99","id":270,"originaltext":"4.4.3 成员函数做友元","page":36,"textblocks":[{"first":[43,59.25,6.037498474121094,12.5],"last":[132.706298828125,59.25,10.5,12.5],"length":13,"rects":[[43,59.25,100.206298828125,12.5]],"start":27,"text":"4.4.3 成员函数做友元"}],"type":5}],"originaltext":"4.4 友元","page":33,"textblocks":[{"first":[43,473,6.617572784423828,12.5],"last":[74.53900146484375,473,12.277496337890625,12.5],"length":6,"rects":[[43,473,43.816497802734375,12.5]],"start":399,"text":"4.4 友元"}],"type":5},{"date":"2022-02-22 11:19:36","docid":0,"fillcolor":"ffffed99","id":271,"markups":[{"date":"2022-02-22 11:19:41","docid":0,"fillcolor":"ff60bb46","id":272,"originaltext":"运算符重载概念：对已有的运算符重新进⾏定义，赋予其另⼀种功能，以适应不同的数据类型","page":37,"textblocks":[{"first":[43,344,10.5,13.5],"last":[463,344,10.5,13.5],"length":41,"rects":[[43,344,430.5,13.5]],"start":216,"text":"运算符重载概念：对已有的运算符重新进⾏定义，赋予其另⼀种功能，以适应不同的数据类型"}],"type":5},{"date":"2022-02-22 11:19:43","docid":0,"fillcolor":"ffffed99","id":273,"markups":[{"date":"2022-02-22 11:19:57","docid":0,"fillcolor":"ff60bb46","id":274,"originaltext":"总结1：对于内置的数据类型的表达式的的运算符是不可能改变的","page":38,"textblocks":[{"first":[58,599.25,10.5,12.5],"last":[347.16015625,599.25,10.5,12.5],"length":29,"rects":[[58,599.25,299.66015625,12.5]],"start":619,"text":"总结1：对于内置的数据类型的表达式的的运算符是不可能改变的"}],"type":5}],"originaltext":"4.5.1 加号运算符重载","page":37,"textblocks":[{"first":[43,374.70001220703125,6.037498474121094,13.5],"last":[132.706298828125,374.70001220703125,10.5,13.5],"length":13,"rects":[[43,374.70001220703125,100.206298828125,13.5]],"start":258,"text":"4.5.1 加号运算符重载"}],"type":5},{"date":"2022-02-22 11:20:03","docid":0,"fillcolor":"ffffed99","id":275,"markups":[{"date":"2022-02-22 11:22:24","docid":0,"fillcolor":"ff60bb46","id":276,"originaltext":"//成员函数 实现不了","page":39,"textblocks":[{"first":[84.0859375,126.5,5.775001525878906,12.5],"last":[174.90478515625,126.5,10.5,12.5],"length":11,"rects":[[84.0859375,126.5,101.31884765625,12.5]],"start":97,"text":"//成员函数 实现不了"}],"type":5},{"date":"2022-02-22 11:22:32","docid":0,"fillcolor":"ff60bb46","id":277,"originaltext":"总结：重载左移运算符配合友元可以实现输出⾃定义数据类型","page":39,"textblocks":[{"first":[58,599.25,10.5,12.5],"last":[331,599.25,10.5,12.5],"length":27,"rects":[[58,599.25,283.5,12.5]],"start":504,"text":"总结：重载左移运算符配合友元可以实现输出⾃定义数据类型"}],"type":5}],"originaltext":"4.5.2 左移运算符重载","page":38,"textblocks":[{"first":[43,656.7000122070312,6.037498474121094,13.5],"last":[132.706298828125,656.7000122070312,10.5,13.5],"length":13,"rects":[[43,656.7000122070312,100.206298828125,13.5]],"start":663,"text":"4.5.2 左移运算符重载"}],"type":5},{"date":"2022-02-22 11:22:36","docid":0,"fillcolor":"ffffed99","id":278,"markups":[{"date":"2022-02-22 11:26:56","docid":0,"fillcolor":"ff60bb46","id":279,"originaltext":"总结： 前置递增返回引⽤，后置递增返回值","page":41,"textblocks":[{"first":[58,68.75,10.5,12.5],"last":[249.876220703125,68.75,10.5,12.5],"length":20,"rects":[[58,68.75,202.376220703125,12.5]],"start":27,"text":"总结： 前置递增返回引⽤，后置递增返回值"}],"type":5}],"originaltext":"4.5.3 递增运算符重载","page":39,"textblocks":[{"first":[43,629,6.037498474121094,13.5],"last":[132.706298828125,629,10.5,13.5],"length":13,"rects":[[43,629,100.206298828125,13.5]],"start":532,"text":"4.5.3 递增运算符重载"}],"type":5},{"date":"2022-02-22 11:31:25","docid":0,"fillcolor":"ffffed99","id":280,"markups":[{"date":"2022-02-22 11:33:08","docid":0,"fillcolor":"ff60bb46","id":281,"originaltext":"c++编译器⾄少给⼀个类添加4个函数1. 默认构造函数(⽆参，函数体为空)2. 默认析构函数(⽆参，函数体为空)3. 默认拷⻉构造函数，对属性进⾏值拷⻉4. 赋值运算符 operator=, 对属性进⾏值拷⻉","page":41,"textblocks":[{"first":[43,129.5,4.851001739501953,12.5],"last":[254.38134765625,205.89999389648438,10.5,14.5],"length":108,"rects":[[43,129.5,171.8759765625,12.5],[62.5,156.5,163.83946228027344,12.5],[62.5,173,163.83946228027344,13.5],[62.5,189.5,189,12.5],[62.5,205.89999389648438,202.38134765625,14.5]],"start":62,"text":"c++编译器⾄少给⼀个类添加4个函数\n1. 默认构造函数(⽆参，函数体为空)\n2. 默认析构函数(⽆参，函数体为空)\n3. 默认拷⻉构造函数，对属性进⾏值拷⻉\n4. 赋值运算符 operator=, 对属性进⾏值拷⻉"}],"type":5}],"originaltext":"4.5.4 赋值运算符重载","page":41,"textblocks":[{"first":[43,99.5,6.037498474121094,12.5],"last":[132.706298828125,99.5,10.5,12.5],"length":13,"rects":[[43,99.5,100.206298828125,12.5]],"start":48,"text":"4.5.4 赋值运算符重载"}],"type":5},{"date":"2022-02-22 11:34:02","docid":0,"fillcolor":"ffffed99","id":282,"originaltext":"4.5.5 关系运算符重载","page":42,"textblocks":[{"first":[43,687.5,6.037498474121094,12.5],"last":[132.706298828125,687.5,10.5,12.5],"length":13,"rects":[[43,687.5,100.206298828125,12.5]],"start":538,"text":"4.5.5 关系运算符重载"}],"type":5},{"date":"2022-02-22 11:34:48","docid":0,"fillcolor":"ffffed99","id":283,"markups":[{"date":"2022-02-22 11:35:23","docid":0,"fillcolor":"ff60bb46","id":285,"originaltext":"函数调⽤运算符 () 也可以重载\n由于重载后使⽤的⽅式非常像函数的调⽤，因此称为仿函数\n仿函数没有固定写法，非常灵活","page":44,"textblocks":[{"first":[73,389.75,10.5,12.5],"last":[209.5,422.75,10.5,12.5],"length":58,"rects":[[73,389.75,138.08203125,12.5],[73,407.25,273,12.5],[73,422.75,147,12.5]],"start":212,"text":"函数调⽤运算符 () 也可以重载\n由于重载后使⽤的⽅式非常像函数的调⽤，因此称为仿函数\n仿函数没有固定写法，非常灵活"}],"type":5}],"originaltext":"4.5.6 函数调⽤运算符重载","page":44,"textblocks":[{"first":[43,359.75,6.037498474121094,12.5],"last":[153.706298828125,359.75,10.5,12.5],"length":15,"rects":[[43,359.75,121.206298828125,12.5]],"start":196,"text":"4.5.6 函数调⽤运算符重载"}],"type":5}],"originaltext":"4.5 运算符重载","page":37,"textblocks":[{"first":[43,315.25,6.617572784423828,14.5],"last":[111.37149047851562,315.25,12.277496337890625,14.5],"length":9,"rects":[[43,315.25,80.64898681640625,14.5]],"start":206,"text":"4.5 运算符重载"}],"type":5},{"date":"2022-02-22 11:48:00","docid":0,"fillcolor":"ffffed99","id":286,"markups":[{"date":"2022-02-22 11:49:11","docid":0,"fillcolor":"ff60bb46","id":287,"originaltext":"定义这些类时，下级别的成员除了拥有上⼀级的共性，还有⾃⼰的特性。这个时候我们就可以考虑利⽤继承的技术，减少重复代码","page":45,"textblocks":[{"first":[95.5,717.5,10.5,12.5],"last":[295,744.5,10.5,12.5],"length":58,"rects":[[95.5,717.5,336,12.5],[43,744.5,262.5,12.5]],"start":354,"text":"定义这些类时，下级别的成员除了拥有上⼀级的共性，还有⾃⼰的特性。\n这个时候我们就可以考虑利⽤继承的技术，减少重复代码"}],"type":5},{"date":"2022-02-22 11:49:15","docid":0,"fillcolor":"ffffed99","id":288,"markups":[{"date":"2022-02-22 12:55:03","docid":0,"fillcolor":"ff60bb46","id":289,"originaltext":"总结：继承的好处：==可以减少重复的代码==class A : public B;A 类称为⼦类 或 派⽣类B 类称为⽗类 或 基类","page":49,"textblocks":[{"first":[43,641.7000122070312,10.5,13.5],"last":[131.147705078125,749,10.5,13.5],"length":70,"rects":[[43,641.7000122070312,31.5,13.5],[43,668,186.22972106933594,13.5],[43,695.7000122070312,78.71851348876953,13.5],[43,722,109.9013671875,13.5],[43,749,98.647705078125,13.5]],"start":563,"text":"总结：\n继承的好处：==可以减少重复的代码==\nclass A : public B;\nA 类称为⼦类 或 派⽣类\nB 类称为⽗类 或 基类"}],"type":5},{"date":"2022-02-22 12:55:17","docid":0,"fillcolor":"ff60bb46","id":290,"originaltext":"继承⽅式⼀共有三种：公共继承保护继承私有继承","page":50,"textblocks":[{"first":[43,158.25,10.5,12.5],"last":[104.5,218.25,10.5,12.5],"length":25,"rects":[[43,158.25,105,12.5],[73,185.25,42,12.5],[73,200.75,42,12.5],[73,218.25,42,12.5]],"start":116,"text":"继承⽅式⼀共有三种：\n公共继承\n保护继承\n私有继承"}],"type":5},{"content":"未指定继承方式则为公共继承","date":"2022-02-22 12:58:50","docid":0,"id":291,"imgfile":"5f59583016b4564539797857476d52b8.png","leftbottomcorner":[39.74999881535772,544.4999837726359],"linecolor":"ff60bb46","linewidth":2,"page":50,"rect":[39.74999881535772,239.99999284744285,482.2499856278305,551.2499835714702],"title":"","topleftcorner":[39.74999881535772,239.99999284744285],"toprightcorner":[482.2499856278305,239.99999284744285],"type":2}],"originaltext":"4.6.1 继承的基本语法","page":45,"textblocks":[{"first":[43,776.25,6.037498474121094,12.5],"last":[132.706298828125,776.25,10.5,12.5],"length":13,"rects":[[43,776.25,100.206298828125,12.5]],"start":413,"text":"4.6.1 继承的基本语法"}],"type":5},{"date":"2022-02-22 12:59:37","docid":0,"fillcolor":"ffffed99","id":292,"markups":[{"date":"2022-02-22 13:00:21","docid":0,"fillcolor":"ff60bb46","id":293,"originaltext":"//私有成员只是被隐藏了，但是还是会继承下去","page":52,"textblocks":[{"first":[136.0234375,518.25,5.774993896484375,12.5],"last":[347.0693359375,518.25,10.5,12.5],"length":22,"rects":[[136.0234375,518.25,221.5458984375,12.5]],"start":371,"text":"//私有成员只是被隐藏了，但是还是会继承下去"}],"type":5}],"originaltext":"4.6.3 继承中的对象模型","page":52,"textblocks":[{"first":[43,317.70001220703125,6.037498474121094,13.5],"last":[143.206298828125,317.70001220703125,10.5,13.5],"length":14,"rects":[[43,317.70001220703125,110.706298828125,13.5]],"start":246,"text":"4.6.3 继承中的对象模型"}],"type":5},{"date":"2022-02-22 13:01:03","docid":0,"fillcolor":"ffffed99","id":294,"markups":[{"date":"2022-02-22 13:05:36","docid":0,"fillcolor":"ff60bb46","id":296,"originaltext":"总结：继承中 先调⽤⽗类构造函数，再调⽤⼦类构造函数，析构顺序与构造相反","page":55,"textblocks":[{"first":[58,341.75,10.5,12.5],"last":[417.876220703125,341.75,10.5,12.5],"length":36,"rects":[[58,341.75,370.376220703125,12.5]],"start":176,"text":"总结：继承中 先调⽤⽗类构造函数，再调⽤⼦类构造函数，析构顺序与构造相反"}],"type":5}],"originaltext":"4.6.4 继承中构造和析构顺序","page":54,"textblocks":[{"first":[43,344.25,6.037498474121094,12.5],"last":[164.206298828125,344.25,10.5,12.5],"length":16,"rects":[[43,344.25,131.706298828125,12.5]],"start":64,"text":"4.6.4 继承中构造和析构顺序"}],"type":5},{"date":"2022-02-22 13:05:40","docid":0,"fillcolor":"ffffed99","id":297,"markups":[{"date":"2022-02-22 13:06:04","docid":0,"fillcolor":"ff60bb46","id":299,"markups":[{"date":"2022-02-22 13:07:31","docid":0,"fillcolor":"ff60bb46","id":303,"originaltext":"1. ⼦类对象可以直接访问到⼦类中同名成员\n2. ⼦类对象加作⽤域可以访问到⽗类同名成员\n3. 当⼦类与⽗类拥有同名的成员函数，⼦类会隐藏⽗类中同名成员函数，加作⽤域可以访问到⽗类中同名函数","page":56,"textblocks":[{"first":[62.5,639.5,5.6595001220703125,12.5],"last":[83.5,690,10.5,12.5],"length":96,"rects":[[62.5,639.5,199.5,12.5],[62.5,656,210,13.5],[62.5,672.5,483,12.5],[73,690,21,12.5]],"start":512,"text":"1. ⼦类对象可以直接访问到⼦类中同名成员\n2. ⼦类对象加作⽤域可以访问到⽗类同名成员\n3. 当⼦类与⽗类拥有同名的成员函数，⼦类会隐藏⽗类中同名成员函数，加作⽤域可以访问到⽗类中同名\n函数"}],"type":5}],"originaltext":"问题：当⼦类与⽗类出现同名的成员，如何通过⼦类对象，访问到⼦类或⽗类中同名的数据呢？","page":55,"textblocks":[{"first":[43,402.5,10.5,12.5],"last":[473.5,402.5,10.5,12.5],"length":42,"rects":[[43,402.5,441,12.5]],"start":230,"text":"问题：当⼦类与⽗类出现同名的成员，如何通过⼦类对象，访问到⼦类或⽗类中同名的数据呢？"}],"type":5}],"originaltext":"4.6.5 继承同名成员处理⽅式","page":55,"textblocks":[{"first":[43,372.5,6.037498474121094,12.5],"last":[164.206298828125,372.5,10.5,12.5],"length":16,"rects":[[43,372.5,131.706298828125,12.5]],"start":213,"text":"4.6.5 继承同名成员处理⽅式"}],"type":5},{"date":"2022-02-22 13:06:14","docid":0,"fillcolor":"ffffed99","id":301,"markups":[{"date":"2022-02-22 13:08:01","docid":0,"fillcolor":"ff60bb46","id":305,"originaltext":"总结：同名静态成员处理⽅式和非静态处理⽅式⼀样，只不过有两种访问的⽅式（通过对象 和 通过类名）","page":58,"textblocks":[{"first":[58,341.75,10.5,12.5],"last":[68.5,359.25,10.5,12.5],"length":49,"rects":[[58,341.75,467.75244140625,12.5],[58,359.25,21,12.5]],"start":278,"text":"总结：同名静态成员处理⽅式和非静态处理⽅式⼀样，只不过有两种访问的⽅式（通过对象 和 通过类\n名）"}],"type":5}],"originaltext":"4.6.6 继承同名静态成员处理⽅式","page":56,"textblocks":[{"first":[43,719.75,6.037498474121094,12.5],"last":[185.206298828125,719.75,10.5,12.5],"length":18,"rects":[[43,719.75,152.706298828125,12.5]],"start":609,"text":"4.6.6 继承同名静态成员处理⽅式"}],"type":5},{"date":"2022-02-22 13:08:34","docid":0,"fillcolor":"ffffed99","id":308,"markups":[{"date":"2022-02-22 13:08:58","docid":0,"fillcolor":"ff60bb46","id":311,"originaltext":"C++允许⼀个类继承多个类\n1.语法： class ⼦类 ：继承⽅式 ⽗类1 ， 继承⽅式 ⽗类2...\n2.多继承可能会引发⽗类中有同名成员出现，需要加作⽤域区分\n3.C++实际开发中不建议⽤多继承","page":58,"textblocks":[{"first":[43,419,6.499500274658203,13.5],"last":[179.89990234375,500.70001220703125,10.5,13.5],"length":94,"rects":[[43,419,125.859375,13.5],[43,446.13848876953125,297.6483459472656,14.201904296875],[43,473,283.5,13.5],[43,500.70001220703125,147.39990234375,13.5]],"start":340,"text":"C++允许⼀个类继承多个类\n语法： class ⼦类 ：继承⽅式 ⽗类1 ， 继承⽅式 ⽗类2...\n多继承可能会引发⽗类中有同名成员出现，需要加作⽤域区分\nC++实际开发中不建议⽤多继承"}],"type":5}],"originaltext":"4.6.7 多继承语法","page":58,"textblocks":[{"first":[43,389.70001220703125,6.037498474121094,13.5],"last":[111.706298828125,389.70001220703125,10.5,13.5],"length":11,"rects":[[43,389.70001220703125,79.206298828125,13.5]],"start":328,"text":"4.6.7 多继承语法"}],"type":5},{"date":"2022-02-22 13:21:12","docid":0,"fillcolor":"ffffed99","id":314,"markups":[{"date":"2022-02-22 13:21:20","docid":0,"fillcolor":"ff60bb46","id":315,"originaltext":"菱形继承概念： 两个派⽣类继承同⼀个基类 ⼜有某个类同时继承者两个派⽣类","page":59,"textblocks":[{"first":[43,659.7000122070312,10.5,13.5],"last":[192.876220703125,713,10.5,13.5],"length":38,"rects":[[43,659.7000122070312,73.5,13.5],[43,687,128.876220703125,12.5],[43,713,160.376220703125,13.5]],"start":519,"text":"菱形继承概念：\n 两个派⽣类继承同⼀个基类\n ⼜有某个类同时继承者两个派⽣类"}],"type":5},{"date":"2022-02-22 13:21:45","docid":0,"fillcolor":"ff60bb46","id":316,"originaltext":"总结：菱形继承带来的主要问题是⼦类继承两份相同的数据，导致资源浪费以及毫⽆意义利⽤虚继承可以解决菱形继承问题","page":61,"textblocks":[{"first":[43,200.25,10.5,12.5],"last":[220,242.75,10.5,12.5],"length":56,"rects":[[43,200.25,31.5,12.5],[73,227.25,378,12.5],[73,242.75,157.5,12.5]],"start":95,"text":"总结：\n菱形继承带来的主要问题是⼦类继承两份相同的数据，导致资源浪费以及毫⽆意义\n利⽤虚继承可以解决菱形继承问题"}],"type":5},{"date":"2022-02-22 13:53:24","docid":0,"id":342,"linecolor":"ffd01a11","linewidth":12,"originaltext":"由虚基类构成的派生类可以实例化","page":60,"rect":[334.05046137209314,509.71895574399105,464.9330183811027,555.5704862219225],"type":11}],"originaltext":"4.6.8 菱形继承","page":59,"textblocks":[{"first":[43,629.7000122070312,6.037498474121094,13.5],"last":[101.206298828125,629.7000122070312,10.5,13.5],"length":10,"rects":[[43,629.7000122070312,68.706298828125,13.5]],"start":508,"text":"4.6.8 菱形继承"}],"type":5},{"date":"2022-02-22 13:22:17","docid":0,"fillcolor":"ffffed99","id":317,"originaltext":"4.7 多态","page":61,"textblocks":[{"first":[43,272.75,6.617572784423828,12.5],"last":[74.53140258789062,272.75,12.277496337890625,12.5],"length":6,"rects":[[43,272.75,43.80889892578125,12.5]],"start":152,"text":"4.7 多态"}],"type":5},{"date":"2022-02-22 13:22:19","docid":0,"fillcolor":"ffffed99","id":318,"markups":[{"date":"2022-02-22 13:27:03","docid":0,"fillcolor":"ffffaaff","id":319,"originaltext":"多态分为两类静态多态: 函数重载 和 运算符重载属于静态多态，复⽤函数名\n动态多态: 派⽣类和虚函数实现运⾏时多态","page":61,"textblocks":[{"first":[43,359.75,10.5,12.5],"last":[256.652587890625,404.25,10.5,12.5],"length":58,"rects":[[43,359.75,63,12.5],[73,386.75,283.905029296875,12.5],[73,404.25,194.152587890625,12.5]],"start":190,"text":"多态分为两类\n静态多态: 函数重载 和 运算符重载属于静态多态，复⽤函数名\n动态多态: 派⽣类和虚函数实现运⾏时多态"}],"type":5},{"date":"2022-02-22 13:27:07","docid":0,"fillcolor":"ffffaaff","id":320,"originaltext":"静态多态和动态多态区别：静态多态的函数地址早绑定 - 编译阶段确定函数地址\n动态多态的函数地址晚绑定 - 运⾏阶段确定函数地址","page":61,"textblocks":[{"first":[43,431.25,10.5,12.5],"last":[303.4375,473.75,10.5,12.5],"length":64,"rects":[[43,431.25,126,12.5],[73,458.25,240.9375,12.5],[73,473.75,240.9375,12.5]],"start":249,"text":"静态多态和动态多态区别：\n静态多态的函数地址早绑定 - 编译阶段确定函数地址\n动态多态的函数地址晚绑定 - 运⾏阶段确定函数地址"}],"type":5},{"date":"2022-02-22 13:34:39","docid":0,"fillcolor":"ffffaaff","id":321,"originaltext":"//函数前⾯加上virtual关键字，变成虚函数，那么编译器在编译的时候就不能确定函数调⽤了。","page":61,"textblocks":[{"first":[84.0859375,602.25,5.775001525878906,12.5],"last":[71.5,615.5,10.5,12.5],"length":48,"rects":[[84.0859375,602.25,429.95654296875,12.5],[61,615.5,21,12.5]],"start":370,"text":"//函数前⾯加上virtual关键字，变成虚函数，那么编译器在编译的时候就不能确定函数调⽤\n了。"}],"type":5},{"date":"2022-02-22 13:39:35","docid":0,"fillcolor":"ffffaaff","group":[{"date":"2022-02-22 13:39:35","docid":0,"fillcolor":"ffffaaff","id":329,"originaltext":"","page":63,"textblocks":[{"first":[37.78125,15.8525390625,6.4980010986328125,10.0546875],"last":[178,42.5,10.5,12.5],"length":38,"rects":[[37.78125,15.8525390625,519.4188232421875,10.0546875],[283.71875,816.8525390625,27.50799560546875,10.0546875],[73,42.5,115.5,12.5]],"start":0,"text":"C++核⼼编程.md1/5/2022\n64 / 80\n⼦类重写⽗类中的虚函数"}],"type":5}],"id":328,"originaltext":"总结：多态满⾜条件\n1.有继承关系\n2.⼦类重写⽗类中的虚函数","page":62,"textblocks":[{"first":[43,740.75,10.5,12.5],"last":[0,0,0,0],"length":17,"rects":[[43,740.75,31.5,12.5],[43,767.75,63,12.5],[73,794.75,52.5,12.5],[73,794.75,52.5,12.5]],"start":482,"text":"总结：\n多态满⾜条件\n有继承关系\n"}],"type":5},{"date":"2022-02-22 13:41:00","docid":0,"fillcolor":"ffffaaff","id":331,"originaltext":"多态使⽤条件\n⽗类指针或引⽤指向⼦类对象重写：函数返回值类型 函数名 参数列表 完全⼀致称为重写","page":63,"textblocks":[{"first":[43,69.5,10.5,12.5],"last":[303.62353515625,123.5,10.5,12.5],"length":49,"rects":[[43,69.5,63,12.5],[73,96.5,136.5,12.5],[43,123.5,271.12353515625,12.5]],"start":39,"text":"多态使⽤条件\n⽗类指针或引⽤指向⼦类对象\n重写：函数返回值类型 函数名 参数列表 完全⼀致称为重写"}],"type":5}],"originaltext":"4.7.1 多态的基本概念","page":61,"textblocks":[{"first":[43,302.70001220703125,6.037498474121094,13.5],"last":[132.706298828125,302.70001220703125,10.5,13.5],"length":13,"rects":[[43,302.70001220703125,100.206298828125,13.5]],"start":159,"text":"4.7.1 多态的基本概念"}],"type":5},{"date":"2022-02-22 13:43:19","docid":0,"fillcolor":"ffffed99","id":332,"markups":[{"date":"2022-02-22 13:39:45","docid":0,"fillcolor":"ffff0000","id":330,"originaltext":"多态的优点：代码组织结构清晰可读性强利于前期和后期的扩展以及维护","page":63,"textblocks":[{"first":[43,239.25,10.5,12.5],"last":[209.5,299.25,10.5,12.5],"length":35,"rects":[[43,239.25,63,12.5],[73,266.25,84,12.5],[73,281.75,42,12.5],[73,299.25,147,12.5]],"start":145,"text":"多态的优点：\n代码组织结构清晰\n可读性强\n利于前期和后期的扩展以及维护"}],"type":5}],"originaltext":"4.7.2 多态案例⼀-计算器类","page":63,"textblocks":[{"first":[43,155.25,6.037498474121094,12.5],"last":[157.951416015625,155.25,10.5,12.5],"length":16,"rects":[[43,155.25,125.451416015625,12.5]],"start":89,"text":"4.7.2 多态案例⼀-计算器类"}],"type":5},{"date":"2022-02-22 13:44:55","docid":0,"fillcolor":"ffffed99","id":334,"markups":[{"date":"2022-02-22 13:45:16","docid":0,"fillcolor":"ffff0000","id":337,"originaltext":"在多态中，通常⽗类中虚函数的实现是毫⽆意义的，主要都是调⽤⼦类重写的内容因此可以将虚函数改为纯虚函数","page":65,"textblocks":[{"first":[43,630.5,10.5,12.5],"last":[179.5,657.5,10.5,12.5],"length":51,"rects":[[43,630.5,378,12.5],[43,657.5,147,12.5]],"start":730,"text":"在多态中，通常⽗类中虚函数的实现是毫⽆意义的，主要都是调⽤⼦类重写的内容\n因此可以将虚函数改为纯虚函数"}],"type":5},{"date":"2022-02-22 15:10:50","docid":0,"fillcolor":"ffffaaff","id":347,"originaltext":"纯虚函数语法：virtual 返回值类型 函数名 （参数列表）= 0 ;","page":65,"textblocks":[{"first":[43,684.5,10.5,12.5],"last":[344.32952880859375,684.5,5.774993896484375,12.5],"length":36,"rects":[[43,684.5,307.1045227050781,12.5]],"start":782,"text":"纯虚函数语法：virtual 返回值类型 函数名 （参数列表）= 0 ;"}],"type":5},{"date":"2022-02-22 13:45:37","docid":0,"fillcolor":"ffff0000","id":340,"markups":[{"date":"2022-02-22 13:45:56","docid":0,"fillcolor":"ffff0000","id":341,"originaltext":"抽象类特点：⽆法实例化对象\n⼦类必须重写抽象类中的纯虚函数，否则也属于抽象类","page":65,"textblocks":[{"first":[43,738.5,10.5,12.5],"last":[314.5,782,10.5,13.5],"length":39,"rects":[[43,738.5,63,12.5],[73,765.5,73.5,12.5],[73,782,252,13.5]],"start":843,"text":"抽象类特点：\n⽆法实例化对象\n⼦类必须重写抽象类中的纯虚函数，否则也属于抽象类"}],"type":5}],"originaltext":"当类中有了纯虚函数，这个类也称为==抽象类==","page":65,"textblocks":[{"first":[43,711.5,10.5,12.5],"last":[264.0476989746094,711.5,7.1820068359375,12.5],"length":23,"rects":[[43,711.5,228.22970581054688,12.5]],"start":819,"text":"当类中有了纯虚函数，这个类也称为==抽象类=="}],"type":5}],"originaltext":"4.7.3 纯虚函数和抽象类","page":65,"textblocks":[{"first":[43,600.5,6.037498474121094,12.5],"last":[143.206298828125,600.5,10.5,12.5],"length":14,"rects":[[43,600.5,110.706298828125,12.5]],"start":715,"text":"4.7.3 纯虚函数和抽象类"}],"type":5},{"date":"2022-02-22 13:54:26","docid":0,"fillcolor":"ffffed99","id":343,"originaltext":"4.7.4 多态案例⼆-制作饮品","page":66,"textblocks":[{"first":[43,632.75,6.037498474121094,12.5],"last":[157.951416015625,632.75,10.5,12.5],"length":16,"rects":[[43,632.75,125.451416015625,12.5]],"start":467,"text":"4.7.4 多态案例⼆-制作饮品"}],"type":5},{"date":"2022-02-22 14:56:04","docid":0,"fillcolor":"ffffed99","id":344,"markups":[{"date":"2022-02-22 14:59:30","docid":0,"fillcolor":"ffff0000","id":345,"markups":[{"date":"2022-02-22 14:59:34","docid":0,"fillcolor":"ffff0000","id":346,"originaltext":"解决⽅式：将⽗类中的析构函数改为虚析构或者纯虚析构","page":69,"textblocks":[{"first":[43,101.25,10.5,12.5],"last":[295,101.25,10.5,12.5],"length":25,"rects":[[43,101.25,262.5,12.5]],"start":85,"text":"解决⽅式：将⽗类中的析构函数改为虚析构或者纯虚析构"}],"type":5},{"date":"2022-02-22 15:19:16","docid":0,"fillcolor":"ffff0000","id":350,"originaltext":"虚析构和纯虚析构共性：\n可以解决⽗类指针释放⼦类对象\n都需要有具体的函数实现","page":69,"textblocks":[{"first":[43,128.25,10.5,12.5],"last":[178,170.75,10.5,12.5],"length":38,"rects":[[43,128.25,115.5,12.5],[73,155.25,147,12.5],[73,170.75,115.5,12.5]],"start":111,"text":"虚析构和纯虚析构共性：\n可以解决⽗类指针释放⼦类对象\n都需要有具体的函数实现"}],"type":5}],"originaltext":"多态使⽤时，如果⼦类中有属性开辟到堆区，那么⽗类指针在释放时⽆法调⽤到⼦类的析构代码","page":69,"textblocks":[{"first":[43,74.25,10.5,12.5],"last":[473.5,74.25,10.5,12.5],"length":42,"rects":[[43,74.25,441,12.5]],"start":42,"text":"多态使⽤时，如果⼦类中有属性开辟到堆区，那么⽗类指针在释放时⽆法调⽤到⼦类的析构代码"}],"type":5},{"date":"2022-02-22 15:17:07","docid":0,"fillcolor":"ffff0000","id":349,"originaltext":"总结：\n 1. 虚析构或纯虚析构就是⽤来解决通过⽗类指针释放⼦类对象 \n2. 如果⼦类中没有堆区数据，可以不写为虚析构或纯虚析构\n 3. 拥有纯虚析构函数的类也属于抽象类","page":70,"textblocks":[{"first":[43,683.75,10.5,12.5],"last":[214.18896484375,764.75,10.5,12.5],"length":85,"rects":[[43,683.75,31.5,12.5],[43,710.75,286.68896484375,12.5],[43,737.75,276.18896484375,12.5],[43,764.75,181.68896484375,12.5]],"start":633,"text":"总结：\n 1. 虚析构或纯虚析构就是⽤来解决通过⽗类指针释放⼦类对象\n 2. 如果⼦类中没有堆区数据，可以不写为虚析构或纯虚析构\n 3. 拥有纯虚析构函数的类也属于抽象类"}],"type":5}],"originaltext":"4.7.5 虚析构和纯虚析构","page":69,"textblocks":[{"first":[43,42.5,6.037498474121094,12.5],"last":[143.206298828125,42.5,10.5,12.5],"length":14,"rects":[[43,42.5,110.706298828125,12.5]],"start":27,"text":"4.7.5 虚析构和纯虚析构"}],"type":5},{"date":"2022-02-22 15:20:09","docid":0,"fillcolor":"ffffed99","id":351,"originaltext":"4.7.6 多态案例三-电脑组装","page":70,"textblocks":[{"first":[43,795.5,6.037498474121094,12.5],"last":[157.951416015625,795.5,10.5,12.5],"length":16,"rects":[[43,795.5,125.451416015625,12.5]],"start":719,"text":"4.7.6 多态案例三-电脑组装"}],"type":5},{"date":"2022-02-22 16:10:51","docid":0,"fillcolor":"ffffed99","id":352,"markups":[{"date":"2022-02-22 16:25:51","id":364,"linecolor":"ff59c6ff","markups":[{"date":"2022-02-22 16:11:20","docid":0,"fillcolor":"ffff0000","id":353,"originaltext":"文件类型分为两种：1. 文本文件 - 文件以文本的ASCII码形式存储在计算机中2. ⼆进制文件 - 文件以文本的⼆进制形式存储在计算机中，⽤户⼀般不能直接读懂它们","page":74,"textblocks":[{"first":[43,483.5,10.5,12.5],"last":[450.44921875,527,10.5,13.5],"length":84,"rects":[[43,483.5,94.5,12.5],[62.5,510.5,256.91015625,12.5],[62.5,527,398.44921875,13.5]],"start":681,"text":"文件类型分为两种：\n1. 文本文件 - 文件以文本的ASCII码形式存储在计算机中\n2. ⼆进制文件 - 文件以文本的⼆进制形式存储在计算机中，⽤户⼀般不能直接读懂它们"}],"type":5},{"date":"2022-02-22 16:11:25","docid":0,"fillcolor":"ff60bb46","id":354,"originaltext":"操作文件的三⼤类:1. ofstream：写操作2. ifstream： 读操作3. fstream ： 读写操作","page":74,"textblocks":[{"first":[43,554,10.5,13.5],"last":[155.579833984375,614.7000122070312,10.5,13.5],"length":60,"rects":[[43,554,86.27850341796875,13.5],[62.5,581.7000122070312,93.479736328125,13.5],[62.5,599,92.74658203125,12.5],[62.5,614.7000122070312,103.579833984375,13.5]],"start":766,"text":"操作文件的三⼤类:\n1. ofstream：写操作\n2. ifstream： 读操作\n3. fstream ： 读写操作"}],"type":5},{"date":"2022-02-22 16:22:54","docid":0,"id":363,"imgfile":"6c5572037227d56c5da66d8b5129b0df.png","linecolor":"ffa0ec6f","linewidth":2,"page":75,"rect":[35.06462480533288,257.5901283776377,274.22334783657766,458.0878548286437],"type":2}],"page":-1,"title":"概括","type":7},{"date":"2022-02-22 16:11:47","docid":0,"fillcolor":"fffeeb73","id":355,"markups":[{"date":"2022-02-22 16:11:48","docid":0,"fillcolor":"fffeeb73","id":356,"originaltext":"5.1.1写文件","page":74,"textblocks":[{"first":[43,675.25,6.037498474121094,10.5],"last":[87.8095703125,675.25,10.5,10.5],"length":8,"rects":[[43,675.25,55.3095703125,10.5]],"start":835,"text":"5.1.1写文件"}],"type":5},{"date":"2022-02-22 16:14:08","docid":0,"fillcolor":"fffeeb73","id":357,"originaltext":"5.1.2读文件","page":76,"textblocks":[{"first":[43,266.70001220703125,6.037498474121094,13.5],"last":[87.8095703125,266.70001220703125,10.5,13.5],"length":8,"rects":[[43,266.70001220703125,55.3095703125,13.5]],"start":168,"text":"5.1.2读文件"}],"type":5}],"originaltext":"5.1文本文件","page":74,"textblocks":[{"first":[43,643,6.617572784423828,14.5],"last":[95.73087310791016,643,12.277503967285156,14.5],"length":7,"rects":[[43,643,65.00837707519531,14.5]],"start":827,"text":"5.1文本文件"}],"type":5},{"date":"2022-02-22 16:16:53","docid":0,"fillcolor":"fffeeb73","id":358,"markups":[{"date":"2022-02-22 16:16:56","docid":0,"fillcolor":"fffeeb73","id":359,"markups":[{"date":"2022-02-22 16:19:24","docid":0,"fillcolor":"ff60bb46","id":360,"originaltext":"⼆进制⽅式写文件主要利⽤流对象调⽤成员函数write","page":78,"textblocks":[{"first":[43,131.25,10.5,12.5],"last":[280.84600830078125,131.25,5.491485595703125,12.5],"length":26,"rects":[[43,131.25,243.33749389648438,12.5]],"start":79,"text":"⼆进制⽅式写文件主要利⽤流对象调⽤成员函数write"}],"type":5}],"originaltext":"5.2.1 写文件","page":78,"textblocks":[{"first":[43,102.25,6.037498474121094,10.5],"last":[90.706298828125,102.25,10.5,10.5],"length":9,"rects":[[43,102.25,58.206298828125,10.5]],"start":69,"text":"5.2.1 写文件"}],"type":5},{"date":"2022-02-22 16:21:32","docid":0,"fillcolor":"fffeeb73","id":361,"markups":[{"date":"2022-02-22 16:21:35","docid":0,"fillcolor":"ff60bb46","id":362,"originaltext":"⼆进制⽅式读文件主要利⽤流对象调⽤成员函数read","page":79,"textblocks":[{"first":[43,143.25,10.5,12.5],"last":[277.989990234375,143.25,6.18450927734375,12.5],"length":25,"rects":[[43,143.25,241.17449951171875,12.5]],"start":71,"text":"⼆进制⽅式读文件主要利⽤流对象调⽤成员函数read"}],"type":5}],"originaltext":"5.2.2 读文件","page":79,"textblocks":[{"first":[43,114.25,6.037498474121094,10.5],"last":[90.706298828125,114.25,10.5,10.5],"length":9,"rects":[[43,114.25,58.206298828125,10.5]],"start":61,"text":"5.2.2 读文件"}],"type":5}],"originaltext":"5.2 ⼆进制文件","page":77,"textblocks":[{"first":[43,772.75,6.617572784423828,13.5],"last":[111.37149047851562,772.75,12.277496337890625,13.5],"length":9,"rects":[[43,772.75,80.64898681640625,13.5]],"start":581,"text":"5.2 ⼆进制文件"}],"type":5}],"originaltext":"5 文件操作","page":74,"textblocks":[{"first":[43,370.5,8.489250183105469,17.5],"last":[103.0545654296875,370.5,15.75,17.5],"length":6,"rects":[[43,370.5,75.8045654296875,17.5]],"start":596,"text":"5 文件操作"}],"type":5}],"originaltext":"4.6 继承","page":45,"textblocks":[{"first":[43,401.75,6.617572784423828,12.5],"last":[74.53140258789062,401.75,12.277496337890625,12.5],"length":6,"rects":[[43,401.75,43.80889892578125,12.5]],"start":306,"text":"4.6 继承"}],"type":5}],"originaltext":"4 类和对象","page":11,"textblocks":[{"first":[43,640,9.056251525878906,17.5],"last":[103.6229248046875,640,15.75,17.5],"length":6,"rects":[[43,640,76.3729248046875,17.5]],"start":518,"text":"4 类和对象"}],"type":5}],"maxid":373,"scalingratio":100,"title":"C++核心编程","unimportant":[{"date":"2022-02-18 17:21:29","docid":0,"hwdata":"2f2b2fa62c5206442638aa76db35603a.png","id":71,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[203.4796600341797,581.4432373046875,206.4796600341797,591.813720703125],"type":10},{"date":"2022-02-18 17:21:30","docid":0,"hwdata":"428ab8f7fd533d31358fc20a257ff9e0.png","id":72,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[199.26670837402344,585.91455078125,202.92721557617188,589.2293090820312],"type":10},{"date":"2022-02-18 17:21:30","docid":0,"hwdata":"4f40938201f4bc56600134c3fdfa0cc5.png","id":73,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[199.03463745117188,584.459228515625,210.42453002929688,598.3475341796875],"type":10},{"date":"2022-02-18 17:21:30","docid":0,"hwdata":"a1314045603e1e8e4f16b1a7daca4442.png","id":74,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[201.8373260498047,593.095703125,208.2109375,599.4766235351562],"type":10},{"date":"2022-02-18 17:21:35","docid":0,"hwdata":"87d9e8b8971bfacb2ffde8e6a6ee9fa3.png","id":75,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[214.1905517578125,580.0531616210938,225.41978454589844,589.9820556640625],"type":10},{"date":"2022-02-18 17:21:36","docid":0,"hwdata":"3756a2aae4a2091c9cf93572dbb1feb9.png","id":76,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[213.79782104492188,580.2739868164062,221.8851776123047,597.3539428710938],"type":10},{"date":"2022-02-18 17:21:36","docid":0,"hwdata":"cf4c4c1d6c3688fa6cda26d9564e1d40.png","id":77,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[216.33273315429688,591.3995361328125,226.54441833496094,599.5619506835938],"type":10},{"date":"2022-02-18 17:21:38","docid":0,"hwdata":"81cfbe5660be1efd5aaaf347b5547954.png","id":78,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[227.27569580078125,586.3059692382812,238.20144653320312,597.1882934570312],"type":10},{"date":"2022-02-18 17:21:38","docid":0,"hwdata":"2a0289c080f3b4a55f7455f20527c332.png","id":79,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[232.1848602294922,581.3679809570312,241.96810913085938,598.1317749023438],"type":10},{"date":"2022-02-18 17:21:39","docid":0,"hwdata":"edf7ef70cbae3418211fb2515aeb0e67.png","id":80,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[232.88107299804688,590.3456420898438,238.11219787597656,596.4456176757812],"type":10},{"date":"2022-02-18 17:21:40","docid":0,"hwdata":"c311f646b3bcc8758dcb08b8ce465f59.png","id":81,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[247.44789123535156,578.597900390625,250.50144958496094,587.1266479492188],"type":10},{"date":"2022-02-18 17:21:40","docid":0,"hwdata":"919c58b8ce8047da59c9d777d8e21d60.png","id":82,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[247.1087188720703,578.4121704101562,254.44630432128906,588.7224731445312],"type":10},{"date":"2022-02-18 17:21:40","docid":0,"hwdata":"9a86c297bc683500d49f326505fb7074.png","id":83,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[246.48391723632812,590.139892578125,249.5196075439453,594.3429565429688],"type":10},{"date":"2022-02-18 17:21:40","docid":0,"hwdata":"1006f396ced6c9bd06e0643aad36a30e.png","id":84,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[248.59039306640625,587.6558837890625,258.2129821777344,595.2512817382812],"type":10},{"date":"2022-02-18 17:21:41","docid":0,"hwdata":"842ca76e0e8b701c1e68d6b167009c83.png","id":85,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[249.6436309814453,589.1312255859375,254.00033569335938,598.0966186523438],"type":10},{"date":"2022-02-18 17:21:41","docid":0,"hwdata":"d9d8cc880d652f2cc538860c84d2ee6a.png","id":86,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[251.39306640625,593.0756225585938,260.248046875,597.439208984375],"type":10},{"date":"2022-02-18 17:21:47","docid":0,"hwdata":"2dda630d4905d5397d13b770ff685c60.png","id":90,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[263.9248352050781,581.2926635742188,276.68927001953125,587.1079711914062],"type":10},{"date":"2022-02-18 17:21:47","docid":0,"hwdata":"17848b995976fa8d3d21671123602e35.png","id":91,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[264.0140686035156,579.0043334960938,273.20855712890625,596.8721923828125],"type":10},{"date":"2022-02-18 17:21:48","docid":0,"hwdata":"1670e5333292902b88a4422abacbf721.png","id":92,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[270.6726989746094,586.2958984375,277.849609375,598.568359375],"type":10},{"date":"2022-02-18 17:21:48","docid":0,"hwdata":"f1618232d7a52252cab70cd2c7ff9d62.png","id":93,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[280.5624084472656,584.2183227539062,290.6669921875,587.5796508789062],"type":10},{"date":"2022-02-18 17:21:49","docid":0,"hwdata":"b0112a0849308c08a4182e37a85cff08.png","id":94,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[280.3303527832031,580.8761596679688,289.91754150390625,597.1531982421875],"type":10},{"date":"2022-02-18 17:21:49","docid":0,"hwdata":"80dc43107f66e1fb00dec6a7b52286dc.png","id":95,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[288.3099670410156,588.0172119140625,291.3099670410156,594.2877197265625],"type":10},{"date":"2022-02-18 17:21:49","docid":0,"hwdata":"b875c12ae7622ad95421f417c21f4b61.png","id":96,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[287.4173889160156,590.5765380859375,296.89715576171875,596.5660400390625],"type":10},{"date":"2022-02-18 17:21:52","docid":0,"hwdata":"a8a29943c6c0695d3c74e2ade3e3fdea.png","id":97,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[300.85955810546875,579.0344848632812,304.787841796875,595.54736328125],"type":10},{"date":"2022-02-18 17:21:53","docid":0,"hwdata":"4558f18c537fd4215d91081bfd7bf530.png","id":98,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[297.8962097167969,583.8670654296875,305.5908508300781,591.9542236328125],"type":10},{"date":"2022-02-18 17:21:53","docid":0,"hwdata":"932d0459204a2e8cf11d1e79eac565c5.png","id":99,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[306.1614685058594,579.3004150390625,312.28515625,585.7215576171875],"type":10},{"date":"2022-02-18 17:21:53","docid":0,"hwdata":"1565046615770be6a62e49659de6255d.png","id":100,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[304.911865234375,588.0823974609375,307.94757080078125,595.105712890625],"type":10},{"date":"2022-02-18 17:21:53","docid":0,"hwdata":"bbbe2b3984628bb2e9cd105b22fda1d0.png","id":101,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[305.965087890625,586.3963012695312,313.37408447265625,595.8936157226562],"type":10},{"date":"2022-02-18 17:21:54","docid":0,"hwdata":"1215078c730d74fafadb2a73a13ad64f.png","id":102,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[307.3575134277344,588.9706420898438,314.1952819824219,595.7079467773438],"type":10},{"date":"2022-02-18 17:21:55","docid":0,"hwdata":"c4dbfb432d25ce779b46fff1cf6a4468.png","id":103,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[317.7649230957031,577.3634033203125,325.22747802734375,593.946533203125],"type":10},{"date":"2022-02-18 17:21:55","docid":0,"hwdata":"c2d09e2f4afcc9b712fd3aad89819bfc.png","id":104,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[319.12164306640625,587.2042236328125,323.46051025390625,596.4305419921875],"type":10},{"date":"2022-02-18 17:21:55","docid":0,"hwdata":"c7c9c88f6e7c92da5d8c015877d57569.png","id":105,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[323.37030029296875,585.15673828125,329.7796325683594,589.3310546875],"type":10},{"date":"2022-02-18 17:21:55","docid":0,"hwdata":"31995a593234e72cac85117b814d3b28.png","id":106,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[324.5484924316406,580.986572265625,328.7088623046875,596.3652954101562],"type":10},{"date":"2022-02-18 17:21:56","docid":0,"hwdata":"3aa461c11b08d76aee7e8a9c328cad00.png","id":107,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[331.79620361328125,583.8971557617188,340.0263977050781,595.8082885742188],"type":10},{"date":"2022-02-18 17:21:57","docid":0,"hwdata":"ab5896b513c5becf42c22c44b797add1.png","id":108,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[332.2246398925781,579.9678344726562,348.077392578125,596.1796264648438],"type":10},{"date":"2022-02-18 17:21:57","docid":0,"hwdata":"077d022d50f47be1bcb5c2c536432f61.png","id":109,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[350.64739990234375,573.8255004882812,359.9307861328125,589.841552734375],"type":10},{"date":"2022-02-18 17:21:57","docid":0,"hwdata":"388910fcdc827249ba72de5a616189df.png","id":110,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[352.36114501953125,582.6928100585938,360.8233642578125,588.8128051757812],"type":10},{"date":"2022-02-18 17:21:58","docid":0,"hwdata":"74b32c03bfcbc1dec54156058bbede93.png","id":111,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[352.66461181640625,584.6198120117188,357.0745544433594,598.568359375],"type":10},{"date":"2022-02-18 17:21:58","docid":0,"hwdata":"801f7bfd98f599b41677e4367e0abe5b.png","id":112,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[351.1115417480469,587.7311401367188,363.6260681152344,595.3164672851562],"type":10},{"date":"2022-02-18 17:21:58","docid":0,"hwdata":"96c9d55e90d034b04bfb55d089fb62d7.png","id":113,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[364.4644470214844,582.0253295898438,368.0892639160156,590.8251342773438],"type":10},{"date":"2022-02-18 17:21:59","docid":0,"hwdata":"60430bf9ea5c7dd30f335327174a31c5.png","id":114,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[365.8390197753906,582.8583984375,373.8728332519531,591.813720703125],"type":10},{"date":"2022-02-18 17:21:59","docid":0,"hwdata":"d7726627a20a04ee50ae5476e1dfb222.png","id":115,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[367.12432861328125,586.0349731445312,372.1590881347656,591.5929565429688],"type":10},{"date":"2022-02-18 17:22:00","docid":0,"hwdata":"88ca114a0e8fea45699d3f9fd08c8c69.png","id":116,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[371.97991943359375,578.1713256835938,380.567138671875,597.9209594726562],"type":10},{"date":"2022-02-18 17:22:00","docid":0,"hwdata":"77543e481d7cf5b5e49d7154cdf79913.png","id":117,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[387.02874755859375,593.7430419921875,390.02874755859375,596.9273681640625],"type":10},{"date":"2022-02-18 17:22:03","docid":0,"hwdata":"b780e9317dedca994d0fb2a99ff4271a.png","id":118,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[396.2222595214844,579.11474609375,401.1677551269531,582.4596557617188],"type":10},{"date":"2022-02-18 17:22:03","docid":0,"hwdata":"51299adc2f197538a722dcb52215c8a1.png","id":119,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[395.5082092285156,580.263916015625,404.02398681640625,592.2603759765625],"type":10},{"date":"2022-02-18 17:22:04","docid":0,"hwdata":"b862e47ea6497a78020e5596675307de.png","id":120,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[403.7020263671875,578.7734985351562,410.7897033691406,591.4925537109375],"type":10},{"date":"2022-02-18 17:22:04","docid":0,"hwdata":"e7acb1eaa39d1153ae9aaf1b3da2ac3f.png","id":121,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[403.5413818359375,574.7890014648438,411.5037841796875,596.6714477539062],"type":10},{"date":"2022-02-18 17:22:04","docid":0,"hwdata":"c11acd832f2adb4d5a33484c13971884.png","id":122,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[411.0568542480469,575.2055053710938,414.53851318359375,581.6329956054688],"type":10},{"date":"2022-02-18 17:22:12","docid":0,"hwdata":"fbc0933246a4bced412cda7b2ae366bd.png","id":125,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[421.69635009765625,577.5037231445312,425.1780090332031,596.0390014648438],"type":10},{"date":"2022-02-18 17:22:12","docid":0,"hwdata":"6e674f6ea95bab8a20355452f27b83ab.png","id":126,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[419.125732421875,581.227294921875,428.48052978515625,590.498779296875],"type":10},{"date":"2022-02-18 17:22:13","docid":0,"hwdata":"10c3f6f8c969eb9a72e6197528300edf.png","id":127,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[427.926513671875,574.5379028320312,435.0677490234375,587.1917114257812],"type":10},{"date":"2022-02-18 17:22:13","docid":0,"hwdata":"27b0c8c730e242e09e0ce9d9c2c93f2b.png","id":128,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[424.0705871582031,579.3655395507812,437.81719970703125,599.8177490234375],"type":10},{"date":"2022-02-18 17:22:13","docid":0,"hwdata":"3a263848303217e441856f87aeffc0fc.png","id":129,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[429.60455322265625,586.8778686523438,435.92462158203125,590.5001220703125],"type":10},{"date":"2022-02-18 17:22:29","docid":0,"hwdata":"0ba61d6bda0f62964644d3eddbb87230.png","id":134,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[443.85003662109375,583.06396484375,447.6712341308594,593.78076171875],"type":10},{"date":"2022-02-18 17:22:30","docid":0,"hwdata":"5efdb4a8fbedb04e1015ca735708b437.png","id":135,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[445.5994873046875,582.637451171875,453.5618896484375,593.7706909179688],"type":10},{"date":"2022-02-18 17:22:30","docid":0,"hwdata":"82fdb06feb5a086c7858932e82547588.png","id":136,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[445.4566955566406,586.626953125,450.5096130371094,595.4920043945312],"type":10},{"date":"2022-02-18 17:22:30","docid":0,"hwdata":"524bc1303dcf6e58ce9f590ab98e9258.png","id":137,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[447.7059631347656,588.48876953125,456.2574768066406,595.3062744140625],"type":10},{"date":"2022-02-18 17:22:52","docid":0,"hwdata":"619feba8ab4695a0085be97cfbbdff0b.png","id":138,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[461.1124572753906,578.64306640625,470.18194580078125,589.4149780273438],"type":10},{"date":"2022-02-18 17:22:53","docid":0,"hwdata":"037e108b19dce3b65e28b34c86a92f53.png","id":139,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[464.0758056640625,582.7279052734375,471.5205078125,587.7037353515625],"type":10},{"date":"2022-02-18 17:22:53","docid":0,"hwdata":"9eb5b857f9c8ab0e738a66bc0ab9b3a6.png","id":140,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[460.84466552734375,587.8616333007812,469.5032958984375,591.584228515625],"type":10},{"date":"2022-02-18 17:22:53","docid":0,"hwdata":"b145c34689e521593fafe07910e64d8d.png","id":141,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[461.3802185058594,589.7987060546875,469.5389709472656,598.252197265625],"type":10},{"date":"2022-02-18 17:22:53","docid":0,"hwdata":"0129393cf22703a6e9f18c9351ff3ff9.png","id":142,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[468.2709045410156,593.522216796875,471.324462890625,598.939697265625],"type":10},{"date":"2022-02-18 17:22:55","docid":0,"hwdata":"33e9ee275d944f08b1db1899f0ba5181.png","id":143,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[475.0901794433594,579.8775634765625,482.8029479980469,597.0477905273438],"type":10},{"date":"2022-02-18 17:22:55","docid":0,"hwdata":"76814087da6bfa18bfbb1dce7b7417b1.png","id":144,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[483.7124328613281,581.4583129882812,491.08575439453125,592.5765380859375],"type":10},{"date":"2022-02-18 17:22:55","docid":0,"hwdata":"0af893db372797a54d2bdb128cfaf7d0.png","id":145,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[481.6773681640625,580.0883178710938,488.1048583984375,596.5309448242188],"type":10},{"date":"2022-02-18 17:22:55","docid":0,"hwdata":"f09fd9bc95361d7953c89acd108a3fa8.png","id":146,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[479.92791748046875,589.9993896484375,492.0497131347656,597.2334594726562],"type":10},{"date":"2022-02-18 17:22:56","docid":0,"hwdata":"b4665e2ef7eee15a0926654add454979.png","id":147,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[496.6012268066406,581.4432373046875,505.366943359375,584.4583129882812],"type":10},{"date":"2022-02-18 17:22:57","docid":0,"hwdata":"68ef21ffc1aa310b320cbfed688a87a6.png","id":148,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[494.45904541015625,579.9879150390625,508.5091247558594,596.1796264648438],"type":10},{"date":"2022-02-18 17:22:57","docid":0,"hwdata":"4bab399f23f1e9ba5d0e514299420582.png","id":149,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[500.7606201171875,587.9067993164062,503.9745178222656,596.1495361328125],"type":10},{"date":"2022-02-18 17:22:57","docid":0,"hwdata":"fa12d4bb531773db888eeb0883b893d4.png","id":150,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[504.90216064453125,585.9546508789062,508.1874694824219,592.4560546875],"type":10},{"date":"2022-02-18 17:22:57","docid":0,"hwdata":"db09dda9d04eb6e181e0a74b00af62c4.png","id":151,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[503.22412109375,589.5728759765625,512.1148071289062,596.4656982421875],"type":10},{"date":"2022-02-18 17:23:01","docid":0,"hwdata":"cbbf502556e1477ceb5814a5076fa5c9.png","id":152,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[515.7201538085938,584.83056640625,523.6825561523438,588.0814819335938],"type":10},{"date":"2022-02-18 17:23:01","docid":0,"hwdata":"d530bcd39afa0eefab99fdc36be3199c.png","id":153,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[518.2550659179688,579.2653198242188,523.5579223632812,597.4091186523438],"type":10},{"date":"2022-02-18 17:23:01","docid":0,"hwdata":"e31fd112704748746b7e1b397c6ff639.png","id":154,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[515.613037109375,588.9706420898438,522.6653442382812,595.4017944335938],"type":10},{"date":"2022-02-18 17:23:02","docid":0,"hwdata":"069945dfb21f2014cc547fbc14f351ed.png","id":155,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[523.8961791992188,581.5988159179688,534.5009155273438,598.307373046875],"type":10},{"date":"2022-02-18 17:23:02","docid":0,"hwdata":"a80efef423b33cf989aa557ef3d8aa1f.png","id":156,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[532.42919921875,579.4108276367188,547.0501708984375,598.7188720703125],"type":10},{"date":"2022-02-18 17:23:02","docid":0,"hwdata":"46d26670e49210b139a22a969a22c074.png","id":157,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[536.2493896484375,586.6823120117188,543.9978637695312,594.001708984375],"type":10},{"date":"2022-02-18 17:23:03","docid":0,"hwdata":"26677d24e431f88ce65a33ba4dad8674.png","id":158,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[541.390625,579.9327392578125,553.4234619140625,599.6522827148438],"type":10},{"date":"2022-02-18 17:23:03","docid":0,"hwdata":"7fb80da7fc09d9acfe4a6bb9bb635708.png","id":159,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[543.33642578125,590.7320556640625,549.656494140625,597.7252807617188],"type":10},{"date":"2022-02-18 17:23:05","docid":0,"hwdata":"92ab13df9424bd1c9df28c4dfd442ee1.png","id":160,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[200.90904235839844,614.5137329101562,207.15769958496094,624.532958984375],"type":10},{"date":"2022-02-18 17:23:05","docid":0,"hwdata":"47e71b2a5fbe92ff3ccc283a4af1dc0f.png","id":161,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[204.7649688720703,612.7824096679688,213.4592742919922,624.6834716796875],"type":10},{"date":"2022-02-18 17:23:06","docid":0,"hwdata":"376bc9482d4b2ee5f3930d9a8d02c505.png","id":162,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[206.67507934570312,606.183349609375,220.20713806152344,626.4248046875],"type":10},{"date":"2022-02-18 17:23:06","docid":0,"hwdata":"a05b67e318d94a25a5016a72718109ec.png","id":163,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[212.476806640625,614.1975708007812,222.97412109375,619.5310668945312],"type":10},{"date":"2022-02-18 17:23:10","docid":0,"hwdata":"0af50a98f823a459c97127aa5cfdb71b.png","id":164,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[227.24000549316406,607.6185913085938,240.3436279296875,625.998291015625],"type":10},{"date":"2022-02-18 17:23:10","docid":0,"hwdata":"d9a873a1b0a922821793188fdcea2add.png","id":165,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[230.1140899658203,617.3088989257812,233.3636932373047,621.9485473632812],"type":10},{"date":"2022-02-18 17:23:11","docid":0,"hwdata":"2ff38b26d3491bfdca163fbe4df5ab3c.png","id":166,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[230.59608459472656,616.5862426757812,241.7895965576172,626.359619140625],"type":10},{"date":"2022-02-18 17:23:12","docid":0,"hwdata":"c2d6c37bbb8e4b3bf4647c1fad63bdd8.png","id":167,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[242.69940185546875,605.9425048828125,252.5362091064453,615.6957397460938],"type":10},{"date":"2022-02-18 17:23:12","docid":0,"hwdata":"63547b7eb282e0e1b689b4d23516fee5.png","id":168,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[246.019775390625,611.05615234375,250.50144958496094,621.7076416015625],"type":10},{"date":"2022-02-18 17:23:12","docid":0,"hwdata":"cc6add6930a17f350951bdb0c7bfe67e.png","id":169,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[246.68028259277344,613.6957397460938,253.92861938476562,620.8394775390625],"type":10},{"date":"2022-02-18 17:23:13","docid":0,"hwdata":"b9b698480b15d11957b1ef2f57d9dd98.png","id":170,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[246.2161407470703,614.087158203125,256.16004943847656,625.5064697265625],"type":10},{"date":"2022-02-18 17:23:13","docid":0,"hwdata":"9fc9922a075671c9d6cfbbc9d87913e3.png","id":171,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[249.1259307861328,620.164306640625,261.140625,625.8025512695312],"type":10},{"date":"2022-02-18 17:23:14","docid":0,"hwdata":"1d5ef653fb19bbb109de6b3fa7873dc9.png","id":172,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[248.89385986328125,620.309814453125,256.5352478027344,628.6680297851562],"type":10},{"date":"2022-02-18 17:23:22","docid":0,"hwdata":"93845a68766b50aa96e9efbd5dee632c.png","id":173,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[266.88818359375,607.563232421875,272.0835876464844,612.6846313476562],"type":10},{"date":"2022-02-18 17:23:23","docid":0,"hwdata":"bca900ee7dc61bbd8269f79723e7fe71.png","id":174,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[264.7817077636719,601.8123168945312,278.2780456542969,622.911865234375],"type":10},{"date":"2022-02-18 17:23:23","docid":0,"hwdata":"0d5f9cf7659f5dfbfe5bf99e6aa0cc84.png","id":175,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[275.2248229980469,611.216552734375,280.5451965332031,629.0542602539062],"type":10},{"date":"2022-02-18 17:23:24","docid":0,"hwdata":"157e2030d7a186c337a4543f17c0f789.png","id":176,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[274.4036560058594,615.2913818359375,280.11676025390625,623.58935546875],"type":10},{"date":"2022-02-18 17:23:25","docid":0,"hwdata":"d08667f71384141ee686f5ceb960d866.png","id":177,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[285.7036437988281,607.5833129882812,292.8091735839844,620.6887817382812],"type":10},{"date":"2022-02-18 17:23:25","docid":0,"hwdata":"2e8bd6126b86f81ff31a9b5ff75b718e.png","id":178,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[286.4533996582031,613.1234741210938,293.23760986328125,621.1454467773438],"type":10},{"date":"2022-02-18 17:23:26","docid":0,"hwdata":"4f4acdf931ba7267c87ff9d72c66c6af.png","id":179,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[294.932861328125,606.052734375,298.0221252441406,614.2804565429688],"type":10},{"date":"2022-02-18 17:23:26","docid":0,"hwdata":"ebd4b91195cf9666f8bfa03257615e06.png","id":180,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[296.6466064453125,604.1357421875,304.50189208984375,616.4031372070312],"type":10},{"date":"2022-02-18 17:23:27","docid":0,"hwdata":"809b61ce7f3df031b122c131b3d63010.png","id":181,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[295.55767822265625,607.3775634765625,305.0731506347656,622.9971923828125],"type":10},{"date":"2022-02-18 17:23:28","docid":0,"hwdata":"8e50f7c71b9e4a6a03f2b4909c34444c.png","id":182,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[309.8924255371094,608.0550537109375,313.927490234375,619.800537109375],"type":10},{"date":"2022-02-18 17:23:28","docid":0,"hwdata":"baa0b5e8af3f68332b10082b44d8274d.png","id":183,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[315.8548278808594,604.396728515625,324.8704528808594,629.27001953125],"type":10},{"date":"2022-02-18 17:23:28","docid":0,"hwdata":"32d65c15c79d9bf22e224ac578fdcf19.png","id":184,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[315.2300109863281,610.855224609375,320.8538818359375,620.488037109375],"type":10},{"date":"2022-02-18 17:23:29","docid":0,"hwdata":"91988b445e66c9bfade573de7dac87fd.png","id":185,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[327.8153381347656,613.650390625,340.454833984375,617.327880859375],"type":10},{"date":"2022-02-18 17:23:29","docid":0,"hwdata":"6d97d309cf36763951ee9a429402251e.png","id":186,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[341.8465881347656,607.5281372070312,347.4172058105469,616.01171875],"type":10},{"date":"2022-02-18 17:23:29","docid":0,"hwdata":"d62cf6ea981d7966c011ef8d172513d4.png","id":187,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[344.0601806640625,612.6768798828125,350.0767822265625,615.7608032226562],"type":10},{"date":"2022-02-18 17:23:29","docid":0,"hwdata":"897579cfe4a64b0312fc80197d4d91fb.png","id":188,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[343.3104248046875,614.4734497070312,347.5957336425781,626.4597778320312],"type":10},{"date":"2022-02-18 17:23:30","docid":0,"hwdata":"ed7fca627513ed170a5b271f2df234cb.png","id":189,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[361.26904296875,606.5194702148438,365.0902099609375,624.412353515625],"type":10},{"date":"2022-02-18 17:23:30","docid":0,"hwdata":"5b030bcc8683c15118dfc384ad4b68ed.png","id":190,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[359.68023681640625,613.1586303710938,366.5537109375,620.4679565429688],"type":10},{"date":"2022-02-18 17:23:31","docid":0,"hwdata":"01980afb600e68771492bc466ab96433.png","id":191,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[368.9451599121094,606.3989868164062,374.56903076171875,611.8716430664062],"type":10},{"date":"2022-02-18 17:23:31","docid":0,"hwdata":"c5253e358b6ee00ad6229c588bc423cd.png","id":192,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[366.1424865722656,615.918701171875,369.49951171875,623.0322875976562],"type":10},{"date":"2022-02-18 17:23:31","docid":0,"hwdata":"48b23e47f3cd443b11064cfa79b48704.png","id":193,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[367.5884704589844,614.0870361328125,375.69366455078125,624.8238525390625],"type":10},{"date":"2022-02-18 17:23:31","docid":0,"hwdata":"2fd60a4a628735b8fad72ab20f935505.png","id":194,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[367.8919372558594,616.696533203125,375.5508728027344,624.5177001953125],"type":10},{"date":"2022-02-18 17:23:32","docid":0,"hwdata":"9205e6725e6b5bd291f5af78ebcd2873.png","id":195,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[378.7991943359375,604.3766479492188,389.7249450683594,627.2326049804688],"type":10},{"date":"2022-02-18 17:23:33","docid":0,"hwdata":"3a09843d80f16c948a19ee818248330b.png","id":196,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[389.2066345214844,613.5199584960938,396.93695068359375,617.1873779296875],"type":10},{"date":"2022-02-18 17:23:33","docid":0,"hwdata":"2983227ac8ff2144c20cfa24d178df9e.png","id":197,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[390.5990295410156,608.6773071289062,397.5085144042969,627.5086059570312],"type":10},{"date":"2022-02-18 17:23:34","docid":0,"hwdata":"688e5c9cd9c94d6ec96ee54b7fc0abb7.png","id":198,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[402.09539794921875,610.6595458984375,411.0396423339844,619.2083740234375],"type":10},{"date":"2022-02-18 17:23:35","docid":0,"hwdata":"0cfccd0550ed06e72fd2be89798f68e0.png","id":199,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[404.2018737792969,604.2963256835938,418.85858154296875,624.3119506835938],"type":10},{"date":"2022-02-18 17:23:35","docid":0,"hwdata":"64ffb99a8d6d873f19f2028a47ccb93e.png","id":200,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[421.17864990234375,601.8674926757812,431.408203125,618.9574584960938],"type":10},{"date":"2022-02-18 17:23:36","docid":0,"hwdata":"dbbb61adece8de92186155b63b197ee9.png","id":201,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[423.3208312988281,611.5377197265625,432.4078674316406,627.5738525390625],"type":10},{"date":"2022-02-18 17:23:36","docid":0,"hwdata":"509b0981d3dd9ab350139c0c4c5a877c.png","id":202,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[424.4990234375,615.6627807617188,436.942138671875,624.5428466796875],"type":10},{"date":"2022-02-18 17:23:37","docid":0,"hwdata":"4c04bbd1e8f19effc9bc5b5804adb696.png","id":203,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[441.4400939941406,619.988525390625,445.0649108886719,626.2289428710938],"type":10},{"date":"2022-02-18 17:23:37","docid":0,"hwdata":"e4a41913c8446936c81f0c081127428b.png","id":204,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[451.0977478027344,608.285888671875,454.34735107421875,611.3812255859375],"type":10},{"date":"2022-02-18 17:23:38","docid":0,"hwdata":"2b3deca28faace3fdedffd1726e9844e.png","id":205,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[449.1519470214844,612.9729614257812,465.71875,626.2490234375],"type":10},{"date":"2022-02-18 17:23:39","docid":0,"hwdata":"27df49e20540ef1b3e1b444c8141c390.png","id":206,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[457.6849670410156,604.2009887695312,465.6116638183594,621.6924438476562],"type":10},{"date":"2022-02-18 17:23:39","docid":0,"hwdata":"52ee202956ed8d68487d9df7942dfd6b.png","id":207,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[465.98590087890625,611.7685546875,476.4653625488281,621.0701904296875],"type":10},{"date":"2022-02-18 17:23:40","docid":0,"hwdata":"2cced4dab52c7370114963f5e63377b2.png","id":208,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[471.7876281738281,604.7579956054688,483.64166259765625,623.22802734375],"type":10},{"date":"2022-02-18 17:23:40","docid":0,"hwdata":"887daad4dc4c44a4895f3159898e67ad.png","id":209,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[479.4637756347656,604.6174926757812,483.8737487792969,609.7489013671875],"type":10},{"date":"2022-02-18 17:23:40","docid":0,"hwdata":"984986fb3f7ce54c224043a4027a8424.png","id":210,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[469.0920715332031,615.0404663085938,473.5912780761719,621.9132080078125],"type":10},{"date":"2022-02-18 17:23:42","docid":0,"hwdata":"2640c897ce1b28d36dd181f96075ea86.png","id":211,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[489.9783020019531,604.2863159179688,501.67169189453125,624.3421020507812],"type":10},{"date":"2022-02-18 17:23:43","docid":0,"hwdata":"e08a070c6a159842dd66ac3204975086.png","id":212,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[501.31402587890625,607.1768188476562,511.9541320800781,622.911865234375],"type":10},{"date":"2022-02-18 17:23:44","docid":0,"hwdata":"26f00973cd3122eccd75d1e9bcefcf45.png","id":213,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[516.505615234375,602.570068359375,519.6663208007812,606.9788208007812],"type":10},{"date":"2022-02-18 17:23:44","docid":0,"hwdata":"625f16ce6e4c1727172b927976442b76.png","id":214,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[509.52569580078125,606.9058227539062,519.70166015625,623.8753662109375],"type":10},{"date":"2022-02-18 17:23:45","docid":0,"hwdata":"bf4726857cf48c181902e824d5a5e47c.png","id":215,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[516.6127319335938,611.8087158203125,522.8613891601562,623.0072021484375],"type":10},{"date":"2022-02-18 17:23:47","docid":0,"hwdata":"dc69af56ca77faa8ed048219634df6b2.png","id":216,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[525.1814575195312,604.6476440429688,535.178955078125,622.9971923828125],"type":10},{"date":"2022-02-18 17:23:47","docid":0,"hwdata":"6ee5f12ab0f633111c63ff121d237cea.png","id":217,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[533.6073608398438,607.3123168945312,542.5337524414062,610.3223876953125],"type":10},{"date":"2022-02-18 17:23:47","docid":0,"hwdata":"b0bc828cc81be307a44bf3758f86a46b.png","id":218,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[536.017333984375,604.7379760742188,540.963134765625,613.4072265625],"type":10},{"date":"2022-02-18 17:23:47","docid":0,"hwdata":"d65ad6b5ee8b50509886d356073adda7.png","id":219,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[535.1604614257812,606.1480712890625,544.390625,615.23388671875],"type":10},{"date":"2022-02-18 17:23:48","docid":0,"hwdata":"bcd11982457a49f3159b0062775d744f.png","id":220,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[533.8037109375,615.467041015625,538.5531616210938,620.6887817382812],"type":10},{"date":"2022-02-18 17:23:48","docid":0,"hwdata":"662726e21a7863f13c5edcbd7299c5e7.png","id":221,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[534.4999389648438,614.1973876953125,544.6045532226562,623.3484497070312],"type":10},{"date":"2022-02-18 17:23:48","docid":0,"hwdata":"c32ec7ddf5fa41ae76f73b8fd0421a32.png","id":222,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[536.2493896484375,616.335205078125,544.0154418945312,622.9520263671875],"type":10},{"date":"2022-02-18 17:23:58","docid":0,"hwdata":"234f9e4868817e1bec25de278f7e8e24.png","id":229,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[571.7313232421875,617.0621337890625,574.7743530273438,620.2454223632812],"type":10},{"date":"2022-02-18 17:24:05","docid":0,"hwdata":"c311ca8cf9bee82bdca1d4b19be51bea.png","id":230,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[547.5991821289062,607.91162109375,550.6326293945312,610.9814453125],"type":10},{"date":"2022-02-18 17:24:05","docid":0,"hwdata":"5a72e814f8734363785ea656bca54f71.png","id":231,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[546.806396484375,611.1782836914062,551.0559692382812,616.9309692382812],"type":10},{"date":"2022-02-18 17:24:06","docid":0,"hwdata":"95c11ea5eb185dd168ed16da2a5dfacb.png","id":232,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[550.6607055664062,605.6116943359375,554.0285034179688,611.3079833984375],"type":10},{"date":"2022-02-18 17:24:06","docid":0,"hwdata":"73ce5e3fbe7c7c2278731753795edcf8.png","id":233,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[551.811767578125,604.9672241210938,557.0308837890625,611.121337890625],"type":10},{"date":"2022-02-18 17:24:06","docid":0,"hwdata":"879403ad9bdbd0254e908d29032cbb32.png","id":234,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[550.9759521484375,608.5198364257812,555.28759765625,611.92529296875],"type":10},{"date":"2022-02-18 17:24:07","docid":0,"hwdata":"6707d8422a309188a5c7ae8f6ac76eb2.png","id":235,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[549.1944580078125,610.269287109375,557.3843383789062,617.5807495117188],"type":10},{"date":"2022-02-18 17:24:07","docid":0,"hwdata":"d166eb26a38c0aae5b4263bdc9a7708f.png","id":236,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[550.4553833007812,612.3557739257812,563.1348266601562,620.4956665039062],"type":10},{"date":"2022-02-18 17:24:15","docid":0,"hwdata":"b52cc49e06f0cf766693cd21892132a8.png","id":237,"linecolor":"ff5ac6ff","linewidth":1,"page":23,"rect":[392.9375915527344,827.4921875,434.657470703125,839.0369873046875],"type":10}]}