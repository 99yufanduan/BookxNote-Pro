{"EpubVersion":2,"filepath":"","floatingtheme":[],"folded":false,"markups":[{"date":"2023-07-26 16:45:12","docid":0,"id":104,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:12","docid":0,"id":105,"linecolor":"ff59c6ff","page":0,"rect":[0,97.91998291015625,1,98.91998291015625],"title":"作者简介","type":8,"uuid":"aaf392090f8202f839af6b954ed3e4c0"},{"date":"2023-07-26 16:45:12","docid":0,"id":106,"linecolor":"ff59c6ff","page":0,"rect":[0,722.9199829101562,1,723.9199829101562],"title":"嵌入式软件工程师笔试面试指南简介","type":8,"uuid":"964bd03b7fecca6a554acbf5d2f159e4"},{"date":"2023-07-26 16:45:12","docid":0,"id":107,"linecolor":"ff59c6ff","page":1,"rect":[0,89.91998291015625,1,90.91998291015625],"title":"如何使用这份资料","type":8,"uuid":"132830acbcbf726db270350d88b0d1bd"},{"date":"2023-07-26 16:45:12","docid":0,"id":108,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:12","docid":0,"id":109,"linecolor":"ff59c6ff","page":1,"rect":[0,322.91998291015625,1,323.91998291015625],"title":"某外企面试官对这份资料的评价（20210514）","type":8,"uuid":"6fea7022a3c25aedefe90f8706f84683"},{"date":"2023-07-26 16:45:12","docid":0,"id":110,"linecolor":"ff59c6ff","page":3,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"收获 oppo 联发科 京东offer应届生的评价（20210430）","type":8,"uuid":"d96039496a7fb27613619d1105e32d4e"},{"date":"2023-07-26 16:45:12","docid":0,"id":111,"linecolor":"ff59c6ff","page":5,"rect":[0,605.9199829101562,1,606.9199829101562],"title":"大疆offer（20210430）","type":8,"uuid":"c830ce836634872155bdb75990953e79"},{"date":"2023-07-26 16:45:12","docid":0,"id":112,"linecolor":"ff59c6ff","page":7,"rect":[0,611.9199829101562,1,612.9199829101562],"title":"华为offer（20210430）","type":8,"uuid":"1c65c16706bdbd1e5b9edfff75049f2c"}],"page":1,"rect":[0,213.91998291015625,1,214.91998291015625],"title":"嵌入式软件工程师笔试面试指南的价值","type":8,"uuid":"3fd844c5fd09a3b2a445d1f45506978d"}],"page":0,"rect":[0,60.91998291015625,1,61.91998291015625],"title":"必读","type":8,"uuid":"d8c17cf3aaf84223e7d50c162c012d85"},{"date":"2023-07-26 16:45:12","docid":0,"id":113,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:12","docid":0,"id":114,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:12","docid":0,"id":115,"linecolor":"ff59c6ff","page":9,"rect":[0,625.9199829101562,1,626.9199829101562],"title":"就业网站","type":8,"uuid":"099fb647be5caa551f4c468d67e20545"},{"date":"2023-07-26 16:45:12","docid":0,"id":116,"linecolor":"ff59c6ff","page":9,"rect":[0,703.9199829101562,1,704.9199829101562],"title":"企业官网","type":8,"uuid":"b7c496786b595718c0ffc8952fb292c1"},{"date":"2023-07-26 16:45:12","docid":0,"id":117,"linecolor":"ff59c6ff","page":10,"rect":[0,68.91998291015625,1,69.91998291015625],"title":"招聘APP","type":8,"uuid":"f60a8e0e8a98020d2603a0af96b338bb"}],"page":9,"rect":[0,592.9199829101562,1,593.9199829101562],"title":"如何获取校招信息","type":8,"uuid":"19d750e7942ab7fb1f302517e4b3c6b9"},{"date":"2023-07-26 16:45:12","docid":0,"id":118,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:12","docid":0,"id":119,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:12","docid":0,"id":120,"linecolor":"ff59c6ff","page":13,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"1.1 存在问题及改进建议","type":8,"uuid":"1cb7b8afd0e5d05e21d6999e5d24dd4c"}],"page":11,"rect":[0,138.91998291015625,1,139.91998291015625],"title":"1. 原始简历","type":8,"uuid":"a028e2ec8397537f66622d1453f8cfeb"},{"date":"2023-07-26 16:45:12","docid":0,"id":121,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:12","docid":0,"id":122,"linecolor":"ff59c6ff","page":14,"rect":[0,58.91998291015625,1,59.91998291015625],"title":"2.1 个人信息","type":8,"uuid":"2ebf6f92d463694ac8dac22792d56b1a"},{"date":"2023-07-26 16:45:12","docid":0,"id":123,"linecolor":"ff59c6ff","page":14,"rect":[0,162.91998291015625,1,163.91998291015625],"title":"2.2 邮箱","type":8,"uuid":"582621f4038873e074578d4e9d13e6e9"},{"date":"2023-07-26 16:45:12","docid":0,"id":124,"linecolor":"ff59c6ff","page":14,"rect":[0,228.91998291015625,1,229.91998291015625],"title":"2.3 教育经历","type":8,"uuid":"7afca9f3acd12877472f626e1076e225"},{"date":"2023-07-26 16:45:12","docid":0,"id":125,"linecolor":"ff59c6ff","page":14,"rect":[0,279.91998291015625,1,280.91998291015625],"title":"2.4 专业技能","type":8,"uuid":"c4e004ffc4f7d00b195852e92f9a036c"},{"date":"2023-07-26 16:45:12","docid":0,"id":126,"linecolor":"ff59c6ff","page":14,"rect":[0,535.9199829101562,1,536.9199829101562],"title":"2.5 实习经历","type":8,"uuid":"aa41e36e9d4d5044c3d9d733a4721f6f"},{"date":"2023-07-26 16:45:12","docid":0,"id":127,"linecolor":"ff59c6ff","page":15,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"2.6 项目经验","type":8,"uuid":"37bbf07e9e340f7acb99584b65df7ddd"},{"date":"2023-07-26 16:45:12","docid":0,"id":128,"linecolor":"ff59c6ff","page":15,"rect":[0,231.91998291015625,1,232.91998291015625],"title":"2.7 荣誉及奖项","type":8,"uuid":"645d5cbcf2e9f0ae9cd90eb4fe4120ab"},{"date":"2023-07-26 16:45:12","docid":0,"id":129,"linecolor":"ff59c6ff","page":15,"rect":[0,297.91998291015625,1,298.91998291015625],"title":"2.8 个人博客","type":8,"uuid":"de5d418e05d12cbab30eaee9fe72ff9a"},{"date":"2023-07-26 16:45:12","docid":0,"id":130,"linecolor":"ff59c6ff","page":15,"rect":[0,401.91998291015625,1,402.91998291015625],"title":"2.9 自我评价","type":8,"uuid":"9423c941e21ad9fc5bb9edf298a8a707"},{"date":"2023-07-26 16:45:12","docid":0,"id":131,"linecolor":"ff59c6ff","page":15,"rect":[0,549.9199829101562,1,550.9199829101562],"title":"2.10 其他注意事项","type":8,"uuid":"91d758954d8e1a33404f572cd3846811"}],"page":14,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"2. 书写简历注意问题","type":8,"uuid":"e558d44afa48e03680aef784216603d6"},{"date":"2023-07-26 16:45:12","docid":0,"id":132,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:12","docid":0,"id":133,"linecolor":"ff59c6ff","page":15,"rect":[0,721.9199829101562,1,722.9199829101562],"title":"3.1 Markdown-Resume","type":8,"uuid":"0fae7f6949e407805993022cd9c6585b"},{"date":"2023-07-26 16:45:12","docid":0,"id":134,"linecolor":"ff59c6ff","page":16,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"3.2 极简polebrief","type":8,"uuid":"5b639829b2ccb996fa4d165f0b263b75"},{"date":"2023-07-26 16:45:12","docid":0,"id":135,"linecolor":"ff59c6ff","page":16,"rect":[0,94.91998291015625,1,95.91998291015625],"title":"3.3 五百丁简历","type":8,"uuid":"179792e79262051fc000de6f4444988c"},{"date":"2023-07-26 16:45:12","docid":0,"id":136,"linecolor":"ff59c6ff","page":16,"rect":[0,160.91998291015625,1,161.91998291015625],"title":"3.4 个人使用的简历模版","type":8,"uuid":"5ec59f295f1dc6852a99ba301ba95fe4"}],"page":15,"rect":[0,691.9199829101562,1,692.9199829101562],"title":"3. 简历模版推荐","type":8,"uuid":"82643fdeb1341dbbeba747852b28fa5f"}],"page":11,"rect":[0,51.91998291015625,1,52.91998291015625],"title":"程序员如何写一份合格的简历？","type":8,"uuid":"f1832cea79fd3b324dbd6f17247138ca"},{"date":"2023-07-26 16:45:12","docid":0,"id":137,"linecolor":"ff59c6ff","page":16,"rect":[0,695.9199829101562,1,696.9199829101562],"title":"如何投递简历","type":8,"uuid":"1344f7c379c910b241512ac6d9d0705f"},{"date":"2023-07-26 16:45:12","docid":0,"id":138,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:12","docid":0,"id":139,"linecolor":"ff59c6ff","page":17,"rect":[0,622.9199829101562,1,623.9199829101562],"title":"1.在面试前准备项目描述，别害怕，因为面试官什么都不知道","type":8,"uuid":"8293cc97c138bbe81b32ed75b6ef3d45"},{"date":"2023-07-26 16:45:12","docid":0,"id":140,"linecolor":"ff59c6ff","page":18,"rect":[0,532.9199829101562,1,533.9199829101562],"title":"2. 准备项目的各种细节，一旦被问倒了，就说明你没做过","type":8,"uuid":"f98082297a6ea0c60c5126bff89a56eb"},{"date":"2023-07-26 16:45:12","docid":0,"id":141,"linecolor":"ff59c6ff","page":20,"rect":[0,285.91998291015625,1,286.91998291015625],"title":"3.不露痕迹地说出面试官爱听的话","type":8,"uuid":"be9e74019fa3bce41e52761542ce6284"},{"date":"2023-07-26 16:45:12","docid":0,"id":142,"linecolor":"ff59c6ff","page":21,"rect":[0,459.91998291015625,1,460.91998291015625],"title":"4.一定要主动，面试官没有义务挖掘你的亮点","type":8,"uuid":"81d56205c77039322afb485c4b5584f7"},{"date":"2023-07-26 16:45:12","docid":0,"id":143,"linecolor":"ff59c6ff","page":22,"rect":[0,279.91998291015625,1,280.91998291015625],"title":"5.一旦有低级错误，可能会直接出局","type":8,"uuid":"f2fe22da9d2ee1ab0e66f91c1b56580c"},{"date":"2023-07-26 16:45:12","docid":0,"id":144,"linecolor":"ff59c6ff","page":23,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"6.引导篇：准备些加分点，在介绍时有意提到，但别说全","type":8,"uuid":"8682433c262e5185fb58347840907cc4"},{"date":"2023-07-26 16:45:12","docid":0,"id":145,"linecolor":"ff59c6ff","page":23,"rect":[0,332.91998291015625,1,333.91998291015625],"title":"7.你可以引导，但不能自说自话","type":8,"uuid":"3ac0cc94f86b3bdf46718b182ed79406"},{"date":"2023-07-26 16:45:12","docid":0,"id":146,"linecolor":"ff59c6ff","page":23,"rect":[0,606.9199829101562,1,607.9199829101562],"title":"8.不是结尾的总结","type":8,"uuid":"fe7a1abcc99e86c2aaa202d8febaa243"}],"page":17,"rect":[0,384.91998291015625,1,385.91998291015625],"title":"如何在面试中介绍自己的项目经验","type":8,"uuid":"519f99ea96ed1049792a19590136099f"},{"date":"2023-07-26 16:45:12","docid":0,"id":147,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:12","docid":0,"id":148,"linecolor":"ff59c6ff","page":24,"rect":[0,219.91998291015625,1,220.91998291015625],"title":"1． 语言表达、仪表","type":8,"uuid":"75c47c3a7f2be45a749dc1e4ce6b44c2"},{"date":"2023-07-26 16:45:12","docid":0,"id":149,"linecolor":"ff59c6ff","page":24,"rect":[0,462.91998291015625,1,463.91998291015625],"title":"2．工作经验","type":8,"uuid":"4ae1f61c1c3e8b2cf4959b0955098638"},{"date":"2023-07-26 16:45:13","docid":0,"id":150,"linecolor":"ff59c6ff","page":25,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"3．应聘动机与期望","type":8,"uuid":"b3bd8c79ae46367dc821b50f8c059895"},{"date":"2023-07-26 16:45:13","docid":0,"id":151,"linecolor":"ff59c6ff","page":25,"rect":[0,445.91998291015625,1,446.91998291015625],"title":"4．事业心、进取心、自信心","type":8,"uuid":"70988a4e38a07cf0094a68f62295a54e"},{"date":"2023-07-26 16:45:13","docid":0,"id":152,"linecolor":"ff59c6ff","page":25,"rect":[0,698.9199829101562,1,699.9199829101562],"title":"5．工作态度、组织纪律性、诚实可靠性","type":8,"uuid":"68c8e08bf0b44211bfa1bddf62ed9d92"},{"date":"2023-07-26 16:45:13","docid":0,"id":153,"linecolor":"ff59c6ff","page":26,"rect":[0,264.91998291015625,1,265.91998291015625],"title":"6．分析判断能力","type":8,"uuid":"4a07a02bc76d7adf086ea73499052d04"},{"date":"2023-07-26 16:45:13","docid":0,"id":154,"linecolor":"ff59c6ff","page":26,"rect":[0,532.9199829101562,1,533.9199829101562],"title":"7．应变能力（可选题）","type":8,"uuid":"ae42ff5756b129d15df2c1b46624813e"},{"date":"2023-07-26 16:45:13","docid":0,"id":155,"linecolor":"ff59c6ff","page":27,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"8．自知力、自控力","type":8,"uuid":"11df36b302f4ebbeecf410974db80b57"},{"date":"2023-07-26 16:45:13","docid":0,"id":156,"linecolor":"ff59c6ff","page":27,"rect":[0,251.91998291015625,1,252.91998291015625],"title":"9．组织协调能力、人力关系与适应能力","type":8,"uuid":"a00270793b22af703524048782afc235"},{"date":"2023-07-26 16:45:13","docid":0,"id":157,"linecolor":"ff59c6ff","page":27,"rect":[0,549.9199829101562,1,550.9199829101562],"title":"10．精力、活力与兴趣、爱好","type":8,"uuid":"04f6a66ca737e18a9bbab7417ba04a93"},{"date":"2023-07-26 16:45:13","docid":0,"id":158,"linecolor":"ff59c6ff","page":28,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"11．专业知识水平及特长","type":8,"uuid":"b5398e6642a1d05f129a197d157e922b"}],"page":24,"rect":[0,162.91998291015625,1,163.91998291015625],"title":"HR面试常见问题汇总","type":8,"uuid":"a6f48c734ead8837036ac8cf07c2cfe7"}],"page":9,"rect":[0,555.9199829101562,1,556.9199829101562],"title":"笔试面试准备","type":8,"uuid":"b2da807da7758746531c562c0ffcf489"},{"date":"2023-07-26 16:45:13","docid":0,"id":159,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":160,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":161,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":162,"linecolor":"ff59c6ff","page":31,"rect":[0,183.91998291015625,1,184.91998291015625],"title":"C语言宏中\"#“和”##\"的用法","type":8,"uuid":"74f139d3c82f4810c9a17b1609f48c94"},{"date":"2023-07-26 16:45:13","docid":0,"id":163,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-06 18:12:49","docid":0,"fillcolor":"ffffed99","id":5,"originaltext":"如果键入volatile，编译器会逐一的进行编译并产生相应的机器代码（产生四条代码）","page":32,"textblocks":[{"first":[477.3407897949219,653.9791870117188,9.753875732421875,12.5],"last":[390.90283203125,668.985107421875,9.753875732421875,12.5],"length":43,"rects":[[477.3407897949219,653.9791870117188,39.015472412109375,12.5],[75.52127075195312,668.985107421875,325.13543701171875,12.5]],"start":456,"text":"如果键入\nvolatile，编译器会逐一的进行编译并产生相应的机器代码（产生四条代码）"}],"type":5,"uuid":"f618d5bddac6bcad8edb486fb945395b"}],"page":32,"rect":[0,402.91998291015625,1,403.91998291015625],"title":"关键字volatile有什么含意？并举出三个不同的例子？","type":8,"uuid":"4b3dcb26a5e3857977ff133bf05d167d"},{"date":"2023-07-26 16:45:13","docid":0,"id":164,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-06 18:15:03","docid":0,"fillcolor":"ffffed99","id":12,"originaltext":" 在模块内（但在函数体外）\n可以被模块内所用函数访问，但不能被模块外其它函数访问","page":32,"textblocks":[{"first":[95.3726577758789,735.0112915039062,2.5360031127929688,12.5],"last":[205.32272338867188,735.0112915039062,9.753860473632812,12.5],"length":13,"rects":[[95.3726577758789,735.0112915039062,119.70392608642578,12.5]],"start":568,"text":" 在模块内（但在函数体外）"},{"first":[332.1230163574219,735.0112915039062,9.753875732421875,12.5],"last":[156.55337524414062,750.0172119140625,9.753860473632812,12.5],"length":27,"rects":[[332.1230163574219,735.0112915039062,185.32351684570312,12.5],[98.03020477294922,750.0172119140625,68.27703094482422,12.5]],"start":593,"text":"可以被模块内所用函数访问，但不能被模块\n外其它函数访问"}],"type":5,"uuid":"82a1180c5aa3a8bda632485282c1c4bc"}],"page":32,"rect":[0,692.9199829101562,1,693.9199829101562],"title":"关键字static的作用是什么？","type":8,"uuid":"788a8f65e4f40ec02d055ce36c7cc5cf"},{"date":"2023-07-26 16:45:13","docid":0,"id":165,"linecolor":"ff59c6ff","page":33,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"在C语言中，为什么 static变量只初始化一次？","type":8,"uuid":"dd117942088c2035e868289d67c5eaaa"},{"date":"2023-07-26 16:45:13","docid":0,"id":166,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-06 18:16:52","docid":0,"fillcolor":"ffffed99","id":16,"originaltext":"指示编译器这部分代码按C语言的进行编译","page":33,"textblocks":[{"first":[493.2987060546875,152.05572509765625,9.753875732421875,12.5],"last":[228.04244995117188,167.0616455078125,9.753860473632812,12.5],"length":20,"rects":[[493.2987060546875,152.05572509765625,19.50775146484375,12.5],[75.521240234375,167.0616455078125,162.2750701904297,12.5]],"start":270,"text":"指示\n编译器这部分代码按C语言的进行编译"}],"type":5,"uuid":"61ff3b15abac7c64f2710893575d0499"}],"page":33,"rect":[0,124.91998291015625,1,125.91998291015625],"title":"extern”C” 的作用是什么？","type":8,"uuid":"7ae93fb405a6124515a8dced12883e0a"},{"date":"2023-07-26 16:45:13","docid":0,"id":167,"linecolor":"ff59c6ff","page":33,"rect":[0,190.91998291015625,1,191.91998291015625],"title":"const有什么作用？","type":8,"uuid":"178c4df95d6621d34361235a32f6e6c3"},{"date":"2023-07-26 16:45:13","docid":0,"id":168,"linecolor":"ff59c6ff","page":33,"rect":[0,604.9199829101562,1,605.9199829101562],"title":"什么情况下使用const关键字？","type":8,"uuid":"6eb97295dcaedcaea0672261b9180317"},{"date":"2023-07-26 16:45:13","docid":0,"id":169,"linecolor":"ff59c6ff","page":34,"rect":[0,516.9199829101562,1,517.9199829101562],"title":"new/delete与malloc/free的区别是什么？","type":8,"uuid":"c30fd55e056ae2dea747c61deb372e04"},{"date":"2023-07-26 16:45:13","docid":0,"id":170,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-06 19:05:10","docid":0,"fillcolor":"ffffed99","id":20,"originaltext":"strlen用来计算字符串的长度（在C/C++中，字符串是以\"\\0\"作为结束符的），它从内存的某个位置（可以是字符串开头，中间某个位置，甚至是某个不确定的内存区域）开始扫描直到碰到第一个字符串结束符\\0为止","page":34,"textblocks":[{"first":[75.52122497558594,721.3751831054688,4.652595520019531,13.5],"last":[104.18781280517578,751.3870239257812,9.753860473632812,13.5],"length":105,"rects":[[75.52122497558594,721.3751831054688,442.4886016845703,13.5],[75.52120971679688,736.381103515625,438.9240417480469,13.5],[75.52120971679688,751.3870239257812,38.42046356201172,13.5]],"start":729,"text":"strlen用来计算字符串的长度（在C/C++中，字符串是以\"\\0\"作为结束符的），它从内存的某个位置（可\n以是字符串开头，中间某个位置，甚至是某个不确定的内存区域）开始扫描直到碰到第一个字符串结束\n符\\0为止"}],"type":5,"uuid":"94238ae83eeabea5e28c1b47d3ccda11"}],"page":34,"rect":[0,672.9199829101562,1,673.9199829101562],"title":"strlen(\"\\0\") =？ sizeof(\"\\0\")=?","type":8,"uuid":"daa0d923b56cea9763e1774f9553d953"},{"date":"2023-07-26 16:45:13","docid":0,"id":171,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-06 19:18:20","docid":0,"fillcolor":"ffffed99","id":22,"originaltext":" sizeof既是关键字，也是运算符，但不是函数","page":35,"textblocks":[{"first":[299.9547119140625,78.11528015136719,2.5360107421875,13.5],"last":[484.8984375,78.11528015136719,9.753875732421875,13.5],"length":24,"rects":[[299.9547119140625,78.11528015136719,194.69760131835938,13.5]],"start":76,"text":" sizeof既是关键字，也是运算符，但不是函数"}],"type":5,"uuid":"80bae0e958616b81b82a350bda20a4b7"},{"date":"2023-07-06 19:19:51","docid":0,"fillcolor":"ffffed99","id":26,"originaltext":"编译程序的 sizeof都是在编译的时候计算的","page":35,"textblocks":[{"first":[127.29167938232422,182.456787109375,9.753868103027344,13.5],"last":[302.474853515625,182.456787109375,9.753875732421875,13.5],"length":23,"rects":[[127.29167938232422,182.456787109375,184.93704986572266,13.5]],"start":366,"text":"编译程序的 sizeof都是在编译的时候计算的"}],"type":5,"uuid":"48c27d34929d68702fea42fef7f4debe"},{"date":"2023-07-06 19:18:35","docid":0,"fillcolor":"ffffed99","id":23,"markups":[{"date":"2023-07-06 19:18:58","docid":0,"fillcolor":"ffffed99","id":24,"originaltext":"strlen则是在运行期计算的，用来计算字符串的实际长度","page":35,"textblocks":[{"first":[110.32069396972656,197.46270751953125,4.652595520019531,13.5],"last":[341.1557312011719,197.46270751953125,9.753875732421875,13.5],"length":28,"rects":[[110.32069396972656,197.46270751953125,240.5889129638672,13.5]],"start":417,"text":"strlen则是在运行期计算的，用来计算字符串的实际长度"}],"type":5,"uuid":"3d8ae60bf817915291da336f4117d562"}],"originaltext":"而strlen是函数","page":35,"textblocks":[{"first":[98.0301284790039,93.12120056152344,9.753860473632812,13.5],"last":[153.2955322265625,93.12120056152344,9.753860473632812,13.5],"length":10,"rects":[[98.0301284790039,93.12120056152344,65.0192642211914,13.5]],"start":103,"text":"而strlen是函数"}],"type":5,"uuid":"1c332bcd04f10ab9c07530a867958af8"}],"page":35,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"sizeof和strlen有什么区别？","type":8,"uuid":"0f2d586f3ab40f4791a4f3e82ac7614b"},{"date":"2023-07-26 16:45:13","docid":0,"id":172,"linecolor":"ff59c6ff","page":35,"rect":[0,267.91998291015625,1,268.91998291015625],"title":"不使用 sizeof，如何求int占用的字节数？","type":8,"uuid":"81e46a6593dfba8fb32e6c0421085998"},{"date":"2023-07-26 16:45:13","docid":0,"id":173,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-07 11:33:38","docid":0,"fillcolor":"ffffed99","id":28,"originaltext":"联合体中所有成员共用一块地址空间，即联合体只存放了一个被选中的成员","page":35,"textblocks":[{"first":[429.68048095703125,662.9312744140625,9.753875732421875,12.5],"last":[322.3879089355469,677.9371948242188,9.753875732421875,12.5],"length":34,"rects":[[429.68048095703125,662.9312744140625,87.78485107421875,12.5],[98.04895782470703,677.9371948242188,234.09282684326172,12.5]],"start":879,"text":"联合体中所有成员共\n用一块地址空间，即联合体只存放了一个被选中的成员"}],"type":5,"uuid":"c39aae3dcf383ef28b652f8816f718c7"},{"date":"2023-07-07 11:33:52","docid":0,"fillcolor":"ffffed99","id":30,"originaltext":"一个联合型变量的长度等于其最长的成员的长度。","page":35,"textblocks":[{"first":[234.60308837890625,722.9550170898438,9.753860473632812,12.5],"last":[439.4343566894531,722.9550170898438,9.753875732421875,12.5],"length":22,"rects":[[234.60308837890625,722.9550170898438,214.58514404296875,12.5]],"start":1035,"text":"一个联合型变量的长度等于其最长的成员的长度。"}],"type":5,"uuid":"114823ed685fb043c665c03671782d43"},{"date":"2023-07-07 11:33:44","docid":0,"fillcolor":"ffffed99","id":29,"originaltext":"而结构体中所有成员占用空间是累加的","page":35,"textblocks":[{"first":[341.8956604003906,677.9371948242188,9.753875732421875,12.5],"last":[497.95758056640625,677.9371948242188,9.753875732421875,12.5],"length":17,"rects":[[341.8956604003906,677.9371948242188,165.8157958984375,12.5]],"start":914,"text":"而结构体中所有成员占用空间是累加的"}],"type":5,"uuid":"b13b267cf6653985941b72c61c658862"},{"date":"2023-07-13 17:46:30","docid":0,"group":[{"date":"2023-07-13 17:46:30","docid":0,"id":32,"linecolor":"ffa0ec6f","linewidth":2,"page":36,"rect":[35.55243055139725,-80.74619820147859,565.2233874103495,199.455161229025],"type":2,"uuid":"e4619bb9474e04f004467e0da0f12479"}],"id":31,"imgfile":"63eec47160cb182dda79c963ab680d32.png","linecolor":"ffa0ec6f","linewidth":2,"page":35,"rect":[35.55243055139725,767.0888829140457,565.2233874103495,1047.2902423445494],"type":2,"uuid":"38f12add124ee849374fc7446fc63297"}],"page":35,"rect":[0,597.9199829101562,1,598.9199829101562],"title":"C语言中 struct与 union的区别是什么?","type":8,"uuid":"3abd94be2fa03ffe04a9f619be6a77bc"},{"date":"2023-07-26 16:45:13","docid":0,"id":174,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-13 17:46:54","docid":0,"fillcolor":"fffeeb73","id":34,"originaltext":"它最重要的特点就是可写（可寻址）","page":36,"textblocks":[{"first":[280.3517761230469,233.043701171875,9.753875732421875,12.5],"last":[426.6598205566406,233.043701171875,9.753875732421875,12.5],"length":16,"rects":[[280.3517761230469,233.043701171875,156.06192016601562,12.5]],"start":328,"text":"它最重要的特点就是可写（可寻址）"}],"type":5,"uuid":"410e8fdfcecb2ea408dc9aab711b0452"},{"date":"2023-07-13 17:47:30","docid":0,"fillcolor":"fffeeb73","id":35,"originaltext":"右值\n它最重要的特点是可读","page":36,"textblocks":[{"first":[75.52056884765625,269.55853271484375,9.753860473632812,13.5],"last":[85.27442932128906,269.55853271484375,9.753860473632812,13.5],"length":2,"rects":[[75.52056884765625,269.55853271484375,19.507720947265625,13.5]],"start":390,"text":"右值"},{"first":[290.1056213378906,269.55853271484375,9.753875732421875,13.5],"last":[377.8904724121094,269.55853271484375,9.753875732421875,13.5],"length":10,"rects":[[290.1056213378906,269.55853271484375,97.53872680664062,13.5]],"start":412,"text":"它最重要的特点是可读"}],"type":5,"uuid":"c5b7a8b441b1377a1f8d4f9bdbf90998"}],"page":36,"rect":[0,205.91998291015625,1,206.91998291015625],"title":"左值和右值是什么？","type":8,"uuid":"1d8f25618961eae2db96a1569abd73fe"},{"date":"2023-07-26 16:45:13","docid":0,"id":175,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-13 18:24:58","docid":0,"fillcolor":"fffeeb73","id":38,"originaltext":"因为短路计算的问题，对于&&操作，由于在两个表达式的返回值中，如果有一个为假则整个表达式的值都为假，如果前一个语句的返回值为 false，则无论后一个语句的返回值是真是假，整个条件判断都为假，不用执行后一个语句","page":36,"textblocks":[{"first":[75.52125549316406,596.96337890625,9.753860473632812,12.5],"last":[173.05990600585938,626.9752197265625,9.753860473632812,12.5],"length":107,"rects":[[75.52125549316406,596.96337890625,443.4108123779297,12.5],[75.52125549316406,611.9692993164062,433.5204315185547,12.5],[75.52125549316406,626.9752197265625,107.29251098632812,12.5]],"start":671,"text":"因为短路计算的问题，对于&&操作，由于在两个表达式的返回值中，如果有一个为假则整个表达式的值\n都为假，如果前一个语句的返回值为 false，则无论后一个语句的返回值是真是假，整个条件判断都为\n假，不用执行后一个语句"}],"type":5,"uuid":"958aa85e95c509ca497cc2444bb8b044"}],"page":36,"rect":[0,332.91998291015625,1,333.91998291015625],"title":"什么是短路求值？","type":8,"uuid":"7b07621cf4d4ed5191f9d27567e44701"},{"date":"2023-07-26 16:45:13","docid":0,"id":176,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-13 18:26:08","docid":0,"fillcolor":"fffeeb73","id":40,"originaltext":"后置自增运算符需要把原来变量的值复制到一个临时的存储空间，等运算结束后才会返回这个临时变量的值。所以前置自增运算符效率比后置自增要高","page":37,"textblocks":[{"first":[75.5212631225586,80.04638671875,9.753860473632812,12.5],"last":[270.5986022949219,95.05230712890625,9.753875732421875,12.5],"length":67,"rects":[[75.5212631225586,80.04638671875,438.9240493774414,12.5],[75.5212631225586,95.05230712890625,204.83121490478516,12.5]],"start":0,"text":"后置自增运算符需要把原来变量的值复制到一个临时的存储空间，等运算结束后才会返回这个临时变量\n的值。所以前置自增运算符效率比后置自增要高"}],"type":5,"uuid":"9333ba039849e45bf4111ac2949cd32d"}],"page":36,"rect":[0,665.9199829101562,1,666.9199829101562],"title":"++a和a++有什么区别？两者是如何实现的？","type":8,"uuid":"05ff6236d68f4a40240220e4b195e285"}],"page":31,"rect":[0,153.91998291015625,1,154.91998291015625],"title":"关键字","type":8,"uuid":"1fe4a12fe69e70ba8160298190b33c86"},{"date":"2023-07-26 16:45:13","docid":0,"id":177,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":178,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-13 19:03:01","docid":0,"fillcolor":"fffeeb73","id":42,"originaltext":"1. 静态存储区分配","page":37,"textblocks":[{"first":[87.52598571777344,309.39923095703125,5.5792083740234375,13.5],"last":[156.55331420898438,309.39923095703125,9.753860473632812,13.5],"length":10,"rects":[[87.52598571777344,309.39923095703125,78.78118896484375,13.5]],"start":89,"text":"1. 静态存储区分配"}],"type":5,"uuid":"9e4d954c02d1e6b3ba5c697e666799b1"},{"date":"2023-07-13 19:03:03","docid":0,"fillcolor":"fffeeb73","id":43,"originaltext":"2. 栈上分配","page":37,"textblocks":[{"first":[87.5259780883789,355.1170959472656,5.5792083740234375,13.5],"last":[127.2917251586914,355.1170959472656,9.753868103027344,13.5],"length":7,"rects":[[87.5259780883789,355.1170959472656,49.519615173339844,13.5]],"start":143,"text":"2. 栈上分配"}],"type":5,"uuid":"36e19ace28175a95d0cd185b976edf3a"},{"date":"2023-07-13 19:03:05","docid":0,"fillcolor":"fffeeb73","id":44,"originaltext":"3. 堆上分配","page":37,"textblocks":[{"first":[87.5259780883789,400.8852233886719,5.5792083740234375,13.5],"last":[127.2917251586914,400.8852233886719,9.753868103027344,13.5],"length":7,"rects":[[87.5259780883789,400.8852233886719,49.519615173339844,13.5]],"start":196,"text":"3. 堆上分配"}],"type":5,"uuid":"0811a4a51416e618d583dde8dd775064"}],"page":37,"rect":[0,282.91998291015625,1,283.91998291015625],"title":"C语言中内存分配的方式有几种？","type":8,"uuid":"10fc0c22d7dd598576d8338825dd22df"},{"date":"2023-07-26 16:45:13","docid":0,"id":179,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-13 19:13:02","docid":0,"fillcolor":"fffeeb73","id":47,"originaltext":"1. 申请方式","page":37,"textblocks":[{"first":[87.52598571777344,452.2054138183594,5.5792083740234375,13.5],"last":[127.2917251586914,452.2054138183594,9.753868103027344,13.5],"length":7,"rects":[[87.52598571777344,452.2054138183594,49.51960754394531,13.5]],"start":215,"text":"1. 申请方式"}],"type":5,"uuid":"824c3e934b723e9d73901172fc576371"},{"date":"2023-07-13 19:13:03","docid":0,"fillcolor":"fffeeb73","id":48,"markups":[{"date":"2023-07-13 19:13:56","docid":0,"fillcolor":"fffeeb73","id":53,"originaltext":"栈空间有限。在Windows下,栈是向低地址扩展的数据结 构","page":37,"textblocks":[{"first":[98.03014373779297,506.97711181640625,9.753860473632812,12.5],"last":[339.61761474609375,506.97711181640625,9.753875732421875,12.5],"length":30,"rects":[[98.03014373779297,506.97711181640625,251.34134674072266,12.5]],"start":265,"text":"栈空间有限。在Windows下,栈是向低地址扩展的数据结 构"}],"type":5,"uuid":"aca876e16288adecc7729d7d13761f7e"},{"date":"2023-07-13 19:14:09","docid":0,"fillcolor":"fffeeb73","id":54,"originaltext":"堆是很大的自由存储区。堆是向高地址扩展的数据结构，是不连续的内存区域。这是由于系统是用链表来存储的空闲内存地址的，自然是不连续的","page":37,"textblocks":[{"first":[98.0301284790039,573.2529907226562,9.753860473632812,12.5],"last":[293.10748291015625,587.2589111328125,9.753875732421875,12.5],"length":65,"rects":[[98.0301284790039,573.2529907226562,419.41634368896484,12.5],[98.0301284790039,587.2589111328125,204.83123016357422,12.5]],"start":426,"text":"堆是很大的自由存储区。堆是向高地址扩展的数据结构，是不连续的内存区域。这是由于系统是用\n链表来存储的空闲内存地址的，自然是不连续的"}],"type":5,"uuid":"e886424b41a52551c8dc39802091fdfc"}],"originaltext":"2. 申请大小的限制","page":37,"textblocks":[{"first":[87.52598571777344,491.9711608886719,5.5792083740234375,12.5],"last":[156.55331420898438,491.9711608886719,9.753860473632812,12.5],"length":10,"rects":[[87.52598571777344,491.9711608886719,78.78118896484375,12.5]],"start":254,"text":"2. 申请大小的限制"}],"type":5,"uuid":"7300bdc4628aac94404262c2f8080693"},{"date":"2023-07-13 19:13:15","docid":0,"fillcolor":"fffeeb73","id":50,"markups":[{"date":"2023-07-13 19:13:36","docid":0,"fillcolor":"fffeeb73","id":51,"originaltext":"栈由系统自动分配，速度较快。","page":37,"textblocks":[{"first":[98.0301284790039,636.778564453125,9.753860473632812,12.5],"last":[224.83041381835938,636.778564453125,9.753860473632812,12.5],"length":14,"rects":[[98.0301284790039,636.778564453125,136.55414581298828,12.5]],"start":562,"text":"栈由系统自动分配，速度较快。"}],"type":5,"uuid":"48108e303264f0a1459cb90ee78536a3"},{"date":"2023-07-13 19:13:37","docid":0,"fillcolor":"fffeeb73","id":52,"originaltext":"堆是由new分配的内存，一般速度比较慢，而且容易产生内存碎片,不过用起来最方便.","page":37,"textblocks":[{"first":[98.0301284790039,657.0365600585938,9.753860473632812,12.5],"last":[460.8545227050781,657.0365600585938,2.594512939453125,12.5],"length":40,"rects":[[98.0301284790039,657.0365600585938,365.41890716552734,12.5]],"start":588,"text":"堆是由new分配的内存，一般速度比较慢，而且容易产生内存碎片,不过用起来最方便."}],"type":5,"uuid":"418b03ef168dbb7c03d2b2ff8bb62d1c"}],"originaltext":"3. 申请效率","page":37,"textblocks":[{"first":[87.52597045898438,621.7725830078125,5.5792083740234375,12.5],"last":[127.29170989990234,621.7725830078125,9.753868103027344,12.5],"length":7,"rects":[[87.52597045898438,621.7725830078125,49.51960754394531,12.5]],"start":554,"text":"3. 申请效率"}],"type":5,"uuid":"c3fc4074342913b4ed297933b3e96b6f"}],"page":37,"rect":[0,424.91998291015625,1,425.91998291015625],"title":"堆与栈有什么区别？","type":8,"uuid":"cd630b6bd82750c4c5de1e69cc43c303"},{"date":"2023-07-26 16:45:13","docid":0,"id":180,"linecolor":"ff59c6ff","page":37,"rect":[0,680.9199829101562,1,681.9199829101562],"title":"栈在C语言中有什么作用？","type":8,"uuid":"c712c3b83d52c9c39948c51f20c5f33d"},{"date":"2023-07-26 16:45:13","docid":0,"id":181,"linecolor":"ff59c6ff","page":38,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"C语言函数参数压栈顺序是怎样的？","type":8,"uuid":"21e41803ecf80c2183a9f534e1c002cc"},{"date":"2023-07-26 16:45:13","docid":0,"id":182,"linecolor":"ff59c6ff","page":38,"rect":[0,147.91998291015625,1,148.91998291015625],"title":"C++如何处理返回值？","type":8,"uuid":"cabb0542ec29cf2397012f76987617da"},{"date":"2023-07-26 16:45:13","docid":0,"id":183,"linecolor":"ff59c6ff","page":38,"rect":[0,213.91998291015625,1,214.91998291015625],"title":"C++中拷贝赋值函数的形参能否进行值传递？","type":8,"uuid":"09bb1009fe366cbaa6467f3a4f59c9d6"},{"date":"2023-07-26 16:45:13","docid":0,"id":184,"linecolor":"ff59c6ff","page":38,"rect":[0,434.91998291015625,1,435.91998291015625],"title":"C++的内存管理是怎样的？","type":8,"uuid":"63f831942ef3afa8f13786fbc2741492"},{"date":"2023-07-26 16:45:13","docid":0,"id":185,"linecolor":"ff59c6ff","page":38,"rect":[0,637.9199829101562,1,638.9199829101562],"title":"什么是内存泄漏？","type":8,"uuid":"c68bff25292ce9384e664808f8b4db19"},{"date":"2023-07-26 16:45:13","docid":0,"id":186,"linecolor":"ff59c6ff","page":39,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"如何判断内存泄漏？","type":8,"uuid":"76df1a4b4d4f9996142bad9a660879a2"}],"page":37,"rect":[0,252.91998291015625,1,253.91998291015625],"title":"内存","type":8,"uuid":"d124987ac15657761d5c8712f767e480"},{"date":"2023-07-26 16:45:13","docid":0,"id":187,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":188,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 17:13:43","docid":0,"fillcolor":"fffeeb73","id":1103,"originaltext":"数组指针就是指向数组的指针，它表示的是一个指针，这个指针指向的是一个数组，它的重点是指针。","page":39,"textblocks":[{"first":[75.521240234375,361.31170654296875,9.753860473632812,12.5],"last":[504.6914367675781,361.31170654296875,9.753875732421875,12.5],"length":45,"rects":[[75.521240234375,361.31170654296875,438.924072265625,12.5]],"start":249,"text":"数组指针就是指向数组的指针，它表示的是一个指针，这个指针指向的是一个数组，它的重点是指针。"}],"type":5,"uuid":"92650b5be984ed0b7fa88d1076b00d2d"},{"date":"2023-07-26 17:13:49","docid":0,"fillcolor":"fffeeb73","id":1104,"originaltext":"指针数组表示的是一个数组，而数组中的元素是指针","page":39,"textblocks":[{"first":[75.5486068725586,669.5521850585938,9.75390625,13.5],"last":[290.1346435546875,669.5521850585938,9.75390625,13.5],"length":23,"rects":[[75.5486068725586,669.5521850585938,224.3399429321289,13.5]],"start":620,"text":"指针数组表示的是一个数组，而数组中的元素是指针"}],"type":5,"uuid":"cbb43b8521ee188c4d923798b61cbd5c"}],"page":39,"rect":[0,333.91998291015625,1,334.91998291015625],"title":"数组指针和指针数组有什么区别？","type":8,"uuid":"0f42ad72a0fda8e0c39a5c660fb0837d"},{"date":"2023-07-26 16:45:13","docid":0,"id":189,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 14:09:22","docid":0,"fillcolor":"fffeeb73","id":58,"markups":[{"date":"2023-07-26 14:08:55","docid":0,"fillcolor":"fffeeb73","id":56,"markups":[{"date":"2023-07-26 14:09:14","docid":0,"fillcolor":"fffeeb73","id":57,"originaltext":"最后需要注意的是，指向函数的指针变量没有 ++ 和 -- 运算。","page":40,"textblocks":[{"first":[75.52165985107422,444.4443359375,9.75390625,13.5],"last":[327.4088439941406,444.4443359375,9.75390625,13.5],"length":32,"rects":[[75.52165985107422,444.4443359375,261.6410903930664,13.5]],"start":513,"text":"最后需要注意的是，指向函数的指针变量没有 ++ 和 -- 运算。"}],"type":5,"uuid":"75469df3650a4d7f5cce83ed5d95b217"}],"originaltext":"int(*p)(int, int);","page":40,"textblocks":[{"first":[102.53407287597656,278.6927795410156,5.2934417724609375,8.77850341796875],"last":[192.42538452148438,278.6927795410156,5.2934417724609375,8.77850341796875],"length":18,"rects":[[102.53407287597656,278.6927795410156,95.18475341796875,8.77850341796875]],"start":686,"text":"int(*p)(int, int);"}],"type":5,"uuid":"d36dc484c6bf33fc44d7b39668214996"}],"originaltext":"1. 函数指针","page":40,"textblocks":[{"first":[87.52604675292969,191.7955322265625,5.5792083740234375,12.5],"last":[127.29178619384766,191.7955322265625,9.753868103027344,12.5],"length":7,"rects":[[87.52604675292969,191.7955322265625,49.51960754394531,12.5]],"start":31,"text":"1. 函数指针"}],"type":5,"uuid":"6b4116bf151a3b3ed4b20b5ca478fbb2"},{"date":"2023-07-26 14:09:38","docid":0,"fillcolor":"fffeeb73","id":59,"originaltext":"2. 指针函数","page":41,"textblocks":[{"first":[87.52681732177734,86.81304931640625,5.5792083740234375,12.5],"last":[127.29256439208984,86.81304931640625,9.753868103027344,12.5],"length":7,"rects":[[87.52681732177734,86.81304931640625,49.519615173339844,12.5]],"start":0,"text":"2. 指针函数"}],"type":5,"uuid":"1459a419062d94ed9e2efa420c318d41"}],"page":40,"rect":[0,164.91998291015625,1,165.91998291015625],"title":"函数指针和指针函数有什么区别？","type":8,"uuid":"98a467584b6022e445f36e26c7ba984b"},{"date":"2023-07-26 16:45:13","docid":0,"id":190,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 14:37:45","docid":0,"fillcolor":"fffeeb73","id":61,"markups":[{"date":"2023-07-26 14:38:02","docid":0,"fillcolor":"fffeeb73","id":62,"originaltext":"指针\n内存访问偏移量为4个字节","page":42,"textblocks":[{"first":[75.52122497558594,132.39556884765625,9.753860473632812,13.5],"last":[85.27508544921875,132.39556884765625,9.753860473632812,13.5],"length":2,"rects":[[75.52122497558594,132.39556884765625,19.507720947265625,13.5]],"start":198,"text":"指针"},{"first":[368.13726806640625,132.39556884765625,9.753875732421875,13.5],"last":[471.2551574707031,132.39556884765625,9.753875732421875,13.5],"length":12,"rects":[[368.13726806640625,132.39556884765625,112.87176513671875,13.5]],"start":228,"text":"内存访问偏移量为4个字节"}],"type":5,"uuid":"b704f7e8c80d8a1aae84f947f08c0b01"},{"date":"2023-07-26 14:39:01","docid":0,"fillcolor":"fffeeb73","id":63,"originaltext":"数组保存的数据。数组名表示的是第一个元素的地址，内存偏移量是保存数据类型的内存偏移量；只有对数组名取地址（&数组名）时数组名才表示整个数组","page":42,"textblocks":[{"first":[75.52122497558594,171.66070556640625,9.753860473632812,12.5],"last":[297.2265930175781,186.6666259765625,9.753875732421875,12.5],"length":70,"rects":[[75.52122497558594,171.66070556640625,438.92408752441406,12.5],[75.52122497558594,186.6666259765625,231.45924377441406,12.5]],"start":266,"text":"数组保存的数据。数组名表示的是第一个元素的地址，内存偏移量是保存数据类型的内存偏移量；只有\n对数组名取地址（&数组名）时数组名才表示整个数组"}],"type":5,"uuid":"c1aaec30799134fe2dce5b302b261305"}],"originaltext":"1. 数据保存方面","page":42,"textblocks":[{"first":[87.52598571777344,110.88665771484375,5.5792083740234375,12.5],"last":[146.79946899414062,110.88665771484375,9.753860473632812,12.5],"length":9,"rects":[[87.52598571777344,110.88665771484375,69.02734375,12.5]],"start":188,"text":"1. 数据保存方面"}],"type":5,"uuid":"2ba808f1b726ed5ce5f58fae1943b0ac"}],"page":42,"rect":[0,83.91998291015625,1,84.91998291015625],"title":"数组名和指针的区别与联系是什么？","type":8,"uuid":"ef50fb6df34bd71f5ba2c081484c56fc"},{"date":"2023-07-26 16:45:13","docid":0,"id":191,"linecolor":"ff59c6ff","page":42,"rect":[0,361.91998291015625,1,362.91998291015625],"title":"指针进行强制类型转换后与地址进行加法运算，结果是什么？","type":8,"uuid":"b5c1b0c129770861b3637d7e23b384eb"},{"date":"2023-07-26 16:45:13","docid":0,"id":192,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 14:39:47","docid":0,"fillcolor":"fffeeb73","id":65,"originaltext":"1. 指针常量","page":43,"textblocks":[{"first":[87.52598571777344,55.9366455078125,5.5792083740234375,12.5],"last":[127.2917251586914,55.9366455078125,9.753868103027344,12.5],"length":7,"rects":[[87.52598571777344,55.9366455078125,49.51960754394531,12.5]],"start":27,"text":"1. 指针常量"}],"type":5,"uuid":"5303c6ddd45ea573a61598cfa42a310c"},{"date":"2023-07-26 14:39:49","docid":0,"fillcolor":"fffeeb73","id":66,"originaltext":"2. 常量指针","page":43,"textblocks":[{"first":[87.52601623535156,155.48138427734375,5.5792083740234375,13.5],"last":[127.29175567626953,155.48138427734375,9.753868103027344,13.5],"length":7,"rects":[[87.52601623535156,155.48138427734375,49.51960754394531,13.5]],"start":96,"text":"2. 常量指针"}],"type":5,"uuid":"8e7174a729faa4d09f4a6b3409bb6252"},{"date":"2023-07-26 14:39:51","docid":0,"fillcolor":"fffeeb73","id":67,"originaltext":"3. 指向常量的常量指针","page":43,"textblocks":[{"first":[87.52601623535156,256.27825927734375,5.5792083740234375,13.5],"last":[176.06109619140625,256.27825927734375,9.753860473632812,13.5],"length":12,"rects":[[87.52601623535156,256.27825927734375,98.2889404296875,13.5]],"start":146,"text":"3. 指向常量的常量指针"}],"type":5,"uuid":"fb3ab860883d519faea53174ddc9f7b2"}],"page":43,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"指针常量，常量指针，指向常量的常量指针有什么区别？","type":8,"uuid":"855d48f41a4fec8eb34f9d13a39d9b86"},{"date":"2023-07-26 16:45:13","docid":0,"id":193,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 14:48:29","docid":0,"fillcolor":"fffeeb73","id":69,"markups":[{"date":"2023-07-26 14:48:34","docid":0,"fillcolor":"fffeeb73","id":70,"originaltext":"1. 都是地址的概念，指针指向某一内存、它的内容是所指内存的地址；引用则是某块内存的别名。","page":43,"textblocks":[{"first":[87.52599334716797,407.8448486328125,5.5792083740234375,12.5],"last":[497.93878173828125,407.8448486328125,9.753875732421875,12.5],"length":45,"rects":[[87.52599334716797,407.8448486328125,420.16666412353516,12.5]],"start":240,"text":"1. 都是地址的概念，指针指向某一内存、它的内容是所指内存的地址；引用则是某块内存的别名。"}],"type":5,"uuid":"8f36ad3568999897ec24ba7fa547d677"},{"date":"2023-07-26 14:48:42","docid":0,"fillcolor":"fffeeb73","id":71,"originaltext":"2. 从内存分配上看：两者都占内存，程序为指针会分配内存，一般是4个字节；而引用的本质是指针常量，指向对象不能变，但指向对象的值可以变。两者都是地址概念，所以本身都会占用内存。","page":43,"textblocks":[{"first":[87.5260009765625,422.8507995605469,5.5792083740234375,12.5],"last":[497.93878173828125,437.85675048828125,9.753875732421875,12.5],"length":89,"rects":[[87.5260009765625,422.8507995605469,425.745849609375,12.5],[98.03015899658203,437.85675048828125,409.6624984741211,12.5]],"start":286,"text":"2. 从内存分配上看：两者都占内存，程序为指针会分配内存，一般是4个字节；而引用的本质是指针\n常量，指向对象不能变，但指向对象的值可以变。两者都是地址概念，所以本身都会占用内存。"}],"type":5,"uuid":"773b509e670060cac9bed5ff89a36ca8"}],"originaltext":"相同","page":43,"textblocks":[{"first":[75.521240234375,386.3359375,9.753860473632812,11.5],"last":[85.27510070800781,386.3359375,9.753860473632812,11.5],"length":2,"rects":[[75.521240234375,386.3359375,19.507720947265625,11.5]],"start":237,"text":"相同"}],"type":5,"uuid":"02fd88c8fda10b7b8c8b63ef08e0673e"},{"date":"2023-07-26 14:49:12","docid":0,"fillcolor":"fffeeb73","id":72,"markups":[{"date":"2023-07-26 14:49:17","docid":0,"fillcolor":"fffeeb73","id":73,"originaltext":"1. 指针是实体，而引用是别名。","page":43,"textblocks":[{"first":[87.52599334716797,482.6249084472656,5.5792083740234375,13.5],"last":[215.07656860351562,482.6249084472656,9.753860473632812,13.5],"length":16,"rects":[[87.52599334716797,482.6249084472656,137.30443572998047,13.5]],"start":379,"text":"1. 指针是实体，而引用是别名。"}],"type":5,"uuid":"c14806181bbcc178bbeb4e4136319202"},{"date":"2023-07-26 14:49:24","docid":0,"fillcolor":"fffeeb73","id":74,"originaltext":"2. 指针和引用的自增（++）运算符意义不同，指针是对内存地址自增，而引用是对值的自增。","page":43,"textblocks":[{"first":[87.5260009765625,498.630859375,5.5792083740234375,12.5],"last":[479.8355712890625,498.630859375,9.753875732421875,12.5],"length":44,"rects":[[87.5260009765625,498.630859375,402.0634460449219,12.5]],"start":396,"text":"2. 指针和引用的自增（++）运算符意义不同，指针是对内存地址自增，而引用是对值的自增。"}],"type":5,"uuid":"0c365d1e2b8b5b759f8e1b81ef56a2c4"},{"date":"2023-07-26 14:49:31","docid":0,"fillcolor":"fffeeb73","id":75,"originaltext":"3. 引用使用时无需解引用(*)，指针需要解引用；","page":43,"textblocks":[{"first":[87.5260009765625,513.6368408203125,5.5792083740234375,12.5],"last":[284.7582092285156,513.6368408203125,9.753875732421875,12.5],"length":25,"rects":[[87.5260009765625,513.6368408203125,206.986083984375,12.5]],"start":441,"text":"3. 引用使用时无需解引用(*)，指针需要解引用；"}],"type":5,"uuid":"989377a333055dd68b3d90251287f1a1"},{"date":"2023-07-26 14:50:47","docid":0,"fillcolor":"fffeeb73","id":76,"originaltext":"4. 引用只能在定义时被初始化一次，之后不可变；指针可变。","page":43,"textblocks":[{"first":[87.5260009765625,528.6427612304688,5.5792083740234375,12.5],"last":[341.8768615722656,528.6427612304688,9.753875732421875,12.5],"length":29,"rects":[[87.5260009765625,528.6427612304688,264.104736328125,12.5]],"start":489,"text":"4. 引用只能在定义时被初始化一次，之后不可变；指针可变。"}],"type":5,"uuid":"0adcf700b5faa136054d688699adf34a"},{"date":"2023-07-26 14:50:56","docid":0,"fillcolor":"fffeeb73","id":79,"originaltext":"5. 引用不能为空，指针可以为空","page":43,"textblocks":[{"first":[87.5260009765625,543.648681640625,5.5792083740234375,12.5],"last":[215.07656860351562,543.648681640625,9.753860473632812,12.5],"length":16,"rects":[[87.5260009765625,543.648681640625,137.30442810058594,12.5]],"start":519,"text":"5. 引用不能为空，指针可以为空"}],"type":5,"uuid":"3defe09eb564c5d493a30b2c60e03ca9"},{"date":"2023-07-26 14:51:13","docid":0,"fillcolor":"fffeeb73","id":80,"originaltext":"6. “sizeof 引用”得到的是所指向的变量(对象)的大小，而“sizeof 指针”得到的是指针本身的大小，在32位系统指针变量一般占用4字节内存。","page":43,"textblocks":[{"first":[87.5260009765625,558.6546630859375,5.5792083740234375,12.5],"last":[249.9173583984375,573.66064453125,9.753875732421875,12.5],"length":77,"rects":[[87.5260009765625,558.6546630859375,430.5057373046875,12.5],[98.03015899658203,573.66064453125,161.64107513427734,12.5]],"start":537,"text":"6. “sizeof 引用”得到的是所指向的变量(对象)的大小，而“sizeof 指针”得到的是指针本身的大小，在32\n位系统指针变量一般占用4字节内存。"}],"type":5,"uuid":"e3bc20b77e94413ebc00e73d4218c4c0"}],"originaltext":"区别","page":43,"textblocks":[{"first":[75.521240234375,461.1159973144531,9.753860473632812,12.5],"last":[85.27510070800781,461.1159973144531,9.753860473632812,12.5],"length":2,"rects":[[75.521240234375,461.1159973144531,19.507720947265625,12.5]],"start":376,"text":"区别"}],"type":5,"uuid":"0ed0b54887721f072e00d386fcdaec9f"}],"page":43,"rect":[0,357.91998291015625,1,358.91998291015625],"title":"指针和引用的异同是什么？如何相互转换？","type":8,"uuid":"aa9258da8979817c196fa4d21be83515"},{"date":"2023-07-26 16:45:13","docid":0,"id":194,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 14:52:26","docid":0,"fillcolor":"fffeeb73","id":82,"originaltext":"1. 野指针是指向不可用内存的指针，当指针被创建时，指针不可能自动指向NULL，这时，默认值是随机的，此时的指针成为野指针。","page":44,"textblocks":[{"first":[87.52598571777344,272.59881591796875,5.5792083740234375,13.5],"last":[234.58428955078125,287.604736328125,9.753860473632812,13.5],"length":63,"rects":[[87.52598571777344,272.59881591796875,425.2386016845703,13.5],[98.03014373779297,287.604736328125,146.3080062866211,13.5]],"start":187,"text":"1. 野指针是指向不可用内存的指针，当指针被创建时，指针不可能自动指向NULL，这时，默认值是\n随机的，此时的指针成为野指针。"}],"type":5,"uuid":"e3f365569bb25df59e30f26fdce3fab7"},{"date":"2023-07-26 14:52:34","docid":0,"fillcolor":"fffeeb73","id":83,"originaltext":"2. 当指针被free或delete释放掉时，如果没有把指针设置为NULL，则会产生野指针，因为释放掉的仅仅是指针指向的内存，并没有把指针本身释放掉。","page":44,"textblocks":[{"first":[87.52598571777344,303.3106689453125,5.5792083740234375,13.5],"last":[302.8613586425781,317.61663818359375,9.753875732421875,13.5],"length":76,"rects":[[87.52598571777344,303.3106689453125,432.7588653564453,13.5],[98.03014373779297,317.61663818359375,214.58509063720703,13.5]],"start":251,"text":"2. 当指针被free或delete释放掉时，如果没有把指针设置为NULL，则会产生野指针，因为释放掉的仅\n仅是指针指向的内存，并没有把指针本身释放掉。"}],"type":5,"uuid":"a78d59a850bf1f386a49fdf31bf61113"}],"page":44,"rect":[0,246.91998291015625,1,247.91998291015625],"title":"野指针是什么？","type":8,"uuid":"9c5777f67ae57d3b9b1c049d85406f21"},{"date":"2023-07-26 16:45:13","docid":0,"id":195,"linecolor":"ff59c6ff","page":44,"rect":[0,357.91998291015625,1,358.91998291015625],"title":"如何避免野指针？","type":8,"uuid":"b75ac9fa37bab26f92e4c19070597a14"},{"date":"2023-07-26 16:45:13","docid":0,"id":196,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 14:56:40","docid":0,"fillcolor":"fffeeb73","id":85,"markups":[{"date":"2023-07-26 14:57:04","docid":0,"fillcolor":"fffeeb73","id":86,"originaltext":"，C++11中引入了智能指针的概念，方便管理堆内存。使用普通指针，容易造成堆内存泄露（忘记释放），二次释放，程序发生异常时内存泄露等问题等，使用智能指针能更好的管理堆内存","page":45,"textblocks":[{"first":[387.6449890136719,92.57843017578125,9.753875732421875,13.5],"last":[309.6140441894531,122.59033203125,9.753875732421875,13.5],"length":87,"rects":[[387.6449890136719,92.57843017578125,126.00033569335938,13.5],[75.521240234375,107.5843505859375,438.924072265625,13.5],[75.521240234375,122.59033203125,243.8466796875,13.5]],"start":124,"text":"，C++11中引入了智能指针的\n概念，方便管理堆内存。使用普通指针，容易造成堆内存泄露（忘记释放），二次释放，程序发生异常\n时内存泄露等问题等，使用智能指针能更好的管理堆内存"}],"type":5,"uuid":"b9b671812652f83dfc240ee2271fe9ac"},{"date":"2023-07-26 14:57:28","docid":0,"fillcolor":"fffeeb73","id":87,"originaltext":"为了解决循环引用导致的内存泄漏，引入了弱指针weak_ptr，weak_ptr的构造函数不会修改引用计数的值，从而不会对对象的内存进行管理，其类似一个普通指针，但是不会指向引用计数的共享内存","page":45,"textblocks":[{"first":[78.05724334716797,174.31222534179688,9.753860473632812,13.5087890625],"last":[494.9559020996094,189.37548828125,9.753875732421875,13.5],"length":96,"rects":[[78.05724334716797,174.31222534179688,435.02271270751953,13.5087890625],[75.53958129882812,189.37548828125,429.1701965332031,13.5]],"start":230,"text":"为了解决循环引用导致的内存泄漏，引入了弱指针weak_ptr，weak_ptr的构造函数不会修改引用计\n数的值，从而不会对对象的内存进行管理，其类似一个普通指针，但是不会指向引用计数的共享内存"}],"type":5,"uuid":"169798d43f8b1b40c52c856fd4faa5be"}],"originaltext":"智能指针是一个类，用来存储指针（指向动态分配对象的指针）","page":45,"textblocks":[{"first":[75.521240234375,56.06365966796875,9.753860473632812,12.5],"last":[338.8756408691406,56.06365966796875,9.753875732421875,12.5],"length":28,"rects":[[75.521240234375,56.06365966796875,273.1082763671875,12.5]],"start":15,"text":"智能指针是一个类，用来存储指针（指向动态分配对象的指针）"}],"type":5,"uuid":"7bfc98483c7af4d1390bf1fea756ce45"}],"page":45,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"C++中的智能指针是什么？","type":8,"uuid":"1edc8629bd3a63828dc00fbde98826ac"},{"date":"2023-07-26 16:45:13","docid":0,"id":197,"linecolor":"ff59c6ff","page":45,"rect":[0,147.91998291015625,1,148.91998291015625],"title":"智能指针的内存泄漏如何解决？","type":8,"uuid":"b4ed4911ac48ed0bcdd7af43ec7357cc"}],"page":39,"rect":[0,303.91998291015625,1,304.91998291015625],"title":"指针","type":8,"uuid":"95d0ab26fff594986ce964746795846a"},{"date":"2023-07-26 16:45:13","docid":0,"id":198,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 14:59:04","docid":0,"fillcolor":"fffeeb73","id":89,"markups":[{"date":"2023-07-26 15:01:09","docid":0,"fillcolor":"fffeeb73","id":90,"originaltext":"编译程序时，只要遇到#error就会生成一个编译错误提示消息，并停止编译","page":45,"textblocks":[{"first":[202.66363525390625,416.97760009765625,9.753860473632812,12.5],"last":[75.521240234375,434.9835510253906,9.753860473632812,8.5],"length":37,"rects":[[202.66363525390625,416.97760009765625,312.4613037109375,12.5],[75.521240234375,434.9835510253906,9.753860473632812,8.5]],"start":400,"text":"编译程序时，只要遇到#error就会生成一个编译错误提示消息，并停止编\n译"}],"type":5,"uuid":"5e3de2e890963eaa8f0ff3b1317cb284"}],"originaltext":"预处理器标识#error的目的是什么？","page":45,"textblocks":[{"first":[75.521240234375,394.168701171875,9.753860473632812,13.5],"last":[222.17660522460938,394.168701171875,9.753860473632812,13.5],"length":19,"rects":[[75.521240234375,394.168701171875,156.4092254638672,13.5]],"start":364,"text":"预处理器标识#error的目的是什么？"}],"type":5,"uuid":"011d94514d50c69dc1735a81451e6ace"},{"date":"2023-07-26 15:01:21","docid":0,"fillcolor":"fffeeb73","id":91,"markups":[{"date":"2023-07-26 15:02:31","docid":0,"fillcolor":"fffeeb73","id":92,"originaltext":"1. define只是用来进行单纯的文本替换， define常量的生命周期止于编译期，不分配内存空间，它存在于程序的代码段，在实际程序中，它只是一个常数；而 const常量存在于程序的数据段，并在堆栈中分配了空间","page":46,"textblocks":[{"first":[87.52601623535156,81.84880065917969,5.5792083740234375,13.5],"last":[156.55410766601562,111.86064147949219,9.753860473632812,13.5],"length":108,"rects":[[87.52601623535156,81.84880065917969,431.2806854248047,13.5],[98.03092193603516,96.85472106933594,417.3094711303711,13.5],[98.03092193603516,111.86064147949219,68.27704620361328,13.5]],"start":101,"text":"1. define只是用来进行单纯的文本替换， define常量的生命周期止于编译期，不分配内存空间，它存\n在于程序的代码段，在实际程序中，它只是一个常数；而 const常量存在于程序的数据段，并在堆\n栈中分配了空间"}],"type":5,"uuid":"4b0397303a65e962e52dbad87656261b"},{"date":"2023-07-26 15:03:25","docid":0,"fillcolor":"fffeeb73","id":94,"originaltext":"2. const常量有数据类型，而 define常量没有数据类型。编译器可以对 const常量进行类型安全检査，如类型、语句结构等，而 define不行。","page":46,"textblocks":[{"first":[87.52676391601562,126.86656188964844,5.5792083740234375,13.5],"last":[275.553466796875,141.8724822998047,9.753875732421875,13.5],"length":78,"rects":[[87.52676391601562,126.86656188964844,415.369140625,13.5],[98.03092193603516,141.8724822998047,187.27642059326172,13.5]],"start":240,"text":"2. const常量有数据类型，而 define常量没有数据类型。编译器可以对 const常量进行类型安全检\n査，如类型、语句结构等，而 define不行。"}],"type":5,"uuid":"41b7b1d89e5067ede746837f246e2a84"}],"originaltext":"定义常量谁更好？# define还是 const？","page":45,"textblocks":[{"first":[75.52125549316406,728.0732421875,9.753860473632812,13.5],"last":[237.7294921875,728.0732421875,9.753860473632812,13.5],"length":25,"rects":[[75.52125549316406,728.0732421875,171.96209716796875,13.5]],"start":624,"text":"定义常量谁更好？# define还是 const？"}],"type":5,"uuid":"de4c0df4c4c0e37d10df9064ad4aa27b"},{"date":"2023-07-26 16:45:13","docid":0,"id":199,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 15:10:58","docid":0,"fillcolor":"fffeeb73","id":96,"originaltext":"typedef用来定义类型的别名，这些类型不仅包含内部类型（int、char等），还包括自定义类型（如 struct），可以起到使类型易于记忆的功能。","page":46,"textblocks":[{"first":[78.06656646728516,544.1397705078125,3.4431304931640625,14.5],"last":[257.7433776855469,559.9457397460938,9.75390625,13.5],"length":76,"rects":[[78.06656646728516,544.1397705078125,429.92537689208984,14.5],[75.53055572509766,559.9457397460938,191.96672821044922,13.5]],"start":1162,"text":"typedef用来定义类型的别名，这些类型不仅包含内部类型（int、char等），还包括自定义类型（如 \nstruct），可以起到使类型易于记忆的功能。"}],"type":5,"uuid":"076fcabc14551d689cc8190e9bf33832"}],"page":46,"rect":[0,210.91998291015625,1,211.91998291015625],"title":"typedef和 define有什么区别？","type":8,"uuid":"e6d627cc4d064a425d2c28199b20eb1a"},{"date":"2023-07-26 16:45:13","docid":0,"id":200,"linecolor":"ff59c6ff","page":47,"rect":[0,641.9199829101562,1,642.9199829101562],"title":"如何使用 define声明个常数，用以表明1年中有多少秒（忽略闰年问题）","type":8,"uuid":"1e8a697796ff2589b927973029f9140e"},{"date":"2023-07-26 16:45:13","docid":0,"id":201,"linecolor":"ff59c6ff","page":47,"rect":[0,706.9199829101562,1,707.9199829101562],"title":"# include< filename. h>和# nclude\" filename. h\"有什么区别？","type":8,"uuid":"ddf3dd1e2c067bcf2b5f7548083d3e6e"},{"date":"2023-07-26 16:45:13","docid":0,"id":202,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:59:02","docid":0,"fillcolor":"fffeeb73","id":1102,"originaltext":" 通过头文件来调用库功能","page":48,"textblocks":[{"first":[95.37260437011719,77.524658203125,2.5360031127929688,13.5],"last":[195.56881713867188,77.524658203125,9.753860473632812,13.5],"length":12,"rects":[[95.37260437011719,77.524658203125,109.9500732421875,13.5]],"start":33,"text":" 通过头文件来调用库功能"}],"type":5,"uuid":"d2eba0640f615bb428e524be62bf6080"},{"date":"2023-07-26 16:58:39","docid":0,"fillcolor":"fffeeb73","id":1101,"originaltext":" 头文件能加强类型安全检查","page":48,"textblocks":[{"first":[95.37261199951172,122.54248046875,2.5360031127929688,13.5],"last":[205.32269287109375,122.54248046875,9.753860473632812,13.5],"length":13,"rects":[[95.37261199951172,122.54248046875,119.70394134521484,13.5]],"start":150,"text":" 头文件能加强类型安全检查"}],"type":5,"uuid":"44f38513c0919744fe02023a28e367e3"}],"page":48,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"头文件的作用有哪些？","type":8,"uuid":"fb870d8ccbedc30abcaa5fed1215d8e2"},{"date":"2023-07-26 16:45:13","docid":0,"id":203,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 15:30:44","docid":0,"fillcolor":"fffeeb73","id":98,"originaltext":"不可行，如果在头文件中定义静态变量，会造成资源浪费的问题，同时也可能引起程序错误。因为如果在使用了该头文件的每个C语言文件中定义静态变量，按照编译的步骤，在每个头文件中都会单独存在一个静态变量，从而会引起空间浪费或者程序错误所以，不推荐在头文件中定义任何变量，当然也包括静态变量。","page":48,"textblocks":[{"first":[75.521240234375,188.56854248046875,9.753860473632812,13.5],"last":[114.53668975830078,234.28636169433594,9.753860473632812,13.5],"length":143,"rects":[[75.521240234375,188.56854248046875,438.924072265625,13.5],[75.521240234375,203.57452392578125,435.312744140625,13.5],[75.521240234375,218.5804443359375,438.924072265625,13.5],[75.521240234375,234.28636169433594,48.769309997558594,13.5]],"start":243,"text":"不可行，如果在头文件中定义静态变量，会造成资源浪费的问题，同时也可能引起程序错误。因为如果\n在使用了该头文件的每个C语言文件中定义静态变量，按照编译的步骤，在每个头文件中都会单独存在\n一个静态变量，从而会引起空间浪费或者程序错误所以，不推荐在头文件中定义任何变量，当然也包括\n静态变量。"}],"type":5,"uuid":"6cf9304d856877653a08aad864fbff35"}],"page":48,"rect":[0,162.91998291015625,1,163.91998291015625],"title":"在头文件中定义静态变量是否可行，为什么?","type":8,"uuid":"80229c40654011870f2f7c4c58771d21"},{"date":"2023-07-26 16:45:13","docid":0,"id":204,"linecolor":"ff59c6ff","page":48,"rect":[0,258.91998291015625,1,259.91998291015625],"title":"写一个\"标准\"宏MIN ，这个宏输入两个参数并返回较小的一个？","type":8,"uuid":"15d64935f2ed5878d1b6e0f6d389a0b4"},{"date":"2023-07-26 16:45:13","docid":0,"id":205,"linecolor":"ff59c6ff","page":48,"rect":[0,322.91998291015625,1,323.91998291015625],"title":"不使用流程控制语句，如何打印出1~1000的整数？","type":8,"uuid":"f080f15ad6ec7dfd8e52291e23e6655b"}],"page":45,"rect":[0,363.91998291015625,1,364.91998291015625],"title":"预处理","type":8,"uuid":"3eaf7651ec2585858c1df62b8fc99bc1"},{"date":"2023-07-26 16:45:13","docid":0,"id":206,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":207,"linecolor":"ff59c6ff","page":49,"rect":[0,194.91998291015625,1,195.91998291015625],"title":"全局变量和局部变量的区别是什么?","type":8,"uuid":"b95ff9f48699948992bfa83962605cb2"},{"date":"2023-07-26 16:45:13","docid":0,"id":208,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:42:30","docid":0,"fillcolor":"fffeeb73","id":100,"originaltext":"可以，在不同的C文件中以static形式来声明同名全局变量。","page":49,"textblocks":[{"first":[75.521240234375,347.9571838378906,9.753860473632812,12.5],"last":[320.33355712890625,347.9571838378906,9.753875732421875,12.5],"length":30,"rects":[[75.521240234375,347.9571838378906,254.56619262695312,12.5]],"start":261,"text":"可以，在不同的C文件中以static形式来声明同名全局变量。"}],"type":5,"uuid":"1c0ec6dfa155ce7807309e27c2131e20"},{"date":"2023-07-26 16:43:07","docid":0,"fillcolor":"fffeeb73","id":103,"originaltext":"可以在不同的C文件中声明同名的全局变量，前提是其中只能有一个C文件中对此变量赋初值，此时连接不会出错","page":49,"textblocks":[{"first":[75.521240234375,370.91644287109375,9.753860473632812,13.5],"last":[104.78280639648438,387.2223815917969,9.753860473632812,12.5],"length":51,"rects":[[75.521240234375,370.91644287109375,441.5260009765625,13.5],[75.52122497558594,387.2223815917969,39.01544189453125,12.5]],"start":292,"text":"可以在不同的C文件中声明同名的全局变量，前提是其中只能有一个C文件中对此变量赋初值，此时连接\n不会出错"}],"type":5,"uuid":"671559497720ece83a49946d0d071880"}],"page":49,"rect":[0,320.91998291015625,1,321.91998291015625],"title":"全局变量可不可以定义在可被多个.C文件包含的头文件中？为什么？","type":8,"uuid":"93e6e604158aea409a03759470bdfbef"},{"date":"2023-07-26 16:45:13","docid":0,"id":209,"linecolor":"ff59c6ff","markups":[{"date":"2023-08-11 14:19:54","docid":0,"fillcolor":"fffeeb73","id":1105,"originaltext":"能，局部会屏蔽全局。","page":49,"textblocks":[{"first":[75.521240234375,436.9425964355469,9.753860473632812,13.5],"last":[163.3060302734375,436.9425964355469,9.753860473632812,13.5],"length":10,"rects":[[75.521240234375,436.9425964355469,97.53865051269531,13.5]],"start":361,"text":"能，局部会屏蔽全局。"}],"type":5,"uuid":"362955c6e17e83cbd60055c98198a1bd"}],"page":49,"rect":[0,409.91998291015625,1,410.91998291015625],"title":"局部变量能否和全局变量重名？","type":8,"uuid":"fdf9874b2a29cf90b7b7acf9100ec4d2"}],"page":49,"rect":[0,164.91998291015625,1,165.91998291015625],"title":"变量","type":8,"uuid":"a77cbb4db5752bbe686e38928a6f7958"},{"date":"2023-07-26 16:45:13","docid":0,"id":210,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":211,"linecolor":"ff59c6ff","markups":[{"date":"2023-08-11 14:32:05","docid":0,"fillcolor":"fffeeb73","id":1107,"originaltext":"attribute可以设置函数属性（Function Attribute）、变量属性（Variable Attribute）和类型属性（Type Attribute）。","page":49,"textblocks":[{"first":[75.521240234375,728.1404418945312,5.891334533691406,12.5],"last":[159.71060180664062,742.346435546875,9.753860473632812,13.5],"length":85,"rects":[[75.521240234375,728.1404418945312,421.2257995605469,12.5],[75.521240234375,742.346435546875,93.94322204589844,13.5]],"start":520,"text":"attribute可以设置函数属性（Function Attribute）、变量属性（Variable Attribute）和类型属性\n（Type Attribute）。"}],"type":5,"uuid":"193d9f95d410dd8c68d000bbdf5badb1"}],"page":49,"rect":[0,700.9199829101562,1,701.9199829101562],"title":"请写个函数在main函数执行前先运行","type":8,"uuid":"b225a92ab7c4a06a77d466151d79086e"},{"date":"2023-07-26 16:45:13","docid":0,"id":212,"linecolor":"ff59c6ff","markups":[{"date":"2023-08-11 14:41:01","docid":0,"fillcolor":"fffeeb73","id":1109,"originaltext":"将可能会被继承的父类的析构函数设置为虚函数，可以保证当我们new一个子类，然后使用基类指针指向该子类对象，释放基类指针时可以释放掉子类的空间，防止内存泄漏。","page":50,"textblocks":[{"first":[75.521240234375,634.871337890625,9.753860473632812,13.5],"last":[377.8911437988281,650.17724609375,9.753875732421875,12.5],"length":79,"rects":[[75.521240234375,634.871337890625,438.465576171875,13.5],[75.521240234375,650.17724609375,312.123779296875,12.5]],"start":26,"text":"将可能会被继承的父类的析构函数设置为虚函数，可以保证当我们new一个子类，然后使用基类指针指\n向该子类对象，释放基类指针时可以释放掉子类的空间，防止内存泄漏。"}],"type":5,"uuid":"c8b7b1d2b26809a9eb51eb61228c295c"}],"page":50,"rect":[0,607.9199829101562,1,608.9199829101562],"title":"为什么析构函数必须是虚函数？","type":8,"uuid":"53dc85549ade4027f9b42d3b362f16de"},{"date":"2023-07-26 16:45:13","docid":0,"id":213,"linecolor":"ff59c6ff","markups":[{"date":"2023-08-11 14:40:52","docid":0,"fillcolor":"fffeeb73","id":1108,"originaltext":"C++默认的析构函数不是虚函数是因为虚函数需要额外的虚函数表和虚表指针，占用额外的内存。而对于不会被继承的类来说，其析构函数如果是虚函数，就会浪费内存。因此C++默认的析构函数不是虚函数，而是只有当需要当作父类时，设置为虚函数。","page":50,"textblocks":[{"first":[75.521240234375,700.8975219726562,6.154685974121094,13.5],"last":[280.3524475097656,730.9093627929688,9.753875732421875,13.5],"length":116,"rects":[[75.521240234375,700.8975219726562,436.72344970703125,13.5],[75.521240234375,715.9034423828125,436.7232666015625,13.5],[75.521240234375,730.9093627929688,214.5850830078125,13.5]],"start":127,"text":"C++默认的析构函数不是虚函数是因为虚函数需要额外的虚函数表和虚表指针，占用额外的内存。而对\n于不会被继承的类来说，其析构函数如果是虚函数，就会浪费内存。因此C++默认的析构函数不是虚函\n数，而是只有当需要当作父类时，设置为虚函数。"}],"type":5,"uuid":"667b4d42fee9570b0738488e068d733d"}],"page":50,"rect":[0,673.9199829101562,1,674.9199829101562],"title":"为什么C++默认的析构函数不是虚函数？","type":8,"uuid":"5c588d63e5da14140f8dddda50ddfa5f"},{"date":"2023-07-26 16:45:13","docid":0,"id":214,"linecolor":"ff59c6ff","page":51,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"C++中析构函数的作用？","type":8,"uuid":"9ce049dcf2cbb5542c60b8c213a362ab"},{"date":"2023-07-26 16:45:13","docid":0,"id":215,"linecolor":"ff59c6ff","markups":[{"date":"2023-08-11 16:34:13","docid":0,"fillcolor":"fffeeb73","id":1110,"originaltext":"静态函数在编译的时候就已经确定运行时机，虚函数在运行的时候动态绑定。虚函数因为用了虚函数表机制，调用的时候会增加一次内存开销。","page":51,"textblocks":[{"first":[75.521240234375,158.5087890625,9.753860473632812,13.5],"last":[241.33697509765625,173.51470947265625,9.753860473632812,13.5],"length":64,"rects":[[75.521240234375,158.5087890625,438.924072265625,13.5],[75.521240234375,173.51470947265625,175.56959533691406,13.5]],"start":158,"text":"静态函数在编译的时候就已经确定运行时机，虚函数在运行的时候动态绑定。虚函数因为用了虚函数表\n机制，调用的时候会增加一次内存开销。"}],"type":5,"uuid":"b646b377cfb153567fd59931119d23dd"}],"page":51,"rect":[0,132.91998291015625,1,133.91998291015625],"title":"静态函数和虚函数的区别？","type":8,"uuid":"5085a9abe2a6dc8613c765215ff257e7"},{"date":"2023-07-26 16:45:13","docid":0,"id":216,"linecolor":"ff59c6ff","page":51,"rect":[0,198.91998291015625,1,199.91998291015625],"title":"重载和覆盖有什么区别？","type":8,"uuid":"5dff2bca8f2f3b2a54b6a38df3fd8638"},{"date":"2023-07-26 16:45:13","docid":0,"id":217,"linecolor":"ff59c6ff","page":51,"rect":[0,294.91998291015625,1,295.91998291015625],"title":"虚函数表具体是怎样实现运行时多态的?","type":8,"uuid":"b6b6e4bc47bb2bfcb3ff50de3b430c09"},{"date":"2023-07-26 16:45:13","docid":0,"id":218,"linecolor":"ff59c6ff","page":51,"rect":[0,444.91998291015625,1,445.91998291015625],"title":"C语言是怎么进行函数调用的？","type":8,"uuid":"be76197287181215c9f8341c8f20f10e"},{"date":"2023-07-26 16:45:13","docid":0,"id":219,"linecolor":"ff59c6ff","page":52,"rect":[0,418.91998291015625,1,419.91998291015625],"title":"请你说一说select","type":8,"uuid":"6df18d1e7fefcb18bbff7ba8d9a0a146"},{"date":"2023-07-26 16:45:13","docid":0,"id":220,"linecolor":"ff59c6ff","page":53,"rect":[0,182.91998291015625,1,183.91998291015625],"title":"请你说说fork,wait,exec函数","type":8,"uuid":"9e349630fc9cf3e72a6ff1add995c7bf"}],"page":49,"rect":[0,670.9199829101562,1,671.9199829101562],"title":"函数","type":8,"uuid":"925b078d97472ccb5cd8848a9fb73675"},{"date":"2023-07-26 16:45:13","docid":0,"id":221,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":222,"linecolor":"ff59c6ff","page":53,"rect":[0,323.91998291015625,1,324.91998291015625],"title":"以下代码表示什么意思?","type":8,"uuid":"a0a8ca9ceef46e24efaf5e8087d6b4d8"},{"date":"2023-07-26 16:45:13","docid":0,"id":223,"linecolor":"ff59c6ff","markups":[{"date":"2023-08-11 18:25:14","docid":0,"fillcolor":"fffeeb73","id":1112,"originaltext":"可以，因为下标只是给出了一个与当前地址的偏移量而已，只要根据这个偏移量能定位得到目标地址即可","page":53,"textblocks":[{"first":[75.524169921875,501.79638671875,9.753860473632812,12.5],"last":[75.524169921875,516.8023071289062,9.753860473632812,12.5],"length":47,"rects":[[75.524169921875,501.79638671875,438.924072265625,12.5],[75.524169921875,516.8023071289062,9.753860473632812,12.5]],"start":649,"text":"可以，因为下标只是给出了一个与当前地址的偏移量而已，只要根据这个偏移量能定位得到目标地址即\n可"}],"type":5,"uuid":"0597865f942543f44edf3b7983ca6a9f"}],"page":53,"rect":[0,474.91998291015625,1,475.91998291015625],"title":"数组下标可以为负数吗?","type":8,"uuid":"9d51ae6717e8fba968dc4c8350da61ae"}],"page":53,"rect":[0,293.91998291015625,1,294.91998291015625],"title":"数组","type":8,"uuid":"c21ad100e2a6034b6df630e62103a5b6"},{"date":"2023-07-26 16:45:13","docid":0,"id":224,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":225,"linecolor":"ff59c6ff","page":54,"rect":[0,232.91998291015625,1,233.91998291015625],"title":"如何求解整型数的二进制表示中1的个数？","type":8,"uuid":"8056eba62d836d5ac3c967523924d5de"},{"date":"2023-07-26 16:45:13","docid":0,"id":226,"linecolor":"ff59c6ff","page":54,"rect":[0,685.9199829101562,1,686.9199829101562],"title":"如何求解二进制中0的个数","type":8,"uuid":"e8943c7f204281d40f9e6a757dac6e91"},{"date":"2023-07-26 16:45:13","docid":0,"id":227,"linecolor":"ff59c6ff","markups":[{"date":"2023-08-11 19:22:08","docid":0,"fillcolor":"fffeeb73","id":1113,"originaltext":" 一种用算术算法","page":55,"textblocks":[{"first":[126.68030548095703,537.7056884765625,2.5360031127929688,12.5],"last":[187.73953247070312,537.7056884765625,9.753860473632812,12.5],"length":8,"rects":[[126.68030548095703,537.7056884765625,70.8130874633789,12.5]],"start":47,"text":" 一种用算术算法"}],"type":5,"uuid":"918b57f77359833609b67e68375bf0fa"},{"date":"2023-08-11 19:22:10","docid":0,"fillcolor":"fffeeb73","id":1114,"originaltext":" 一种用^(异或)","page":55,"textblocks":[{"first":[199.88308715820312,537.7056884765625,2.5360107421875,12.5],"last":[259.3621826171875,537.7056884765625,2.88714599609375,12.5],"length":9,"rects":[[199.88308715820312,537.7056884765625,62.366241455078125,12.5]],"start":56,"text":" 一种用^(异或)"}],"type":5,"uuid":"820db9812a8ad4da543a57c7d79c13e1"}],"page":55,"rect":[0,510.91998291015625,1,511.91998291015625],"title":"交换两个变量的值，不使用第三个变量。即a=3,b=5,交换之后a=5,b=3;","type":8,"uuid":"64015b4e2337223fe325acd951a24101"},{"date":"2023-07-26 16:45:13","docid":0,"id":228,"linecolor":"ff59c6ff","page":56,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"给定一个整型变量a，写两段代码，第一个设置a的bit 3，第二个清除a 的bit 3。在以上两个操作中，要保持其它位不变。","type":8,"uuid":"9be82556891166e8294ea60ee47910ea"}],"page":54,"rect":[0,202.91998291015625,1,203.91998291015625],"title":"位操作","type":8,"uuid":"87bf9b2e555aa6b7d40639d1662614dd"},{"date":"2023-07-26 16:45:13","docid":0,"id":229,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":230,"linecolor":"ff59c6ff","markups":[{"date":"2023-08-11 20:04:45","docid":0,"fillcolor":"fffeeb73","id":1115,"originaltext":"map和set都是C++的关联容器，其底层实现都是红黑树（RB-Tree）。","page":56,"textblocks":[{"first":[75.521240234375,438.370361328125,9.578292846679688,14.5],"last":[370.0002136230469,438.370361328125,9.753875732421875,14.5],"length":38,"rects":[[75.521240234375,438.370361328125,304.23284912109375,14.5]],"start":99,"text":"map和set都是C++的关联容器，其底层实现都是红黑树（RB-Tree）。"}],"type":5,"uuid":"eb9abda0bf10c9fecd0d629e0ebaeef2"},{"date":"2023-08-29 10:53:46","docid":0,"fillcolor":"fffeeb73","id":1116,"originaltext":"set的迭代器是const的，不允许修改元素的值；map允许修改value，但不允许修改key","page":56,"textblocks":[{"first":[75.521240234375,560.7185668945312,4.652595520019531,13.5],"last":[442.12030029296875,560.7185668945312,4.91595458984375,13.5],"length":47,"rects":[[75.521240234375,560.7185668945312,371.5150146484375,13.5]],"start":318,"text":"set的迭代器是const的，不允许修改元素的值；map允许修改value，但不允许修改key"}],"type":5,"uuid":"f83f1f131351a503b45cc7774ce2ba1b"}],"page":56,"rect":[0,411.91998291015625,1,412.91998291015625],"title":"map和set有什么区别？分别又是怎么实现的？","type":8,"uuid":"ab649ea033937632c70023b408d7d7f3"},{"date":"2023-07-26 16:45:13","docid":0,"id":231,"linecolor":"ff59c6ff","page":57,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"STL的allocator有什么作用？","type":8,"uuid":"d6c614931a119986249326e14d8a22ae"},{"date":"2023-07-26 16:45:13","docid":0,"id":232,"linecolor":"ff59c6ff","page":57,"rect":[0,231.91998291015625,1,232.91998291015625],"title":"STL迭代器如何删除元素？","type":8,"uuid":"12eaf7ba6bafa3cf2b4e56ce33249b57"},{"date":"2023-07-26 16:45:13","docid":0,"id":233,"linecolor":"ff59c6ff","page":57,"rect":[0,410.91998291015625,1,411.91998291015625],"title":"STL中MAP数据如何存放的？","type":8,"uuid":"15ed601da64b5522df5fd26ca314fb06"},{"date":"2023-07-26 16:45:13","docid":0,"id":234,"linecolor":"ff59c6ff","page":57,"rect":[0,461.91998291015625,1,462.91998291015625],"title":"STL中map与unordered_map有什么区别？","type":8,"uuid":"d73818eeb815a322659d68da54b97b98"},{"date":"2023-07-26 16:45:13","docid":0,"id":235,"linecolor":"ff59c6ff","page":57,"rect":[0,693.9199829101562,1,694.9199829101562],"title":"vector和list的区别是什么？","type":8,"uuid":"666d0ea14b14aea5884c92978f279d12"},{"date":"2023-07-26 16:45:13","docid":0,"id":236,"linecolor":"ff59c6ff","page":58,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"STL中迭代器有什么作用？有指针为何还要迭代器？","type":8,"uuid":"75cbf9c350ce57337a538b15cdcdc678"},{"date":"2023-07-26 16:45:13","docid":0,"id":237,"linecolor":"ff59c6ff","page":58,"rect":[0,396.91998291015625,1,397.91998291015625],"title":"epoll的原理是什么？","type":8,"uuid":"eaf97e799ef00c79635a7c5e08d5a4d0"},{"date":"2023-07-26 16:45:13","docid":0,"id":238,"linecolor":"ff59c6ff","page":58,"rect":[0,581.9199829101562,1,582.9199829101562],"title":"STL里resize和reserve的区别是什么？","type":8,"uuid":"2411cd2049eb6b949f753e537b406974"},{"date":"2023-08-29 11:23:22","docid":0,"fillcolor":"fffeeb73","id":1117,"originaltext":"同时为了提升内存管理的效率，减少申请小内存造成的内存碎片问题，SGI STL采用了两级配置器，当分配的空间大小超过128B时，会使用第一级空间配置器；当分配的空间大小小于128B时，将使用第二级空间配置器。第一级空间配置器直接使用malloc()、realloc()、free()函数进行内存空间的分配和释放，而第二级空间配置器采用了内存池技术，通过空闲链表来管理内存。","page":57,"textblocks":[{"first":[75.52130126953125,161.414306640625,9.753860473632812,13.5],"last":[358.3841857910156,206.43206787109375,9.753875732421875,13.5],"length":188,"rects":[[75.52130126953125,161.414306640625,443.18646240234375,13.5],[75.52130126953125,177.12022399902344,436.25732421875,13.5],[75.52203369140625,192.1261444091797,437.2462158203125,13.5],[75.52203369140625,206.43206787109375,292.61602783203125,13.5]],"start":300,"text":"同时为了提升内存管理的效率，减少申请小内存造成的内存碎片问题，SGI STL采用了两级配置器，当分\n配的空间大小超过128B时，会使用第一级空间配置器；当分配的空间大小小于128B时，将使用第二级\n空间配置器。第一级空间配置器直接使用malloc()、realloc()、free()函数进行内存空间的分配和释放，\n而第二级空间配置器采用了内存池技术，通过空闲链表来管理内存。"}],"type":5,"uuid":"f5c6020e9559c9377682bafb26566dcd"},{"date":"2023-08-29 11:38:13","docid":0,"fillcolor":"fffeeb73","id":1118,"originaltext":"对于序列容器vector,deque来说，使用erase(itertor)后，后边的每个元素的迭代器都会失效，但是后边每个元素都会往前移动一个位置，但是erase会返回下一个有效的迭代器","page":57,"textblocks":[{"first":[75.52203369140625,257.3522644042969,9.753860473632812,14.5],"last":[373.6294860839844,273.158203125,9.753875732421875,13.5],"length":94,"rects":[[75.52203369140625,257.3522644042969,440.92877197265625,14.5],[75.52204895019531,273.158203125,307.86131286621094,13.5]],"start":504,"text":"对于序列容器vector,deque来说，使用erase(itertor)后，后边的每个元素的迭代器都会失效，但是后边\n每个元素都会往前移动一个位置，但是erase会返回下一个有效的迭代器"}],"type":5,"uuid":"e4fb2d2d10bba0e50c2423d32804b498"},{"date":"2023-08-29 11:38:31","docid":0,"fillcolor":"fffeeb73","id":1119,"originaltext":"对于关联容器map set来说，使用了erase(iterator)后，当前元素的迭代器失效，但是其结构是红黑树，删除当前元素的，不会影响到下一个元素的迭代器，所以在调用erase之前，记录下一个元素的迭代器即可。","page":57,"textblocks":[{"first":[75.52204895019531,295.96710205078125,9.753860473632812,12.5],"last":[85.27592468261719,326.9789733886719,9.753860473632812,11.5],"length":109,"rects":[[75.52204895019531,295.96710205078125,442.8435516357422,12.5],[75.52206420898438,310.9730224609375,444.4154357910156,12.5],[75.52206420898438,326.9789733886719,19.507720947265625,11.5]],"start":600,"text":"对于关联容器map set来说，使用了erase(iterator)后，当前元素的迭代器失效，但是其结构是红黑树，\n删除当前元素的，不会影响到下一个元素的迭代器，所以在调用erase之前，记录下一个元素的迭代器即\n可。"}],"type":5,"uuid":"348bdc39dab3f6f5a7b9d09599270b22"},{"date":"2023-08-29 11:38:43","docid":0,"fillcolor":"fffeeb73","id":1120,"originaltext":"对于list来说，它使用了不连续分配的内存，并且它的erase方法也会返回下一个有效的iterator，因此上面两种正确的方法都可以使用。","page":57,"textblocks":[{"first":[75.52206420898438,348.1878967285156,9.753860473632812,13.5],"last":[202.32232666015625,362.4938659667969,9.753860473632812,13.5],"length":70,"rects":[[75.52206420898438,348.1878967285156,442.7864074707031,13.5],[75.52206420898438,362.4938659667969,136.5541229248047,13.5]],"start":710,"text":"对于list来说，它使用了不连续分配的内存，并且它的erase方法也会返回下一个有效的iterator，因此上\n面两种正确的方法都可以使用。"}],"type":5,"uuid":"255710f9db6e51bcccc03da869ba0a93"},{"date":"2023-08-29 11:41:00","docid":0,"fillcolor":"fffeeb73","id":1121,"originaltext":"红黑树。unordered map底层结构是哈希表","page":57,"textblocks":[{"first":[75.52203369140625,437.4732666015625,9.753860473632812,13.5],"last":[254.54898071289062,437.4732666015625,9.753875732421875,13.5],"length":25,"rects":[[75.52203369140625,437.4732666015625,188.78082275390625,13.5]],"start":800,"text":"红黑树。unordered map底层结构是哈希表"}],"type":5,"uuid":"33bb886962dbd76682831fa52c7d243c"},{"date":"2023-08-29 11:42:52","docid":0,"fillcolor":"fffeeb73","id":1122,"originaltext":"map在底层使用了红黑树来实现","page":57,"textblocks":[{"first":[75.52203369140625,488.79345703125,9.071090698242188,12.5],"last":[203.28793334960938,488.79345703125,9.753860473632812,12.5],"length":15,"rects":[[75.52203369140625,488.79345703125,137.51976013183594,12.5]],"start":855,"text":"map在底层使用了红黑树来实现"}],"type":5,"uuid":"5ce1fcab737fd4b123b0f3e873b41f4a"},{"date":"2023-08-29 11:42:59","docid":0,"fillcolor":"fffeeb73","id":1123,"originaltext":"unordered_map是C++11标准中新加入的容器，它的底层是使用hash表的形式来完成映射的功能","page":57,"textblocks":[{"first":[222.79568481445312,488.79345703125,5.9888763427734375,12.5],"last":[204.86807250976562,503.7994384765625,9.753860473632812,12.5],"length":53,"rects":[[222.79568481445312,488.79345703125,277.6054992675781,12.5],[75.52203369140625,503.7994384765625,139.0998992919922,12.5]],"start":871,"text":"unordered_map是C++11标准中新加入的容器，它的底层是使用\nhash表的形式来完成映射的功能"}],"type":5,"uuid":"55aa776963571f5f406c61250348234a"},{"date":"2023-08-29 11:43:16","docid":0,"fillcolor":"fffeeb73","id":1124,"originaltext":"1. vector底层实现是数组；list是双向 链表。","page":57,"textblocks":[{"first":[87.52677917480469,721.1353759765625,5.5792083740234375,12.5],"last":[268.7138671875,721.1353759765625,9.753875732421875,12.5],"length":28,"rects":[[87.52677917480469,721.1353759765625,190.9409637451172,12.5]],"start":1335,"text":"1. vector底层实现是数组；list是双向 链表。"}],"type":5,"uuid":"1e43c11f5210b463da1fdf0352fc4bb9"},{"date":"2023-08-29 11:43:55","docid":0,"fillcolor":"fffeeb73","id":1125,"originaltext":"2. vector支持随机访问，list不支持。","page":57,"textblocks":[{"first":[87.52677917480469,736.1412963867188,5.5792083740234375,12.5],"last":[236.91629028320312,736.1412963867188,9.753860473632812,12.5],"length":24,"rects":[[87.52677917480469,736.1412963867188,159.14337158203125,12.5]],"start":1364,"text":"2. vector支持随机访问，list不支持。"}],"type":5,"uuid":"b25b1ea399bcb61d0daca2362569ab62"},{"date":"2023-08-29 11:43:57","docid":0,"fillcolor":"fffeeb73","id":1126,"originaltext":"3. vector是顺序内存，list不是。","page":57,"textblocks":[{"first":[87.52677917480469,751.147216796875,5.5792083740234375,12.5],"last":[217.40853881835938,751.147216796875,9.753860473632812,12.5],"length":22,"rects":[[87.52677917480469,751.147216796875,139.6356201171875,12.5]],"start":1389,"text":"3. vector是顺序内存，list不是。"}],"type":5,"uuid":"ed8f7457f49727815aafc30ff3992934"},{"date":"2023-08-29 11:43:59","docid":0,"fillcolor":"fffeeb73","id":1127,"originaltext":"4. vector在中间节点进行插入删除会导致内存拷贝，list不会。","page":57,"textblocks":[{"first":[87.52677917480469,765.6531982421875,5.5792083740234375,12.5],"last":[344.2088317871094,765.6531982421875,9.753875732421875,12.5],"length":35,"rects":[[87.52677917480469,765.6531982421875,266.43592834472656,12.5]],"start":1412,"text":"4. vector在中间节点进行插入删除会导致内存拷贝，list不会。"}],"type":5,"uuid":"4db3dce14b9e03adc3d934e454caccea"},{"date":"2023-08-29 11:44:05","docid":0,"fillcolor":"fffeeb73","id":1128,"originaltext":"5. vector一次性分配好内存，不够时才进行2倍扩容；list每次插入新节点都会进行内存申请。","page":57,"textblocks":[{"first":[87.52677917480469,780.6591186523438,5.5792083740234375,12.5],"last":[476.58831787109375,780.6591186523438,9.753875732421875,12.5],"length":49,"rects":[[87.52677917480469,780.6591186523438,398.81541442871094,12.5]],"start":1448,"text":"5. vector一次性分配好内存，不够时才进行2倍扩容；list每次插入新节点都会进行内存申请。"}],"type":5,"uuid":"4df1d9676bef7a669302fd05ba495a95"},{"date":"2023-08-29 11:44:07","docid":0,"fillcolor":"fffeeb73","id":1129,"originaltext":"6. vector随机访问性能好，插入删除性能差；list随机访问性能差，插入删除性能好。","page":57,"textblocks":[{"first":[87.52677917480469,795.6650390625,5.5792083740234375,12.5],"last":[441.7475280761719,795.6650390625,9.753875732421875,12.5],"length":45,"rects":[[87.52677917480469,795.6650390625,363.97462463378906,12.5]],"start":1498,"text":"6. vector随机访问性能好，插入删除性能差；list随机访问性能差，插入删除性能好。"}],"type":5,"uuid":"499889b73228377a621d45a1789dfeff"}],"page":56,"rect":[0,381.91998291015625,1,382.91998291015625],"title":"容器和算法","type":8,"uuid":"b600bd5f81ce69291dcafe410372a0de"},{"date":"2023-07-26 16:45:13","docid":0,"id":239,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":240,"linecolor":"ff59c6ff","page":59,"rect":[0,194.91998291015625,1,195.91998291015625],"title":"C++中类成员的访问权限？","type":8,"uuid":"a53bfe04d7305ed7ff74da3fd68a12ec"},{"date":"2023-07-26 16:45:13","docid":0,"id":241,"linecolor":"ff59c6ff","page":59,"rect":[0,305.91998291015625,1,306.91998291015625],"title":"C++中struct和class的区别是什么?","type":8,"uuid":"c1869dc717d020a31cdb48a1e5596171"},{"date":"2023-07-26 16:45:13","docid":0,"id":242,"linecolor":"ff59c6ff","page":59,"rect":[0,386.91998291015625,1,387.91998291015625],"title":"C++类内可以定义引用数据成员吗？","type":8,"uuid":"673dde6e44a717766a335ccb67c50077"},{"date":"2023-07-26 16:45:13","docid":0,"id":243,"linecolor":"ff59c6ff","page":59,"rect":[0,437.91998291015625,1,438.91998291015625],"title":"面向对象与泛型编程是什么？","type":8,"uuid":"c1ad3edfb9c78d95d5aa9fe5ae71b0e0"},{"date":"2023-07-26 16:45:13","docid":0,"id":244,"linecolor":"ff59c6ff","page":59,"rect":[0,578.9199829101562,1,579.9199829101562],"title":"什么是右值引用，跟左值又有什么区别？","type":8,"uuid":"048639c3d6a82d2b807411a344589690"},{"date":"2023-07-26 16:45:13","docid":0,"id":245,"linecolor":"ff59c6ff","page":60,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"析构函数可以为 virtual 型，构造函数则不能，为什么？","type":8,"uuid":"aaee4e54615477cf01f2d8dfad5286ee"},{"date":"2023-07-26 16:45:13","docid":0,"id":246,"linecolor":"ff59c6ff","page":60,"rect":[0,215.91998291015625,1,216.91998291015625],"title":"C++中空类默认产生哪些类成员函数？","type":8,"uuid":"93e6ff3d70adada2ab6a1b28fa11b1e1"}],"page":59,"rect":[0,164.91998291015625,1,165.91998291015625],"title":"类和数据抽象","type":8,"uuid":"ef37039b4fa65987158aab2fe9ba2396"},{"date":"2023-07-26 16:45:13","docid":0,"id":247,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":248,"linecolor":"ff59c6ff","page":60,"rect":[0,622.9199829101562,1,623.9199829101562],"title":"面向对象和面向过程有什么区别？","type":8,"uuid":"56fcdc9c90bff70cd007b6e78eed3972"},{"date":"2023-07-26 16:45:13","docid":0,"id":249,"linecolor":"ff59c6ff","page":61,"rect":[0,264.91998291015625,1,265.91998291015625],"title":"面向对象的基本特征有哪些？","type":8,"uuid":"6719e7af191c5565cdb8756840a15182"},{"date":"2023-07-26 16:45:13","docid":0,"id":250,"linecolor":"ff59c6ff","page":61,"rect":[0,685.9199829101562,1,686.9199829101562],"title":"什么是深拷贝？什么是浅拷贝？","type":8,"uuid":"d4aade1733404b7d5267570c52e9a7b1"},{"date":"2023-07-26 16:45:13","docid":0,"id":251,"linecolor":"ff59c6ff","page":62,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"什么是友元？","type":8,"uuid":"604e7012e4b01954a01de2ee355c9741"},{"date":"2023-07-26 16:45:13","docid":0,"id":252,"linecolor":"ff59c6ff","page":62,"rect":[0,298.91998291015625,1,299.91998291015625],"title":"基类的构造函数/析构函数是否能被派生类继承？","type":8,"uuid":"42a11c82895774082bd0cdec03fefe29"},{"date":"2023-07-26 16:45:13","docid":0,"id":253,"linecolor":"ff59c6ff","page":62,"rect":[0,455.91998291015625,1,456.91998291015625],"title":"初始化列表和构造函数初始化的区别？","type":8,"uuid":"9dc54f1b737bdf7c3468f8a7a724f69d"},{"date":"2023-07-26 16:45:13","docid":0,"id":254,"linecolor":"ff59c6ff","page":63,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"C++中有那些情况只能用初始化列表，而不能用赋值？","type":8,"uuid":"0a42ab3c3b5e44161ca639d8116ff537"},{"date":"2023-07-26 16:45:13","docid":0,"id":255,"linecolor":"ff59c6ff","page":63,"rect":[0,297.91998291015625,1,298.91998291015625],"title":"类的成员变量的初始化顺序是什么？","type":8,"uuid":"a9d174afb0bf0c3df48599f7fd6cb890"},{"date":"2023-07-26 16:45:13","docid":0,"id":256,"linecolor":"ff59c6ff","page":63,"rect":[0,528.9199829101562,1,529.9199829101562],"title":"当一个类为另一个类的成员变量时，如何对其进行初始化？","type":8,"uuid":"5cb6267a36536f349cd6cbba82721338"},{"date":"2023-07-26 16:45:13","docid":0,"id":257,"linecolor":"ff59c6ff","page":64,"rect":[0,152.91998291015625,1,153.91998291015625],"title":"C++能设计实现一个不能被继承的类吗？","type":8,"uuid":"4d247ff702a0d0041d2c048475a282db"},{"date":"2023-07-26 16:45:13","docid":0,"id":258,"linecolor":"ff59c6ff","page":65,"rect":[0,344.91998291015625,1,345.91998291015625],"title":"构造函数没有返回值，那么如何得知对象是否构造成功？","type":8,"uuid":"512558a41efd7de44bd22c5e7b8625bc"},{"date":"2023-07-26 16:45:13","docid":0,"id":259,"linecolor":"ff59c6ff","page":65,"rect":[0,463.91998291015625,1,464.91998291015625],"title":"Public继承、protected继承、private继承的区别？","type":8,"uuid":"9bb4c8ff4a64fd9ec1b4d1b9d87ca10b"},{"date":"2023-07-26 16:45:13","docid":0,"id":260,"linecolor":"ff59c6ff","page":66,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"C++提供默认参数的函数吗？","type":8,"uuid":"37b10c29860d61cda37b0d027bfa9114"}],"page":60,"rect":[0,592.9199829101562,1,593.9199829101562],"title":"面向对象","type":8,"uuid":"0e227c18ae8e6e01ebae5661358d997d"},{"date":"2023-07-26 16:45:13","docid":0,"id":261,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":262,"linecolor":"ff59c6ff","page":67,"rect":[0,194.91998291015625,1,195.91998291015625],"title":"什么是虚函数？","type":8,"uuid":"31004e08ae897cf573b520a581f12402"},{"date":"2023-07-26 16:45:13","docid":0,"id":263,"linecolor":"ff59c6ff","page":68,"rect":[0,558.9199829101562,1,559.9199829101562],"title":"C++如何实现多态？","type":8,"uuid":"3bd3983f104bd6efb5e946b573682264"},{"date":"2023-07-26 16:45:13","docid":0,"id":264,"linecolor":"ff59c6ff","page":68,"rect":[0,655.9199829101562,1,656.9199829101562],"title":"纯虚函数指的是什么？","type":8,"uuid":"4ef964d8175660f1a3da73746695a38b"},{"date":"2023-07-26 16:45:13","docid":0,"id":265,"linecolor":"ff59c6ff","page":69,"rect":[0,135.91998291015625,1,136.91998291015625],"title":"什么函数不能声明为虚函数？","type":8,"uuid":"48ba67c218d13b3c0a21d9f4b1ea4c38"},{"date":"2023-07-26 16:45:13","docid":0,"id":266,"linecolor":"ff59c6ff","page":69,"rect":[0,495.91998291015625,1,496.91998291015625],"title":"C++中如何阻止一个类被实例化？","type":8,"uuid":"b1fe5d6864d0ae4790f713d40da1fbd3"}],"page":67,"rect":[0,164.91998291015625,1,165.91998291015625],"title":"虚函数","type":8,"uuid":"ae9d7d055cde479b22b7eb63ca27578a"}],"page":28,"rect":[0,362.91998291015625,1,363.91998291015625],"title":"C/C++","type":8,"uuid":"8b74d67f6d392f8b17174c913b6d4470"},{"date":"2023-07-26 16:45:13","docid":0,"id":267,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":268,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":269,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":270,"linecolor":"ff59c6ff","page":71,"rect":[0,338.91998291015625,1,339.91998291015625],"title":"题目描述","type":8,"uuid":"e9cbc6023a72980f4fd9d4864bfaea19"},{"date":"2023-07-26 16:45:13","docid":0,"id":271,"linecolor":"ff59c6ff","page":71,"rect":[0,498.91998291015625,1,499.91998291015625],"title":"解题思路","type":8,"uuid":"bf2688242d2d35b50da4e49301cf670d"},{"date":"2023-07-26 16:45:13","docid":0,"id":272,"linecolor":"ff59c6ff","page":71,"rect":[0,577.9199829101562,1,578.9199829101562],"title":"代码实现","type":8,"uuid":"9243c8386f25041b83ff642e57679f3d"}],"page":71,"rect":[0,287.91998291015625,1,288.91998291015625],"title":"删除单链表的重复节点","type":8,"uuid":"32dbd16b0658f3edf6ba07c9dd6ddf43"},{"date":"2023-07-26 16:45:13","docid":0,"id":273,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":274,"linecolor":"ff59c6ff","page":72,"rect":[0,539.9199829101562,1,540.9199829101562],"title":"题目描述","type":8,"uuid":"e34b4e922472eb64604e7fe2cbac6346"},{"date":"2023-07-26 16:45:13","docid":0,"id":275,"linecolor":"ff59c6ff","page":73,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"解题思路","type":8,"uuid":"f2044f177ef3a91a2a7eea7a1f82b6d8"},{"date":"2023-07-26 16:45:13","docid":0,"id":276,"linecolor":"ff59c6ff","page":73,"rect":[0,91.91998291015625,1,92.91998291015625],"title":"代码","type":8,"uuid":"d2d9026be92674b09a147b717ce0403d"}],"page":72,"rect":[0,513.9199829101562,1,514.9199829101562],"title":"如何找出链表的倒数第K个元素？","type":8,"uuid":"446549573f44bff0b2d7faa34c7261c3"},{"date":"2023-07-26 16:45:13","docid":0,"id":277,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":278,"linecolor":"ff59c6ff","page":73,"rect":[0,381.91998291015625,1,382.91998291015625],"title":"题目描述","type":8,"uuid":"8513586bc1cb7b6ec177a3e017080265"},{"date":"2023-07-26 16:45:13","docid":0,"id":279,"linecolor":"ff59c6ff","page":73,"rect":[0,648.9199829101562,1,649.9199829101562],"title":"解题思路","type":8,"uuid":"179ba2adc72e0268564c3e5e97f70064"},{"date":"2023-07-26 16:45:13","docid":0,"id":280,"linecolor":"ff59c6ff","page":74,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"代码","type":8,"uuid":"564b73121c1a0599954d4f5c61a71128"}],"page":73,"rect":[0,355.91998291015625,1,356.91998291015625],"title":"如何找出链表的中间节点","type":8,"uuid":"c64dbca771a828f7a47846ffad3b2f52"},{"date":"2023-07-26 16:45:13","docid":0,"id":281,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":282,"linecolor":"ff59c6ff","page":74,"rect":[0,264.91998291015625,1,265.91998291015625],"title":"题目描述","type":8,"uuid":"e940519eaca01c8f7d369bbb888adba7"},{"date":"2023-07-26 16:45:13","docid":0,"id":283,"linecolor":"ff59c6ff","page":74,"rect":[0,403.91998291015625,1,404.91998291015625],"title":"解题思路","type":8,"uuid":"567bf8094e89a1c1fa80c8e10f32cf80"},{"date":"2023-07-26 16:45:13","docid":0,"id":284,"linecolor":"ff59c6ff","page":74,"rect":[0,534.9199829101562,1,535.9199829101562],"title":"代码","type":8,"uuid":"bd8e650109d054aa9a8b80cecb4b97c0"}],"page":74,"rect":[0,238.91998291015625,1,239.91998291015625],"title":"反转链表","type":8,"uuid":"cdfab5e32744231870bdd32a6802203a"},{"date":"2023-07-26 16:45:13","docid":0,"id":285,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":286,"linecolor":"ff59c6ff","page":75,"rect":[0,485.91998291015625,1,486.91998291015625],"title":"题目描述","type":8,"uuid":"92f20e536542d65a4277a6645ce7f488"},{"date":"2023-07-26 16:45:13","docid":0,"id":287,"linecolor":"ff59c6ff","page":76,"rect":[0,241.91998291015625,1,242.91998291015625],"title":"解题思路","type":8,"uuid":"fac126a81fdc087306ada6f349e0eb99"},{"date":"2023-07-26 16:45:13","docid":0,"id":288,"linecolor":"ff59c6ff","page":76,"rect":[0,718.9199829101562,1,719.9199829101562],"title":"代码","type":8,"uuid":"b748fdf17223924109a1e84cbbe24cb3"}],"page":75,"rect":[0,459.91998291015625,1,460.91998291015625],"title":"环形链表","type":8,"uuid":"59229e9d5321f359d16c6f3c0261a2f8"},{"date":"2023-07-26 16:45:13","docid":0,"id":289,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":290,"linecolor":"ff59c6ff","page":77,"rect":[0,246.91998291015625,1,247.91998291015625],"title":"题目描述","type":8,"uuid":"ccce791efd95e0a13b5f5e773e8efb0e"},{"date":"2023-07-26 16:45:13","docid":0,"id":291,"linecolor":"ff59c6ff","page":78,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"解题思路","type":8,"uuid":"88f6a175eebee8fefe7c317002c2b8b6"},{"date":"2023-07-26 16:45:13","docid":0,"id":292,"linecolor":"ff59c6ff","page":78,"rect":[0,402.91998291015625,1,403.91998291015625],"title":"代码","type":8,"uuid":"61e58a63fa4e1889d0556cfe7b969ecb"}],"page":77,"rect":[0,220.91998291015625,1,221.91998291015625],"title":"单链表相交，如何求交点？","type":8,"uuid":"9cf69638ce366921c89385a9e33b826d"},{"date":"2023-07-26 16:45:13","docid":0,"id":293,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":294,"linecolor":"ff59c6ff","page":78,"rect":[0,706.9199829101562,1,707.9199829101562],"title":"题目描述","type":8,"uuid":"7de8afeacbb1787d59ee9c56a0fd7514"},{"date":"2023-07-26 16:45:13","docid":0,"id":295,"linecolor":"ff59c6ff","page":79,"rect":[0,158.91998291015625,1,159.91998291015625],"title":"解题思路","type":8,"uuid":"e63846dca21ca7b583365547e0bf76f4"},{"date":"2023-07-26 16:45:13","docid":0,"id":296,"linecolor":"ff59c6ff","page":79,"rect":[0,206.91998291015625,1,207.91998291015625],"title":"代码","type":8,"uuid":"97241a9fe3d3219a6f661e27800e1ffb"}],"page":78,"rect":[0,680.9199829101562,1,681.9199829101562],"title":"回文链表","type":8,"uuid":"379ec5ad0b59dad9861c8771027a904f"},{"date":"2023-07-26 16:45:13","docid":0,"id":297,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":298,"linecolor":"ff59c6ff","page":79,"rect":[0,699.9199829101562,1,700.9199829101562],"title":"题目描述","type":8,"uuid":"c0abd287dbbdf52052370e8e3ac5b209"},{"date":"2023-07-26 16:45:13","docid":0,"id":299,"linecolor":"ff59c6ff","page":80,"rect":[0,143.91998291015625,1,144.91998291015625],"title":"解题思路","type":8,"uuid":"e166a9f0bd36e7e238e68f26a6f63982"},{"date":"2023-07-26 16:45:13","docid":0,"id":300,"linecolor":"ff59c6ff","page":80,"rect":[0,228.91998291015625,1,229.91998291015625],"title":"代码","type":8,"uuid":"0176363f960f7b1aab4d5dc32abf8bd1"}],"page":79,"rect":[0,673.9199829101562,1,674.9199829101562],"title":"移除重复节点","type":8,"uuid":"80955a3898ea8986df95a95a332ef452"},{"date":"2023-07-26 16:45:13","docid":0,"id":301,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":302,"linecolor":"ff59c6ff","page":81,"rect":[0,206.91998291015625,1,207.91998291015625],"title":"题目描述","type":8,"uuid":"c539226f87a361797c947745a6bb8803"},{"date":"2023-07-26 16:45:13","docid":0,"id":303,"linecolor":"ff59c6ff","page":81,"rect":[0,345.91998291015625,1,346.91998291015625],"title":"解题思路","type":8,"uuid":"0f462bce1fb7bab979e5632ff126012c"},{"date":"2023-07-26 16:45:13","docid":0,"id":304,"linecolor":"ff59c6ff","page":81,"rect":[0,506.91998291015625,1,507.91998291015625],"title":"代码","type":8,"uuid":"8ab2b6824bd9da97ed1033ef588047ff"}],"page":81,"rect":[0,180.91998291015625,1,181.91998291015625],"title":"用普通算法实现两个有序链表的合并","type":8,"uuid":"1980c60a08435f26f7980a70c8672677"}],"page":71,"rect":[0,257.91998291015625,1,258.91998291015625],"title":"链表","type":8,"uuid":"eb7debf225c2cbd0ef5ea9a4ef468094"},{"date":"2023-07-26 16:45:13","docid":0,"id":305,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":306,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":307,"linecolor":"ff59c6ff","page":82,"rect":[0,676.9199829101562,1,677.9199829101562],"title":"先序遍历规则","type":8,"uuid":"e46f48e87fc1d99ce5510846de6feb30"},{"date":"2023-07-26 16:45:13","docid":0,"id":308,"linecolor":"ff59c6ff","page":83,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"先序遍历举例","type":8,"uuid":"f6708dc64b5e63f96839707b9c43a354"},{"date":"2023-07-26 16:45:13","docid":0,"id":309,"linecolor":"ff59c6ff","page":83,"rect":[0,507.91998291015625,1,508.91998291015625],"title":"先序遍历代码（递归）","type":8,"uuid":"69fbfb1a61611098fdd948d2011d311e"},{"date":"2023-07-26 16:45:13","docid":0,"id":310,"linecolor":"ff59c6ff","page":85,"rect":[0,180.91998291015625,1,181.91998291015625],"title":"先序遍历代码（非递归）","type":8,"uuid":"8b53b3b1b3f7dfdcf4f8a4e6af9b8e52"}],"page":82,"rect":[0,649.9199829101562,1,650.9199829101562],"title":"二叉树先序遍历（递归和非递归）","type":8,"uuid":"c36e4f9a6e308fdcceb78ff2ac91c8c2"},{"date":"2023-07-26 16:45:13","docid":0,"id":311,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":312,"linecolor":"ff59c6ff","page":87,"rect":[0,422.91998291015625,1,423.91998291015625],"title":"中序遍历规则","type":8,"uuid":"bed21f5e1a1f86fad2843ad2aff14542"},{"date":"2023-07-26 16:45:13","docid":0,"id":313,"linecolor":"ff59c6ff","page":87,"rect":[0,485.91998291015625,1,486.91998291015625],"title":"中序遍历举例","type":8,"uuid":"74d890c0ccf37d858cfcfdbd9ddb6b06"},{"date":"2023-07-26 16:45:13","docid":0,"id":314,"linecolor":"ff59c6ff","page":88,"rect":[0,189.91998291015625,1,190.91998291015625],"title":"中序遍历代码（递归）","type":8,"uuid":"c0a4a346ecff463b5c5c49fbadb10c37"},{"date":"2023-07-26 16:45:13","docid":0,"id":315,"linecolor":"ff59c6ff","page":89,"rect":[0,558.9199829101562,1,559.9199829101562],"title":"中序遍历代码（非递归）","type":8,"uuid":"80ddcd5465ec8f23e3087bd4f9637123"}],"page":87,"rect":[0,396.91998291015625,1,397.91998291015625],"title":"二叉树中序遍历（递归和非递归）","type":8,"uuid":"8dc4ac20fb1cfdd6a8da05205ad3c99c"},{"date":"2023-07-26 16:45:13","docid":0,"id":316,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":317,"linecolor":"ff59c6ff","page":92,"rect":[0,652.9199829101562,1,653.9199829101562],"title":"后序遍历规则","type":8,"uuid":"c2317c2b631cd3834712a7b1034cf92a"},{"date":"2023-07-26 16:45:13","docid":0,"id":318,"linecolor":"ff59c6ff","page":92,"rect":[0,715.9199829101562,1,716.9199829101562],"title":"后序遍历举例","type":8,"uuid":"c9ebfce8ae19687fdbd8ae6c668ce478"},{"date":"2023-07-26 16:45:13","docid":0,"id":319,"linecolor":"ff59c6ff","page":93,"rect":[0,492.91998291015625,1,493.91998291015625],"title":"后序遍历代码（递归）","type":8,"uuid":"5a824bf5cb1914555a426251771c859f"}],"page":92,"rect":[0,625.9199829101562,1,626.9199829101562],"title":"二叉树后序遍历（递归和非递归）","type":8,"uuid":"bd413785a543e85a3e40c74948229b3c"},{"date":"2023-07-26 16:45:13","docid":0,"id":320,"linecolor":"ff59c6ff","page":95,"rect":[0,126.91998291015625,1,127.91998291015625],"title":"后序遍历代码（非递归）","type":8,"uuid":"607a6acfe76eec6fede7bf13573008e0"},{"date":"2023-07-26 16:45:13","docid":0,"id":321,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":322,"linecolor":"ff59c6ff","page":97,"rect":[0,638.9199829101562,1,639.9199829101562],"title":"层次遍历规则","type":8,"uuid":"ab7ba3d8ecbe141f0379fb76cf68ce64"},{"date":"2023-07-26 16:45:13","docid":0,"id":323,"linecolor":"ff59c6ff","page":97,"rect":[0,716.9199829101562,1,717.9199829101562],"title":"层次遍历举例","type":8,"uuid":"68a23957a1ac2ac969f9718135477a91"},{"date":"2023-07-26 16:45:13","docid":0,"id":324,"linecolor":"ff59c6ff","page":98,"rect":[0,357.91998291015625,1,358.91998291015625],"title":"层次遍历代码","type":8,"uuid":"a9286f7da6a9a0c326cdb9c0345c7654"}],"page":97,"rect":[0,612.9199829101562,1,613.9199829101562],"title":"层次遍历","type":8,"uuid":"d986ab61327d52125ad5285be69996a6"},{"date":"2023-07-26 16:45:13","docid":0,"id":325,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":326,"linecolor":"ff59c6ff","page":100,"rect":[0,287.91998291015625,1,288.91998291015625],"title":"题目描述","type":8,"uuid":"aaa2025d681a707b3d9fd365a8ab58f1"},{"date":"2023-07-26 16:45:13","docid":0,"id":327,"linecolor":"ff59c6ff","page":100,"rect":[0,558.9199829101562,1,559.9199829101562],"title":"解题思路","type":8,"uuid":"af57952dad6bffb682ea621ae0fc267a"},{"date":"2023-07-26 16:45:13","docid":0,"id":328,"linecolor":"ff59c6ff","page":100,"rect":[0,721.9199829101562,1,722.9199829101562],"title":"代码","type":8,"uuid":"7e62f6fc9b2878e4298364641614fbd3"}],"page":100,"rect":[0,261.91998291015625,1,262.91998291015625],"title":"求二叉树的深度","type":8,"uuid":"1a6d347e9f6a0a7df41e18fbd4c7ba1e"},{"date":"2023-07-26 16:45:13","docid":0,"id":329,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":330,"linecolor":"ff59c6ff","page":101,"rect":[0,253.91998291015625,1,254.91998291015625],"title":"题目描述","type":8,"uuid":"d26c0ac62aca3813a41959165b03634b"},{"date":"2023-07-26 16:45:13","docid":0,"id":331,"linecolor":"ff59c6ff","page":102,"rect":[0,319.91998291015625,1,320.91998291015625],"title":"解题思路","type":8,"uuid":"e5e9a875220db2d4034b370b7ee2ce2f"},{"date":"2023-07-26 16:45:13","docid":0,"id":332,"linecolor":"ff59c6ff","page":102,"rect":[0,382.91998291015625,1,383.91998291015625],"title":"代码","type":8,"uuid":"f552a2ca222ce11f493b18d56c340db8"}],"page":101,"rect":[0,227.91998291015625,1,228.91998291015625],"title":"如何判断二叉树是否相等","type":8,"uuid":"cf0a38ad73153b8bd178c0e78ccdc0fe"},{"date":"2023-07-26 16:45:13","docid":0,"id":333,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":334,"linecolor":"ff59c6ff","page":103,"rect":[0,206.91998291015625,1,207.91998291015625],"title":"题目描述","type":8,"uuid":"3042d68a28b89eb32ae2436612c9784b"},{"date":"2023-07-26 16:45:13","docid":0,"id":335,"linecolor":"ff59c6ff","page":103,"rect":[0,690.9199829101562,1,691.9199829101562],"title":"解题思路","type":8,"uuid":"94435ff8bd3ba7d439bc3aaf915fcf70"},{"date":"2023-07-26 16:45:13","docid":0,"id":336,"linecolor":"ff59c6ff","page":104,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"代码","type":8,"uuid":"14719417d49137c71d86256ccfe017e2"}],"page":103,"rect":[0,180.91998291015625,1,181.91998291015625],"title":"如何判断二叉树是否是平衡二叉树","type":8,"uuid":"5cf41cd3c6857d7576b3e3598e4d696a"}],"page":82,"rect":[0,619.9199829101562,1,620.9199829101562],"title":"树","type":8,"uuid":"cf43822385f9d5aefcd1f4a61cf953dd"},{"date":"2023-07-26 16:45:13","docid":0,"id":337,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":338,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":339,"linecolor":"ff59c6ff","page":105,"rect":[0,84.91998291015625,1,85.91998291015625],"title":"题目描述","type":8,"uuid":"93947523e08eed130bebb436647d3860"},{"date":"2023-07-26 16:45:13","docid":0,"id":340,"linecolor":"ff59c6ff","page":105,"rect":[0,276.91998291015625,1,277.91998291015625],"title":"解题思路","type":8,"uuid":"e9817bcc0275e8061937bc3e83fbefae"},{"date":"2023-07-26 16:45:13","docid":0,"id":341,"linecolor":"ff59c6ff","page":105,"rect":[0,452.91998291015625,1,453.91998291015625],"title":"代码","type":8,"uuid":"60782d1e7ec641601a6ecdfa44257c00"}],"page":105,"rect":[0,58.91998291015625,1,59.91998291015625],"title":"最大子序和","type":8,"uuid":"1ef733af00cab2ad049c1f0362282378"},{"date":"2023-07-26 16:45:13","docid":0,"id":342,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":343,"linecolor":"ff59c6ff","page":106,"rect":[0,723.9199829101562,1,724.9199829101562],"title":"题目描述","type":8,"uuid":"9a1f04e53f03e6ee8a8d3b3d2775e198"},{"date":"2023-07-26 16:45:13","docid":0,"id":344,"linecolor":"ff59c6ff","page":107,"rect":[0,258.91998291015625,1,259.91998291015625],"title":"解题思路","type":8,"uuid":"7807ed06a057d286949e0351129e73f7"},{"date":"2023-07-26 16:45:13","docid":0,"id":345,"linecolor":"ff59c6ff","page":107,"rect":[0,351.91998291015625,1,352.91998291015625],"title":"代码","type":8,"uuid":"519139da871bad2a614e16604daf868a"}],"page":106,"rect":[0,697.9199829101562,1,698.9199829101562],"title":"原地移除元素","type":8,"uuid":"37c49d35985efe72c3a3f3b01ec8c6ea"},{"date":"2023-07-26 16:45:13","docid":0,"id":346,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":347,"linecolor":"ff59c6ff","page":107,"rect":[0,601.9199829101562,1,602.9199829101562],"title":"题目描述","type":8,"uuid":"38999289ca0de8648c49ed6a64e60337"},{"date":"2023-07-26 16:45:13","docid":0,"id":348,"linecolor":"ff59c6ff","page":108,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"解题思路","type":8,"uuid":"9f6c99feba1f10512ddcade0ebb78132"}],"page":107,"rect":[0,575.9199829101562,1,576.9199829101562],"title":"合并两个有序数组","type":8,"uuid":"e2f4bed03d9aa6a450c4437c1c54974c"},{"date":"2023-07-26 16:45:13","docid":0,"id":349,"linecolor":"ff59c6ff","page":108,"rect":[0,99.91998291015625,1,100.91998291015625],"title":"代码","type":8,"uuid":"e2ca53c97eab561912f1e341f3ab597f"},{"date":"2023-07-26 16:45:13","docid":0,"id":350,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":351,"linecolor":"ff59c6ff","page":109,"rect":[0,408.91998291015625,1,409.91998291015625],"title":"题目描述","type":8,"uuid":"f88f3584fd51ea2c07b96f9f306e3b64"},{"date":"2023-07-26 16:45:13","docid":0,"id":352,"linecolor":"ff59c6ff","page":109,"rect":[0,691.9199829101562,1,692.9199829101562],"title":"解题思路","type":8,"uuid":"4780aadde550fdeab4aaad8f504d81b9"},{"date":"2023-07-26 16:45:13","docid":0,"id":353,"linecolor":"ff59c6ff","page":110,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"代码","type":8,"uuid":"1e04d8fb10921ed0e43d2d93e426f5f6"}],"page":109,"rect":[0,382.91998291015625,1,383.91998291015625],"title":"查找常用字符","type":8,"uuid":"9f9b00211156c59af01b4f116bc5ae9c"},{"date":"2023-07-26 16:45:13","docid":0,"id":354,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":355,"linecolor":"ff59c6ff","page":110,"rect":[0,721.9199829101562,1,722.9199829101562],"title":"题目描述","type":8,"uuid":"830ced2cfbe4c34c0a8f01ea230df8f6"},{"date":"2023-07-26 16:45:13","docid":0,"id":356,"linecolor":"ff59c6ff","page":111,"rect":[0,286.91998291015625,1,287.91998291015625],"title":"解题思路","type":8,"uuid":"1374d8575186e38e90bd7c1e91e8f660"},{"date":"2023-07-26 16:45:13","docid":0,"id":357,"linecolor":"ff59c6ff","page":111,"rect":[0,417.91998291015625,1,418.91998291015625],"title":"代码","type":8,"uuid":"cb783cc2565594fc47dc091bfed0d8b1"}],"page":110,"rect":[0,695.9199829101562,1,696.9199829101562],"title":"寻找数组的中心索引","type":8,"uuid":"b13b5dee2a91ae53e8e18227e124ace8"},{"date":"2023-07-26 16:45:13","docid":0,"id":358,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":359,"linecolor":"ff59c6ff","page":112,"rect":[0,455.91998291015625,1,456.91998291015625],"title":"题目描述","type":8,"uuid":"5f376d8545b2b27fdf66c938bac957d9"},{"date":"2023-07-26 16:45:13","docid":0,"id":360,"linecolor":"ff59c6ff","page":112,"rect":[0,685.9199829101562,1,686.9199829101562],"title":"解题思路","type":8,"uuid":"b75270bd4701d85e840ddf262d7ec658"},{"date":"2023-07-26 16:45:13","docid":0,"id":361,"linecolor":"ff59c6ff","page":113,"rect":[0,189.91998291015625,1,190.91998291015625],"title":"代码","type":8,"uuid":"71bfb42b4308ddb70b2751757c4666ae"}],"page":112,"rect":[0,429.91998291015625,1,430.91998291015625],"title":"数组中数字出现的次数","type":8,"uuid":"50994be1cad84c99198e4b7330d6b317"},{"date":"2023-07-26 16:45:13","docid":0,"id":362,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":363,"linecolor":"ff59c6ff","page":113,"rect":[0,655.9199829101562,1,656.9199829101562],"title":"题目描述","type":8,"uuid":"581da0de572686f07d48c3d6842ebfe2"},{"date":"2023-07-26 16:45:13","docid":0,"id":364,"linecolor":"ff59c6ff","page":114,"rect":[0,90.91998291015625,1,91.91998291015625],"title":"解题思路","type":8,"uuid":"7e840774679000231418f4c054f1a1ab"},{"date":"2023-07-26 16:45:13","docid":0,"id":365,"linecolor":"ff59c6ff","page":114,"rect":[0,222.91998291015625,1,223.91998291015625],"title":"代码","type":8,"uuid":"d1bf195baac37009aeb6d63b70afd969"}],"page":113,"rect":[0,629.9199829101562,1,630.9199829101562],"title":"数组中数字出现的次数 II","type":8,"uuid":"2a4e8199d8aa44f983382a2278ceda05"},{"date":"2023-07-26 16:45:13","docid":0,"id":366,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":367,"linecolor":"ff59c6ff","page":114,"rect":[0,471.91998291015625,1,472.91998291015625],"title":"题目描述","type":8,"uuid":"8e011bd4dd9d873f4c7d13432efddeae"},{"date":"2023-07-26 16:45:13","docid":0,"id":368,"linecolor":"ff59c6ff","page":114,"rect":[0,679.9199829101562,1,680.9199829101562],"title":"解题思路","type":8,"uuid":"f66c121373c72e8cf3dc8be526745e76"},{"date":"2023-07-26 16:45:13","docid":0,"id":369,"linecolor":"ff59c6ff","page":115,"rect":[0,208.91998291015625,1,209.91998291015625],"title":"代码","type":8,"uuid":"c9704b389c8735e8e16b537731646bf3"}],"page":114,"rect":[0,445.91998291015625,1,446.91998291015625],"title":"数组中缺失的元素","type":8,"uuid":"8894b13d444fec2091987b0901aafea2"},{"date":"2023-07-26 16:45:13","docid":0,"id":370,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":371,"linecolor":"ff59c6ff","page":116,"rect":[0,224.91998291015625,1,225.91998291015625],"title":"题目描述","type":8,"uuid":"375276a6a3b60712dd92aebddef98aa2"},{"date":"2023-07-26 16:45:13","docid":0,"id":372,"linecolor":"ff59c6ff","page":116,"rect":[0,431.91998291015625,1,432.91998291015625],"title":"解题思路","type":8,"uuid":"a07bdd8c1d6369548df71574055ec5d7"},{"date":"2023-07-26 16:45:13","docid":0,"id":373,"linecolor":"ff59c6ff","page":116,"rect":[0,479.91998291015625,1,480.91998291015625],"title":"代码","type":8,"uuid":"77a60cc50f54ab0cc4036beae86241bc"}],"page":116,"rect":[0,198.91998291015625,1,199.91998291015625],"title":"按奇偶排序数组","type":8,"uuid":"70e2bfc076483f6a413b27d8b6857bbc"},{"date":"2023-07-26 16:45:13","docid":0,"id":374,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":375,"linecolor":"ff59c6ff","page":117,"rect":[0,54.91998291015625,1,55.91998291015625],"title":"题目描述","type":8,"uuid":"71bab544b8640c5c8342b3c791e538a7"},{"date":"2023-07-26 16:45:13","docid":0,"id":376,"linecolor":"ff59c6ff","page":117,"rect":[0,261.91998291015625,1,262.91998291015625],"title":"解题思路","type":8,"uuid":"279f9aeeb9182a63b43500f156ca4ffd"},{"date":"2023-07-26 16:45:13","docid":0,"id":377,"linecolor":"ff59c6ff","page":117,"rect":[0,347.91998291015625,1,348.91998291015625],"title":"代码","type":8,"uuid":"8f355c2154d6eb3f2c4941b6c1cf1448"}],"page":117,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"数组是否存在重复元素","type":8,"uuid":"02ac42073f812d69aea7abc15465e830"},{"date":"2023-07-26 16:45:13","docid":0,"id":378,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":379,"linecolor":"ff59c6ff","page":118,"rect":[0,458.91998291015625,1,459.91998291015625],"title":"题目描述","type":8,"uuid":"ab4c88ea153b51943e2a30876cd29ed5"},{"date":"2023-07-26 16:45:13","docid":0,"id":380,"linecolor":"ff59c6ff","page":118,"rect":[0,665.9199829101562,1,666.9199829101562],"title":"解题思路","type":8,"uuid":"806497b3d82f2a4325351908a30a7fa5"},{"date":"2023-07-26 16:45:13","docid":0,"id":381,"linecolor":"ff59c6ff","page":119,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"代码","type":8,"uuid":"36aa562cfe4ecb7cfd03e0f2036d6105"}],"page":118,"rect":[0,432.91998291015625,1,433.91998291015625],"title":"有序数组出现次数超过25%的元素","type":8,"uuid":"157ddd213e68d031fade6bd464d30a15"},{"date":"2023-07-26 16:45:13","docid":0,"id":382,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":383,"linecolor":"ff59c6ff","page":119,"rect":[0,487.91998291015625,1,488.91998291015625],"title":"题目描述","type":8,"uuid":"3f80d3390ff691adf07d8ddc65abd9d3"},{"date":"2023-07-26 16:45:13","docid":0,"id":384,"linecolor":"ff59c6ff","page":120,"rect":[0,507.91998291015625,1,508.91998291015625],"title":"解题思路","type":8,"uuid":"1cd01feb20eca14f755bd1553d0d7681"},{"date":"2023-07-26 16:45:13","docid":0,"id":385,"linecolor":"ff59c6ff","page":120,"rect":[0,594.9199829101562,1,595.9199829101562],"title":"代码","type":8,"uuid":"b9c334b44338af700fe76c1187a74445"}],"page":119,"rect":[0,461.91998291015625,1,462.91998291015625],"title":"有效的山脉数组","type":8,"uuid":"09eacc603b2c3d2fe444e549996b1e6e"},{"date":"2023-07-26 16:45:13","docid":0,"id":386,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":387,"linecolor":"ff59c6ff","page":122,"rect":[0,84.91998291015625,1,85.91998291015625],"title":"题目描述","type":8,"uuid":"30cffe5d32f4816a79598fc41fd6ff25"},{"date":"2023-07-26 16:45:13","docid":0,"id":388,"linecolor":"ff59c6ff","page":122,"rect":[0,321.91998291015625,1,322.91998291015625],"title":"解题思路","type":8,"uuid":"cf55716d47dd950aa62288d44cd46540"},{"date":"2023-07-26 16:45:13","docid":0,"id":389,"linecolor":"ff59c6ff","page":122,"rect":[0,598.9199829101562,1,599.9199829101562],"title":"代码","type":8,"uuid":"ab47f27fd564deb485aa7409f65b2aee"}],"page":122,"rect":[0,58.91998291015625,1,59.91998291015625],"title":"最长连续递增序列","type":8,"uuid":"cb6db33df454761d91253c64a276077b"}],"page":105,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"数组","type":8,"uuid":"453f4b2d5fb95a42819935439503c3d5"},{"date":"2023-07-26 16:45:13","docid":0,"id":390,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":391,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":392,"linecolor":"ff59c6ff","page":123,"rect":[0,542.9199829101562,1,543.9199829101562],"title":"题目描述","type":8,"uuid":"3c56e8a1f609e797f07545d66671fd1a"},{"date":"2023-07-26 16:45:13","docid":0,"id":393,"linecolor":"ff59c6ff","page":124,"rect":[0,53.91998291015625,1,54.91998291015625],"title":"解题思路","type":8,"uuid":"69bad6128db0ea1423ce009cbc129bed"},{"date":"2023-07-26 16:45:13","docid":0,"id":394,"linecolor":"ff59c6ff","page":124,"rect":[0,131.91998291015625,1,132.91998291015625],"title":"代码","type":8,"uuid":"1c4a56d155ec12e4cab513b9055e6fd0"}],"page":123,"rect":[0,516.9199829101562,1,517.9199829101562],"title":"有效的括号","type":8,"uuid":"7bee2ee39fa56ee225b45252c44f6dc8"},{"date":"2023-07-26 16:45:13","docid":0,"id":395,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":396,"linecolor":"ff59c6ff","page":125,"rect":[0,54.91998291015625,1,55.91998291015625],"title":"题目描述","type":8,"uuid":"13f936eb9721b14d4d9bd619968f0c65"},{"date":"2023-07-26 16:45:13","docid":0,"id":397,"linecolor":"ff59c6ff","page":125,"rect":[0,254.91998291015625,1,255.91998291015625],"title":"解题思路","type":8,"uuid":"24ec9606fa9f31b9e6c9ec620372ae54"},{"date":"2023-07-26 16:45:13","docid":0,"id":398,"linecolor":"ff59c6ff","page":125,"rect":[0,408.91998291015625,1,409.91998291015625],"title":"代码","type":8,"uuid":"72493b705121a6595c7b9a001fdd1bf2"}],"page":125,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"字符串数字相加","type":8,"uuid":"bd1011654077a2a090301d9b068925e8"},{"date":"2023-07-26 16:45:13","docid":0,"id":399,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":400,"linecolor":"ff59c6ff","page":125,"rect":[0,672.9199829101562,1,673.9199829101562],"title":"题目描述","type":8,"uuid":"cb0807760c7fc4f5b970a08a059f4e8c"},{"date":"2023-07-26 16:45:13","docid":0,"id":401,"linecolor":"ff59c6ff","page":126,"rect":[0,68.91998291015625,1,69.91998291015625],"title":"解题思路","type":8,"uuid":"442421f31a8fa8c1e7dcfa59f3076e69"},{"date":"2023-07-26 16:45:13","docid":0,"id":402,"linecolor":"ff59c6ff","page":126,"rect":[0,131.91998291015625,1,132.91998291015625],"title":"代码","type":8,"uuid":"f7c1c306a405d941f634fac4da73e283"}],"page":125,"rect":[0,646.9199829101562,1,647.9199829101562],"title":"二进制求和","type":8,"uuid":"46e0c3f46a8fec40075e0778e87728a7"},{"date":"2023-07-26 16:45:13","docid":0,"id":403,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":404,"linecolor":"ff59c6ff","page":127,"rect":[0,152.91998291015625,1,153.91998291015625],"title":"题目描述","type":8,"uuid":"c9684f2cc9365b7da51b941be1124ef5"},{"date":"2023-07-26 16:45:13","docid":0,"id":405,"linecolor":"ff59c6ff","page":127,"rect":[0,336.91998291015625,1,337.91998291015625],"title":"解题思路","type":8,"uuid":"3d22967a3050c963284be83f557f2e07"},{"date":"2023-07-26 16:45:13","docid":0,"id":406,"linecolor":"ff59c6ff","page":127,"rect":[0,384.91998291015625,1,385.91998291015625],"title":"代码","type":8,"uuid":"5cfd15a5ca216cf0b79da4ed0c941b9d"}],"page":127,"rect":[0,126.91998291015625,1,127.91998291015625],"title":"反转字符串","type":8,"uuid":"6397770471b5bb27b31e55a65fffd52f"},{"date":"2023-07-26 16:45:13","docid":0,"id":407,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":408,"linecolor":"ff59c6ff","page":127,"rect":[0,715.9199829101562,1,716.9199829101562],"title":"题目描述","type":8,"uuid":"40ae6c1edd2d32944b14f2e18c9feac7"},{"date":"2023-07-26 16:45:13","docid":0,"id":409,"linecolor":"ff59c6ff","page":128,"rect":[0,83.91998291015625,1,84.91998291015625],"title":"解题思路","type":8,"uuid":"77f869c2d36129bc2a04cfff8f6e1f90"},{"date":"2023-07-26 16:45:13","docid":0,"id":410,"linecolor":"ff59c6ff","page":128,"rect":[0,161.91998291015625,1,162.91998291015625],"title":"代码","type":8,"uuid":"b289596d67512d6fcf9ea208f2e4b0eb"}],"page":127,"rect":[0,689.9199829101562,1,690.9199829101562],"title":"反转字符串中的单词","type":8,"uuid":"b2d4b249bf1e5505785825d3ef991465"},{"date":"2023-07-26 16:45:13","docid":0,"id":411,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":412,"linecolor":"ff59c6ff","page":128,"rect":[0,681.9199829101562,1,682.9199829101562],"title":"题目描述","type":8,"uuid":"afdd8314446eb816a2d98fdaf5cf2252"},{"date":"2023-07-26 16:45:13","docid":0,"id":413,"linecolor":"ff59c6ff","page":129,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"解题思路","type":8,"uuid":"74eb0a8d425fbb84f2bf0762e55f6c5e"},{"date":"2023-07-26 16:45:13","docid":0,"id":414,"linecolor":"ff59c6ff","page":129,"rect":[0,76.91998291015625,1,77.91998291015625],"title":"代码","type":8,"uuid":"12a2b18df46a6a9e0cddd3def3bb17bb"}],"page":128,"rect":[0,655.9199829101562,1,656.9199829101562],"title":"反转字符串中的元音字母","type":8,"uuid":"3136cfb160555b98969ea7e047abf2e4"},{"date":"2023-07-26 16:45:13","docid":0,"id":415,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":416,"linecolor":"ff59c6ff","page":129,"rect":[0,596.9199829101562,1,597.9199829101562],"title":"题目描述","type":8,"uuid":"0088e06eb6c44cc943ff7e24f3b840db"},{"date":"2023-07-26 16:45:13","docid":0,"id":417,"linecolor":"ff59c6ff","page":130,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"解题思路","type":8,"uuid":"583b27063dc3139f3b2768647489c0e2"},{"date":"2023-07-26 16:45:13","docid":0,"id":418,"linecolor":"ff59c6ff","page":130,"rect":[0,106.91998291015625,1,107.91998291015625],"title":"代码","type":8,"uuid":"f5c4cf4549ca93258581d5bab8c24132"}],"page":129,"rect":[0,570.9199829101562,1,571.9199829101562],"title":"验证回文串","type":8,"uuid":"3030819d7f0297c7ba9cc8d918aa5fb7"},{"date":"2023-07-26 16:45:13","docid":0,"id":419,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":420,"linecolor":"ff59c6ff","page":130,"rect":[0,637.9199829101562,1,638.9199829101562],"title":"题目描述","type":8,"uuid":"2f8421a73b3d41e7119ae132c1de2946"},{"date":"2023-07-26 16:45:13","docid":0,"id":421,"linecolor":"ff59c6ff","page":131,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"解题思路","type":8,"uuid":"90ab34a85c25c31c8ae3236b51bce783"},{"date":"2023-07-26 16:45:13","docid":0,"id":422,"linecolor":"ff59c6ff","page":131,"rect":[0,144.91998291015625,1,145.91998291015625],"title":"代码","type":8,"uuid":"2310e35c11d52d818d2edd7d72fd5635"}],"page":130,"rect":[0,611.9199829101562,1,612.9199829101562],"title":"验证回文字符串 Ⅱ","type":8,"uuid":"1852f2db7d69d98d3bd2e5bf2fcf2740"},{"date":"2023-07-26 16:45:13","docid":0,"id":423,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":424,"linecolor":"ff59c6ff","page":132,"rect":[0,54.91998291015625,1,55.91998291015625],"title":"题目描述","type":8,"uuid":"17858667d93e2036ffab489d0e34a25d"},{"date":"2023-07-26 16:45:13","docid":0,"id":425,"linecolor":"ff59c6ff","page":132,"rect":[0,428.91998291015625,1,429.91998291015625],"title":"解题思路","type":8,"uuid":"4a3f37d2a1e3bef9fc22cf28f69c4866"},{"date":"2023-07-26 16:45:13","docid":0,"id":426,"linecolor":"ff59c6ff","page":132,"rect":[0,537.9199829101562,1,538.9199829101562],"title":"代码","type":8,"uuid":"8c84d273c7cb7377f5bd86119fa535bf"}],"page":132,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"根据字符串出现频率排序","type":8,"uuid":"dde2f8ba27a8175adc648502fb14a807"},{"date":"2023-07-26 16:45:13","docid":0,"id":427,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":428,"linecolor":"ff59c6ff","page":133,"rect":[0,300.91998291015625,1,301.91998291015625],"title":"题目描述","type":8,"uuid":"0a807fa3f9361fc73d6d4acbce95f8af"},{"date":"2023-07-26 16:45:13","docid":0,"id":429,"linecolor":"ff59c6ff","page":133,"rect":[0,485.91998291015625,1,486.91998291015625],"title":"解题思路","type":8,"uuid":"462669b9c54ddb637fb3f75c04fc0d5c"},{"date":"2023-07-26 16:45:13","docid":0,"id":430,"linecolor":"ff59c6ff","page":133,"rect":[0,533.9199829101562,1,534.9199829101562],"title":"代码","type":8,"uuid":"431f43126998a2474179b04381bbde0f"}],"page":133,"rect":[0,274.91998291015625,1,275.91998291015625],"title":"字符串中的单词","type":8,"uuid":"b0a6009d56de33942d2bdd882cb50e6d"},{"date":"2023-07-26 16:45:13","docid":0,"id":431,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":432,"linecolor":"ff59c6ff","page":134,"rect":[0,54.91998291015625,1,55.91998291015625],"title":"题目描述","type":8,"uuid":"209f0c4e313514deca271c67ded9a06a"},{"date":"2023-07-26 16:45:13","docid":0,"id":433,"linecolor":"ff59c6ff","page":134,"rect":[0,405.91998291015625,1,406.91998291015625],"title":"解题思路","type":8,"uuid":"4b8fac85792a751b0bdcc373d5040327"},{"date":"2023-07-26 16:45:13","docid":0,"id":434,"linecolor":"ff59c6ff","page":134,"rect":[0,453.91998291015625,1,454.91998291015625],"title":"代码","type":8,"uuid":"8bfe3f015f552a4ba930670e667fdae0"}],"page":134,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"前K个高频单词","type":8,"uuid":"9d7e8540215eadc990c47866af545b5c"},{"date":"2023-07-26 16:45:13","docid":0,"id":435,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":436,"linecolor":"ff59c6ff","page":135,"rect":[0,449.91998291015625,1,450.91998291015625],"title":"题目描述","type":8,"uuid":"84f41e719d292d3bfc5b77de35ac8cd5"},{"date":"2023-07-26 16:45:13","docid":0,"id":437,"linecolor":"ff59c6ff","page":135,"rect":[0,702.9199829101562,1,703.9199829101562],"title":"解题思路","type":8,"uuid":"9884ea72ef1d330697d921ed5b87806c"},{"date":"2023-07-26 16:45:13","docid":0,"id":438,"linecolor":"ff59c6ff","page":136,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"代码","type":8,"uuid":"302798d7a67335aec84d73a5acada391"}],"page":135,"rect":[0,423.91998291015625,1,424.91998291015625],"title":"检测大写字母","type":8,"uuid":"e37c898312377342d6e331d784c6e4e1"},{"date":"2023-07-26 16:45:13","docid":0,"id":439,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:13","docid":0,"id":440,"linecolor":"ff59c6ff","page":136,"rect":[0,332.91998291015625,1,333.91998291015625],"title":"题目描述","type":8,"uuid":"37b0f1068690c5dfe60681efdcf9e44a"},{"date":"2023-07-26 16:45:13","docid":0,"id":441,"linecolor":"ff59c6ff","page":136,"rect":[0,516.9199829101562,1,517.9199829101562],"title":"解题思路","type":8,"uuid":"c9a02b4cf4b710d59e6dbde33703b8e6"},{"date":"2023-07-26 16:45:13","docid":0,"id":442,"linecolor":"ff59c6ff","page":136,"rect":[0,564.9199829101562,1,565.9199829101562],"title":"代码","type":8,"uuid":"a64712a4236a032bb6214871ad3b2c74"}],"page":136,"rect":[0,306.91998291015625,1,307.91998291015625],"title":"最长的公共前缀","type":8,"uuid":"d62684910addfeb5517528cdd5eb314c"},{"date":"2023-07-26 16:45:13","docid":0,"id":443,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":444,"linecolor":"ff59c6ff","page":137,"rect":[0,54.91998291015625,1,55.91998291015625],"title":"题目描述","type":8,"uuid":"3e32a58ffb2ed9341d8b0733c64df0bb"},{"date":"2023-07-26 16:45:14","docid":0,"id":445,"linecolor":"ff59c6ff","page":137,"rect":[0,337.91998291015625,1,338.91998291015625],"title":"解题思路","type":8,"uuid":"824cfb05cd314cfa2a5c9034776e585b"},{"date":"2023-07-26 16:45:14","docid":0,"id":446,"linecolor":"ff59c6ff","page":137,"rect":[0,522.9199829101562,1,523.9199829101562],"title":"代码","type":8,"uuid":"fdd495eddf37f416ab872fe936f525bb"}],"page":137,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"最长特殊序列 Ⅰ","type":8,"uuid":"da4677fbd687ac3d1e3b7828e4bc1d4d"},{"date":"2023-07-26 16:45:14","docid":0,"id":447,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":448,"linecolor":"ff59c6ff","page":137,"rect":[0,664.9199829101562,1,665.9199829101562],"title":"题目描述","type":8,"uuid":"dcc55f35a49aaff72b6cd3ac3e4268b4"},{"date":"2023-07-26 16:45:14","docid":0,"id":449,"linecolor":"ff59c6ff","page":138,"rect":[0,121.91998291015625,1,122.91998291015625],"title":"解题思路","type":8,"uuid":"57d9fe6f3783e6e50fe9a0582611cb89"},{"date":"2023-07-26 16:45:14","docid":0,"id":450,"linecolor":"ff59c6ff","page":138,"rect":[0,321.91998291015625,1,322.91998291015625],"title":"代码","type":8,"uuid":"f6f1eec8060bcb02fa31c9f04a75e2cc"}],"page":137,"rect":[0,637.9199829101562,1,638.9199829101562],"title":"最长特殊序列 II","type":8,"uuid":"f1914ca2c10ce5aa8fd82d4a3c80b6e7"},{"date":"2023-07-26 16:45:14","docid":0,"id":451,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":452,"linecolor":"ff59c6ff","page":139,"rect":[0,503.91998291015625,1,504.91998291015625],"title":"题目描述","type":8,"uuid":"e6cab6f8a75ef313b2f048413ab0d423"},{"date":"2023-07-26 16:45:14","docid":0,"id":453,"linecolor":"ff59c6ff","page":140,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"解题思路","type":8,"uuid":"b3d674ac9243fc286bd842ba33ec0d2b"},{"date":"2023-07-26 16:45:14","docid":0,"id":454,"linecolor":"ff59c6ff","page":140,"rect":[0,121.91998291015625,1,122.91998291015625],"title":"代码","type":8,"uuid":"7ed8c50220819419afd613e74caa6676"}],"page":139,"rect":[0,477.91998291015625,1,478.91998291015625],"title":"计数二进制子串","type":8,"uuid":"0de975a574ab5228eadb87df7e12092f"},{"date":"2023-07-26 16:45:14","docid":0,"id":455,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":456,"linecolor":"ff59c6ff","page":140,"rect":[0,317.91998291015625,1,318.91998291015625],"title":"strcpy","type":8,"uuid":"34c2bba383562bb65ca65cec99620c1d"},{"date":"2023-07-26 16:45:14","docid":0,"id":457,"linecolor":"ff59c6ff","page":140,"rect":[0,419.91998291015625,1,420.91998291015625],"title":"strlen","type":8,"uuid":"61a432e7ef98778612151284631444e1"},{"date":"2023-07-26 16:45:14","docid":0,"id":458,"linecolor":"ff59c6ff","page":140,"rect":[0,548.9199829101562,1,549.9199829101562],"title":"strcat","type":8,"uuid":"6ea03bf7b325afbfd57191052dcdb552"},{"date":"2023-07-26 16:45:14","docid":0,"id":459,"linecolor":"ff59c6ff","page":140,"rect":[0,677.9199829101562,1,678.9199829101562],"title":"atoi","type":8,"uuid":"a3de57e2ab1bbcfcb1b8aaf6be03d9dd"},{"date":"2023-07-26 16:45:14","docid":0,"id":460,"linecolor":"ff59c6ff","page":141,"rect":[0,490.91998291015625,1,491.91998291015625],"title":"itoa","type":8,"uuid":"528363f5c0ccde28920fc4b5bc1b6e9e"},{"date":"2023-07-26 16:45:14","docid":0,"id":461,"linecolor":"ff59c6ff","page":142,"rect":[0,382.91998291015625,1,383.91998291015625],"title":"memmove","type":8,"uuid":"877b2a1a6fcf1ddac87f8744e23f2ca2"}],"page":140,"rect":[0,291.91998291015625,1,292.91998291015625],"title":"实现字符串的库函数","type":8,"uuid":"057972579d940b0fd346eb70d0a38fa3"}],"page":123,"rect":[0,486.91998291015625,1,487.91998291015625],"title":"字符串","type":8,"uuid":"091a96a1d6aa1596864cc8130cb1fe9e"},{"date":"2023-07-26 16:45:14","docid":0,"id":462,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":463,"linecolor":"ff59c6ff","page":143,"rect":[0,602.9199829101562,1,603.9199829101562],"title":"快速排序","type":8,"uuid":"f423f07c17691067c064572c2807bd59"},{"date":"2023-07-26 16:45:14","docid":0,"id":464,"linecolor":"ff59c6ff","page":145,"rect":[0,396.91998291015625,1,397.91998291015625],"title":"冒泡排序","type":8,"uuid":"73ba8c475b93236dc884fe29d8de0d60"},{"date":"2023-07-26 16:45:14","docid":0,"id":465,"linecolor":"ff59c6ff","page":146,"rect":[0,531.9199829101562,1,532.9199829101562],"title":"堆排序","type":8,"uuid":"dbe6e65b612c18f048f4af56b822e30a"},{"date":"2023-07-26 16:45:14","docid":0,"id":466,"linecolor":"ff59c6ff","page":148,"rect":[0,353.91998291015625,1,354.91998291015625],"title":"插入排序","type":8,"uuid":"f896e9ac1a571b77637433268415aca3"},{"date":"2023-07-26 16:45:14","docid":0,"id":467,"linecolor":"ff59c6ff","page":150,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"选择排序","type":8,"uuid":"45bf7e3574c1a4e0f565a7ef66668bf5"},{"date":"2023-07-26 16:45:14","docid":0,"id":468,"linecolor":"ff59c6ff","page":151,"rect":[0,672.9199829101562,1,673.9199829101562],"title":"归并排序","type":8,"uuid":"94d3e3381f82f0cf403e8be948cb49d5"},{"date":"2023-07-26 16:45:14","docid":0,"id":469,"linecolor":"ff59c6ff","page":155,"rect":[0,580.9199829101562,1,581.9199829101562],"title":"希尔排序","type":8,"uuid":"a2512e1fdaf408d2ac39873ec202438f"}],"page":143,"rect":[0,572.9199829101562,1,573.9199829101562],"title":"排序算法及其改进方法","type":8,"uuid":"8df251fdd4ead545c32a999a0fe8c831"}],"page":69,"rect":[0,575.9199829101562,1,576.9199829101562],"title":"数据结构与算法","type":8,"uuid":"d7b01e090b3d44556912029f0177f42c"},{"date":"2023-07-26 16:45:14","docid":0,"id":470,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":471,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":472,"linecolor":"ff59c6ff","page":157,"rect":[0,666.9199829101562,1,667.9199829101562],"title":"NAND FLASH 和NOR FLASH异同？","type":8,"uuid":"48b1f9f61bcbd811e8e9160422c6b101"},{"date":"2023-07-26 16:45:14","docid":0,"id":473,"linecolor":"ff59c6ff","page":159,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"CPU,MPU,MCU,SOC,SOPC联系与差别？","type":8,"uuid":"b8faee8be24b6ba89f2a6b424262b8d0"},{"date":"2023-07-26 16:45:14","docid":0,"id":474,"linecolor":"ff59c6ff","page":159,"rect":[0,508.91998291015625,1,509.91998291015625],"title":"什么是交叉编译？","type":8,"uuid":"394d9171f6e5046fa384e36a5fd99e32"},{"date":"2023-07-26 16:45:14","docid":0,"id":475,"linecolor":"ff59c6ff","page":159,"rect":[0,672.9199829101562,1,673.9199829101562],"title":"为什么需要交叉编译？","type":8,"uuid":"820e9f8f4c7b825817ab512fd10dc5b7"},{"date":"2023-07-26 16:45:14","docid":0,"id":476,"linecolor":"ff59c6ff","page":160,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"描述一下嵌入式基于ROM的运行方式和基于RAM的运行方式有什么区别？","type":8,"uuid":"78543e6173db0de3746d3eb3967fdbbb"}],"page":157,"rect":[0,636.9199829101562,1,637.9199829101562],"title":"硬件基础","type":8,"uuid":"b7f999ba2458efefe0e41bd25179ceac"},{"date":"2023-07-26 16:45:14","docid":0,"id":477,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":478,"linecolor":"ff59c6ff","page":160,"rect":[0,357.91998291015625,1,358.91998291015625],"title":"什么是哈佛结构和冯诺依曼结构？","type":8,"uuid":"667a06f01bba5894be3eaae7a771fdd3"},{"date":"2023-07-26 16:45:14","docid":0,"id":479,"linecolor":"ff59c6ff","page":160,"rect":[0,537.9199829101562,1,538.9199829101562],"title":"什么是ARM流水线技术？","type":8,"uuid":"aba2f4c228c5f6ac25ceafcf069e5e21"},{"date":"2023-07-26 16:45:14","docid":0,"id":480,"linecolor":"ff59c6ff","page":161,"rect":[0,278.91998291015625,1,279.91998291015625],"title":"ARM有几种工作模式？","type":8,"uuid":"869868b33a6530a59108a26a1dbfe54a"},{"date":"2023-07-26 16:45:14","docid":0,"id":481,"linecolor":"ff59c6ff","page":162,"rect":[0,234.91998291015625,1,235.91998291015625],"title":"Arm有多少32位寄存器？","type":8,"uuid":"10df0428916ac041619c98dbac9ef555"},{"date":"2023-07-26 16:45:14","docid":0,"id":482,"linecolor":"ff59c6ff","page":162,"rect":[0,285.91998291015625,1,286.91998291015625],"title":"Arm2440和6410有什么区别？","type":8,"uuid":"e9ee71c5260b8c4b0781a02aa35c23c1"},{"date":"2023-07-26 16:45:14","docid":0,"id":483,"linecolor":"ff59c6ff","page":162,"rect":[0,516.9199829101562,1,517.9199829101562],"title":"ARM指令集分为几类？","type":8,"uuid":"8e10a13ca0d2d1b5c7f334dcc186786a"},{"date":"2023-07-26 16:45:14","docid":0,"id":484,"linecolor":"ff59c6ff","page":162,"rect":[0,582.9199829101562,1,583.9199829101562],"title":"通用寄存器包括R0～R15，可以分为具体哪三类？","type":8,"uuid":"e4ec523d15ba56d2d02da295e44f709a"},{"date":"2023-07-26 16:45:14","docid":0,"id":485,"linecolor":"ff59c6ff","page":163,"rect":[0,88.91998291015625,1,89.91998291015625],"title":"Arm处理器有几种工作状态？","type":8,"uuid":"d5e4e61c7950e82ab3131d22033baf03"},{"date":"2023-07-26 16:45:14","docid":0,"id":486,"linecolor":"ff59c6ff","page":163,"rect":[0,177.91998291015625,1,178.91998291015625],"title":"ARM系统中，在函数调用的时候，参数是通过哪种方式传递的？","type":8,"uuid":"8beedad42fb39898eb52db549afd3d24"},{"date":"2023-07-26 16:45:14","docid":0,"id":487,"linecolor":"ff59c6ff","page":163,"rect":[0,243.91998291015625,1,244.91998291015625],"title":"为什么2440的内存起始地址是0x30000000？","type":8,"uuid":"1ad953c4dd0506a074b58750070b0713"},{"date":"2023-07-26 16:45:14","docid":0,"id":488,"linecolor":"ff59c6ff","page":163,"rect":[0,708.9199829101562,1,709.9199829101562],"title":"ARM协处理器指令包括哪3类，请描述它们的功能。","type":8,"uuid":"7d7b609303f1f82502cb13223dd16410"},{"date":"2023-07-26 16:45:14","docid":0,"id":489,"linecolor":"ff59c6ff","page":164,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"什么是PLL（锁相环）？","type":8,"uuid":"b1bec6a758cd67c4de1d67f91e4992f5"}],"page":160,"rect":[0,327.91998291015625,1,328.91998291015625],"title":"ARM处理器","type":8,"uuid":"7a8afc972841a7d441ada5001a1eeb79"},{"date":"2023-07-26 16:45:14","docid":0,"id":490,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":491,"linecolor":"ff59c6ff","page":164,"rect":[0,341.91998291015625,1,342.91998291015625],"title":"中断与异常有何区别？","type":8,"uuid":"ef1ca43e945b723b4d3f0b93318589a5"},{"date":"2023-07-26 16:45:14","docid":0,"id":492,"linecolor":"ff59c6ff","page":164,"rect":[0,459.91998291015625,1,460.91998291015625],"title":"中断与DMA有何区别？","type":8,"uuid":"081397bea981fd516750e12c1b4f6c09"},{"date":"2023-07-26 16:45:14","docid":0,"id":493,"linecolor":"ff59c6ff","page":164,"rect":[0,586.9199829101562,1,587.9199829101562],"title":"中断能不能睡眠，为什么？下半部能不能睡眠？","type":8,"uuid":"840346566288d2773b4a5ce5663933e3"},{"date":"2023-07-26 16:45:14","docid":0,"id":494,"linecolor":"ff59c6ff","page":165,"rect":[0,171.91998291015625,1,172.91998291015625],"title":"中断的响应执行流程是什么？","type":8,"uuid":"ab3458061ff4391635ca2a166a62132f"},{"date":"2023-07-26 16:45:14","docid":0,"id":495,"linecolor":"ff59c6ff","page":165,"rect":[0,237.91998291015625,1,238.91998291015625],"title":"当一个异常出现以后，ARM微处理器会执行哪几步操作？","type":8,"uuid":"7f25570b1c8b8734c364a54921cda4b2"},{"date":"2023-07-26 16:45:14","docid":0,"id":496,"linecolor":"ff59c6ff","page":165,"rect":[0,408.91998291015625,1,409.91998291015625],"title":"写一个中断服务需要注意哪些？如果中断产生之后要做比较多的事情你是怎么做的？","type":8,"uuid":"7d73d03a5a2a87b45b04746509e058bf"},{"date":"2023-07-26 16:45:14","docid":0,"id":497,"linecolor":"ff59c6ff","page":165,"rect":[0,573.9199829101562,1,574.9199829101562],"title":"为什么FIQ比IRQ要快？","type":8,"uuid":"2cf3119558e798db557a0f979b071608"},{"date":"2023-07-26 16:45:14","docid":0,"id":498,"linecolor":"ff59c6ff","page":166,"rect":[0,98.91998291015625,1,99.91998291015625],"title":"中断和轮询哪个效率高？怎样决定是采用中断方式还是采用轮询方式去实现驱动？","type":8,"uuid":"1416838ec1a877b84dd3e27ad010ffba"}],"page":164,"rect":[0,311.91998291015625,1,312.91998291015625],"title":"中断与异常","type":8,"uuid":"be0d4175624ceb7c70667dce03ae20af"},{"date":"2023-07-26 16:45:14","docid":0,"id":499,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":500,"linecolor":"ff59c6ff","page":166,"rect":[0,366.91998291015625,1,367.91998291015625],"title":"什么是异步传输和同步传输？","type":8,"uuid":"47e5268f6c52ab309d463a7ad9af5149"},{"date":"2023-07-26 16:45:14","docid":0,"id":501,"linecolor":"ff59c6ff","page":166,"rect":[0,454.91998291015625,1,455.91998291015625],"title":"RS232和RS485通讯接口有什么区别？","type":8,"uuid":"2c7f17fc3cbf7e2a4fd9eb5ebc2e27a6"},{"date":"2023-07-26 16:45:14","docid":0,"id":502,"linecolor":"ff59c6ff","page":166,"rect":[0,649.9199829101562,1,650.9199829101562],"title":"SPI协议","type":8,"uuid":"05e7eb176290d4381dc7e50fdc2ca6a1"},{"date":"2023-07-26 16:45:14","docid":0,"id":503,"linecolor":"ff59c6ff","page":168,"rect":[0,613.9199829101562,1,614.9199829101562],"title":"IIC协议","type":8,"uuid":"15de45a37b2b5d47a05687fdd939d125"}],"page":166,"rect":[0,336.91998291015625,1,337.91998291015625],"title":"通信协议","type":8,"uuid":"b6cb4795b3d3b59dd456189b1e6257dc"},{"date":"2023-07-26 16:45:14","docid":0,"id":504,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":505,"linecolor":"ff59c6ff","page":171,"rect":[0,535.9199829101562,1,536.9199829101562],"title":"嵌人式编程中，什么是大端？什么是小端？","type":8,"uuid":"55fe776462ed4401ef0616e1cd3d5996"},{"date":"2023-07-26 16:45:14","docid":0,"id":506,"linecolor":"ff59c6ff","page":174,"rect":[0,551.9199829101562,1,552.9199829101562],"title":"如何判断计算机处理器是大端，还是小端？","type":8,"uuid":"616049a61cf98809edd0f812fbd9f773"},{"date":"2023-07-26 16:45:14","docid":0,"id":507,"linecolor":"ff59c6ff","page":175,"rect":[0,480.91998291015625,1,481.91998291015625],"title":"如何进行大小端的转换？","type":8,"uuid":"2054f981147b4ecd225c77b7166419c5"},{"date":"2023-07-26 16:45:14","docid":0,"id":508,"linecolor":"ff59c6ff","page":176,"rect":[0,477.91998291015625,1,478.91998291015625],"title":"如何对绝对地址0x100000赋值？","type":8,"uuid":"b666c7b0d1a14be4ee02d32181338bb1"}],"page":171,"rect":[0,505.91998291015625,1,506.91998291015625],"title":"编程","type":8,"uuid":"8867bf1f606002d27ea7adf88cb0a146"}],"page":156,"rect":[0,736.9199829101562,1,737.9199829101562],"title":"ARM体系与架构","type":8,"uuid":"79b5b58f94dfb9ba4886c53a7da1669c"},{"date":"2023-07-26 16:45:14","docid":0,"id":509,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":510,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":511,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":512,"linecolor":"ff59c6ff","page":178,"rect":[0,84.91998291015625,1,85.91998291015625],"title":"怎么查看当前进程？怎么执行退出？怎么查看当前路径？","type":8,"uuid":"0d1a73c62d3e6f8fb2a73e9e716110dd"},{"date":"2023-07-26 16:45:14","docid":0,"id":513,"linecolor":"ff59c6ff","page":178,"rect":[0,178.91998291015625,1,179.91998291015625],"title":"ls 命令执行什么功能？ 可以带哪些参数？","type":8,"uuid":"a620f17b78a0bb9f3ab74c449b838601"},{"date":"2023-07-26 16:45:14","docid":0,"id":514,"linecolor":"ff59c6ff","page":178,"rect":[0,384.91998291015625,1,385.91998291015625],"title":"创建目录用什么命令？","type":8,"uuid":"50f0e9a187555cecd8fc0020b61adcb9"},{"date":"2023-07-26 16:45:14","docid":0,"id":515,"linecolor":"ff59c6ff","page":178,"rect":[0,486.91998291015625,1,487.91998291015625],"title":"创建文件用什么命令？","type":8,"uuid":"9e7c2dde5d761e572c2905e71d49871d"},{"date":"2023-07-26 16:45:14","docid":0,"id":516,"linecolor":"ff59c6ff","page":179,"rect":[0,231.91998291015625,1,232.91998291015625],"title":"复制文件用什么命令？","type":8,"uuid":"a98d093df1cd1db0678d7815e8f5bf87"},{"date":"2023-07-26 16:45:14","docid":0,"id":517,"linecolor":"ff59c6ff","page":179,"rect":[0,292.91998291015625,1,293.91998291015625],"title":"查看文件内容有哪些命令可以使用？","type":8,"uuid":"822967261152ced1f10bc9c2608ea292"},{"date":"2023-07-26 16:45:14","docid":0,"id":518,"linecolor":"ff59c6ff","page":179,"rect":[0,421.91998291015625,1,422.91998291015625],"title":"怎么向屏幕输出带空格的字符串，比如”hello world”?","type":8,"uuid":"a0f9bc7f876da982eb5a093a7421e807"},{"date":"2023-07-26 16:45:14","docid":0,"id":519,"linecolor":"ff59c6ff","page":179,"rect":[0,483.91998291015625,1,484.91998291015625],"title":"移动文件用哪个命令？改名用哪个命令？","type":8,"uuid":"2950af9c0ec86b4470bd88fc8422573f"},{"date":"2023-07-26 16:45:14","docid":0,"id":520,"linecolor":"ff59c6ff","page":179,"rect":[0,585.9199829101562,1,586.9199829101562],"title":"删除文件用哪个命令？如果需要连目录及目录下文件一块删除呢？删除空文件夹用什么命令？","type":8,"uuid":"563e370ad96acb9e1bb55d1a20ae7633"},{"date":"2023-07-26 16:45:14","docid":0,"id":521,"linecolor":"ff59c6ff","page":179,"rect":[0,673.9199829101562,1,674.9199829101562],"title":"查找文件内容用哪个命令？","type":8,"uuid":"0a3495bfa0b02464a7b91af38e639a61"},{"date":"2023-07-26 16:45:14","docid":0,"id":522,"linecolor":"ff59c6ff","page":180,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"查找文件用哪个命令？","type":8,"uuid":"17d815f869067eeaac1e6608c4925e64"},{"date":"2023-07-26 16:45:14","docid":0,"id":523,"linecolor":"ff59c6ff","page":180,"rect":[0,103.91998291015625,1,104.91998291015625],"title":"cat命令","type":8,"uuid":"8030fb36edd564cbdff93b89bee7d03f"}],"page":178,"rect":[0,58.91998291015625,1,59.91998291015625],"title":"常用的Linux指令","type":8,"uuid":"298617274d788b3ab85d48f460d8cd3e"},{"date":"2023-07-26 16:45:14","docid":0,"id":524,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":525,"linecolor":"ff59c6ff","page":180,"rect":[0,258.91998291015625,1,259.91998291015625],"title":"预处理","type":8,"uuid":"2fca76363bc5bd7e5131b1cf079491bd"},{"date":"2023-07-26 16:45:14","docid":0,"id":526,"linecolor":"ff59c6ff","page":180,"rect":[0,320.91998291015625,1,321.91998291015625],"title":"编译为汇编代码","type":8,"uuid":"951877be7fc4567aea3675fc7f886b86"},{"date":"2023-07-26 16:45:14","docid":0,"id":527,"linecolor":"ff59c6ff","page":180,"rect":[0,381.91998291015625,1,382.91998291015625],"title":"汇编","type":8,"uuid":"6635fe529ea08a8da9538aee4ce4b9f6"},{"date":"2023-07-26 16:45:14","docid":0,"id":528,"linecolor":"ff59c6ff","page":180,"rect":[0,443.91998291015625,1,444.91998291015625],"title":"链接","type":8,"uuid":"be3cdac18164a735d7d922cb0a957487"},{"date":"2023-07-26 16:45:14","docid":0,"id":529,"linecolor":"ff59c6ff","page":180,"rect":[0,504.91998291015625,1,505.91998291015625],"title":"一步到位编译","type":8,"uuid":"387a29ad4cd72f8e467c0824a6e7e22c"},{"date":"2023-07-26 16:45:14","docid":0,"id":530,"linecolor":"ff59c6ff","page":180,"rect":[0,566.9199829101562,1,567.9199829101562],"title":"多文件编译","type":8,"uuid":"699f653dd79f3cd42ab11565478b4113"},{"date":"2023-07-26 16:45:14","docid":0,"id":531,"linecolor":"ff59c6ff","page":180,"rect":[0,628.9199829101562,1,629.9199829101562],"title":"警告处理","type":8,"uuid":"20d7c906b002bf69a082e499c1dab263"}],"page":180,"rect":[0,232.91998291015625,1,233.91998291015625],"title":"常用的GCC指令  ","type":8,"uuid":"80ffc515615a4f485b479d90fa6b1810"},{"date":"2023-07-26 16:45:14","docid":0,"id":532,"linecolor":"ff59c6ff","page":180,"rect":[0,716.9199829101562,1,717.9199829101562],"title":"常用的GDB调试指令","type":8,"uuid":"d41b294428208cf3be4433eed357e770"},{"date":"2023-07-26 16:45:14","docid":0,"id":533,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":534,"linecolor":"ff59c6ff","page":181,"rect":[0,395.91998291015625,1,396.91998291015625],"title":"加载/卸载驱动","type":8,"uuid":"66b8799f5daa3f271e20d4979d80d78e"},{"date":"2023-07-26 16:45:14","docid":0,"id":535,"linecolor":"ff59c6ff","page":181,"rect":[0,470.91998291015625,1,471.91998291015625],"title":"Linux驱动如何查看驱动模块中打印信息？","type":8,"uuid":"0228e6669524eb5ea84846a00c2f229c"},{"date":"2023-07-26 16:45:14","docid":0,"id":536,"linecolor":"ff59c6ff","page":181,"rect":[0,531.9199829101562,1,532.9199829101562],"title":"如何查看内核中已有的字符设备的信息？","type":8,"uuid":"929d56735852cee525217cbb469d63f7"},{"date":"2023-07-26 16:45:14","docid":0,"id":537,"linecolor":"ff59c6ff","page":181,"rect":[0,595.9199829101562,1,596.9199829101562],"title":"如何查看正在使用的有哪些中断号？","type":8,"uuid":"2895986c1e44ae19153974ad3a32007c"}],"page":181,"rect":[0,369.91998291015625,1,370.91998291015625],"title":"常用的驱动开发指令","type":8,"uuid":"c08a661fe7a8b2aed6f9767d6499d207"}],"page":178,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"指令","type":8,"uuid":"6a5ad34ba26bf7306b5c54a202972e62"},{"date":"2023-07-26 16:45:14","docid":0,"id":538,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":539,"linecolor":"ff59c6ff","page":182,"rect":[0,58.91998291015625,1,59.91998291015625],"title":"什么是bootloader？","type":8,"uuid":"ad2bf54827f13faf5e4307b1f7cf52c3"},{"date":"2023-07-26 16:45:14","docid":0,"id":540,"linecolor":"ff59c6ff","page":182,"rect":[0,207.91998291015625,1,208.91998291015625],"title":"uboot启动过程中做了那些事？","type":8,"uuid":"2144d4b82925e493ba880843163e8c94"},{"date":"2023-07-26 16:45:14","docid":0,"id":541,"linecolor":"ff59c6ff","page":182,"rect":[0,379.91998291015625,1,380.91998291015625],"title":"uboot和内核如何完成参数传递？","type":8,"uuid":"738da174d2a938ed9673a55390318531"},{"date":"2023-07-26 16:45:14","docid":0,"id":542,"linecolor":"ff59c6ff","page":183,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"为什么要给内核传递参数呢？","type":8,"uuid":"297b134d2c916d03c864f886f9f66f11"},{"date":"2023-07-26 16:45:14","docid":0,"id":543,"linecolor":"ff59c6ff","page":183,"rect":[0,124.91998291015625,1,125.91998291015625],"title":"如何给内核传递参数？","type":8,"uuid":"54dd6efb3d94416a4fc41874ccfb9221"},{"date":"2023-07-26 16:45:14","docid":0,"id":544,"linecolor":"ff59c6ff","page":184,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"为什么uboot要关掉caches？","type":8,"uuid":"6b6b213e2b5b4e5b8066762e88bd689f"}],"page":182,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"uboot","type":8,"uuid":"e4ae4cd8935517c7d5b3c8ac4dcdbd10"},{"date":"2023-07-26 16:45:14","docid":0,"id":545,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":546,"linecolor":"ff59c6ff","page":184,"rect":[0,288.91998291015625,1,289.91998291015625],"title":"什么是根文件系统？","type":8,"uuid":"14b55a42c141d223899a1b254b61dbfa"},{"date":"2023-07-26 16:45:14","docid":0,"id":547,"linecolor":"ff59c6ff","page":184,"rect":[0,437.91998291015625,1,438.91998291015625],"title":"根文件系统为什么这么重要？","type":8,"uuid":"995e5bc69af79c3765c8fdd59b750eb0"},{"date":"2023-07-26 16:45:14","docid":0,"id":548,"linecolor":"ff59c6ff","page":184,"rect":[0,624.9199829101562,1,625.9199829101562],"title":"可执行映像文件通常由几部分构成，它们有什么特点？","type":8,"uuid":"e35e3fc9424ce613bbecbae5bee1f747"}],"page":184,"rect":[0,258.91998291015625,1,259.91998291015625],"title":"文件系统","type":8,"uuid":"9de920474a995b1dbaf528c1104f2bcc"},{"date":"2023-07-26 16:45:14","docid":0,"id":549,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":550,"linecolor":"ff59c6ff","page":185,"rect":[0,194.91998291015625,1,195.91998291015625],"title":"硬中断 / 软中断是什么？有什么区别？","type":8,"uuid":"a7ca8040f9bf29d6a26df531c92c5f7a"},{"date":"2023-07-26 16:45:14","docid":0,"id":551,"linecolor":"ff59c6ff","page":185,"rect":[0,689.9199829101562,1,690.9199829101562],"title":"中断为什么要区分上半部和下半部？","type":8,"uuid":"1e9eaa5b71156f26c05f7aa44baa0cda"},{"date":"2023-07-26 16:45:14","docid":0,"id":552,"linecolor":"ff59c6ff","page":186,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"中断下半部一般如何实现？","type":8,"uuid":"e8ef065d0a4565e8fb1a7a255ce1d5a5"},{"date":"2023-07-26 16:45:14","docid":0,"id":553,"linecolor":"ff59c6ff","page":186,"rect":[0,102.91998291015625,1,103.91998291015625],"title":"linux中断的响应执行流程？中断的申请及何时执行(何时执行中断处理函数)？","type":8,"uuid":"af3c142ce87ace113d1d11c4ffa03f2e"}],"page":185,"rect":[0,164.91998291015625,1,165.91998291015625],"title":"中断","type":8,"uuid":"c669df9913022349ff991c9d812ffba3"},{"date":"2023-07-26 16:45:14","docid":0,"id":554,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":555,"linecolor":"ff59c6ff","page":186,"rect":[0,394.91998291015625,1,395.91998291015625],"title":"字符设备驱动模型","type":8,"uuid":"9481b327eaf8f022f13a381869dd21ce"},{"date":"2023-07-26 16:45:14","docid":0,"id":556,"linecolor":"ff59c6ff","page":193,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"LCD驱动模型","type":8,"uuid":"763bd20d044b1bf9cc2969728c10e433"},{"date":"2023-07-26 16:45:14","docid":0,"id":557,"linecolor":"ff59c6ff","page":200,"rect":[0,247.91998291015625,1,248.91998291015625],"title":"总线设备驱动模型","type":8,"uuid":"8208842886b12ce93111877581c875b6"},{"date":"2023-07-26 16:45:14","docid":0,"id":558,"linecolor":"ff59c6ff","page":201,"rect":[0,444.91998291015625,1,445.91998291015625],"title":"输入子系统模型","type":8,"uuid":"26948c47c7d741a7eabdb62e7c7f30f4"},{"date":"2023-07-26 16:45:14","docid":0,"id":559,"linecolor":"ff59c6ff","page":202,"rect":[0,551.9199829101562,1,552.9199829101562],"title":"platform总线的匹配规则是什么？在具体应用上要不要先注册驱动再注册设备？有先后顺序没？","type":8,"uuid":"508df4a570a1f3dc24cf55489889daaa"}],"page":186,"rect":[0,324.91998291015625,1,325.91998291015625],"title":"Linux驱动模型","type":8,"uuid":"66fdee9754a17376b99d44f711aebbd1"},{"date":"2023-07-26 16:45:14","docid":0,"id":560,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":561,"linecolor":"ff59c6ff","page":203,"rect":[0,194.91998291015625,1,195.91998291015625],"title":"内核镜像格式有几种？分别有什么区别？","type":8,"uuid":"dbe5edc93b6a083a2b09c284a70ee672"},{"date":"2023-07-26 16:45:14","docid":0,"id":562,"linecolor":"ff59c6ff","page":203,"rect":[0,628.9199829101562,1,629.9199829101562],"title":"内核中申请内存有哪几个函数？有什么区别？","type":8,"uuid":"e92e1b865263b84692477fd209137255"},{"date":"2023-07-26 16:45:14","docid":0,"id":563,"linecolor":"ff59c6ff","page":204,"rect":[0,455.91998291015625,1,456.91998291015625],"title":"什么是内核空间，用户空间？","type":8,"uuid":"45598363107dc5591648a77a6d0fe2a8"},{"date":"2023-07-26 16:45:14","docid":0,"id":564,"linecolor":"ff59c6ff","page":205,"rect":[0,281.91998291015625,1,282.91998291015625],"title":"为什么需要区分内核空间与用户空间？","type":8,"uuid":"a3117b464e835e958d5e9feb925ae6ec"},{"date":"2023-07-26 16:45:14","docid":0,"id":565,"linecolor":"ff59c6ff","page":205,"rect":[0,438.91998291015625,1,439.91998291015625],"title":"什么是内核态和用户态？","type":8,"uuid":"4ebe35bd05c08f9df3db171a1634e9c3"},{"date":"2023-07-26 16:45:14","docid":0,"id":566,"linecolor":"ff59c6ff","page":205,"rect":[0,685.9199829101562,1,686.9199829101562],"title":"用户空间与内核通信方式有哪些？","type":8,"uuid":"441fe87f228b00af25f41dea93fe099e"},{"date":"2023-07-26 16:45:14","docid":0,"id":567,"linecolor":"ff59c6ff","page":206,"rect":[0,501.91998291015625,1,502.91998291015625],"title":"内核链表为什么具有通用性？","type":8,"uuid":"9aa3851d9c14e4389929d410a6369e61"},{"date":"2023-07-26 16:45:14","docid":0,"id":568,"linecolor":"ff59c6ff","page":207,"rect":[0,98.91998291015625,1,99.91998291015625],"title":"应用程序中open()在linux中执行过程中是如何从用户空间到内核空间？","type":8,"uuid":"1ee7d449dfa2b0e851448f98ddad0119"},{"date":"2023-07-26 16:45:14","docid":0,"id":569,"linecolor":"ff59c6ff","page":207,"rect":[0,306.91998291015625,1,307.91998291015625],"title":"怎样申请大块内核内存？","type":8,"uuid":"c6a53e59bb03c40c4672c8844fd52e2d"}],"page":203,"rect":[0,164.91998291015625,1,165.91998291015625],"title":"Linux内核","type":8,"uuid":"85eb861629deb7ccaeb20a4a69bbc3ef"},{"date":"2023-07-26 16:45:14","docid":0,"id":570,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":571,"linecolor":"ff59c6ff","page":207,"rect":[0,522.9199829101562,1,523.9199829101562],"title":"请简述主设备号和次设备号的用途。","type":8,"uuid":"c961b6b9fe61ce39fdaaa08db4f50cb0"},{"date":"2023-07-26 16:45:14","docid":0,"id":572,"linecolor":"ff59c6ff","page":207,"rect":[0,640.9199829101562,1,641.9199829101562],"title":"字符型驱动设备怎么创建设备文件？","type":8,"uuid":"f6459778df09fc643e0076200d8453de"},{"date":"2023-07-26 16:45:14","docid":0,"id":573,"linecolor":"ff59c6ff","page":208,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"设备驱动程序中如何注册一个字符设备？分别解释一下它的几个参数的含义。","type":8,"uuid":"b3eb9c062080cd52b87db07dc3f908aa"},{"date":"2023-07-26 16:45:14","docid":0,"id":574,"linecolor":"ff59c6ff","page":208,"rect":[0,234.91998291015625,1,235.91998291015625],"title":"/dev/下面的设备文件是怎么创建出来的？","type":8,"uuid":"2a9bc0de570d8e71a44bce31631c8791"},{"date":"2023-07-26 16:45:14","docid":0,"id":575,"linecolor":"ff59c6ff","page":208,"rect":[0,398.91998291015625,1,399.91998291015625],"title":"Linux设备中字符设备和块设备有什么主要区别？分别举例。","type":8,"uuid":"1205b198833148341d2d6861b3715d31"},{"date":"2023-07-26 16:45:14","docid":0,"id":576,"linecolor":"ff59c6ff","page":208,"rect":[0,555.9199829101562,1,556.9199829101562],"title":"驱动中操作物理绝对地址为什么要先ioremap？","type":8,"uuid":"ac95126ee0b2e50c84098b7f1865eb33"},{"date":"2023-07-26 16:45:14","docid":0,"id":577,"linecolor":"ff59c6ff","page":208,"rect":[0,651.9199829101562,1,652.9199829101562],"title":"insmod，rmmod一个驱动模块,会执行模块中的哪个函数？在设计上要注意哪些问题？","type":8,"uuid":"55a0df5438ff856d6ef3c4a31b654137"},{"date":"2023-07-26 16:45:14","docid":0,"id":578,"linecolor":"ff59c6ff","page":209,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"NAND驱动的probe流程","type":8,"uuid":"b814d29c51c523abcc40897ecbe13d75"},{"date":"2023-07-26 16:45:14","docid":0,"id":579,"linecolor":"ff59c6ff","page":209,"rect":[0,139.91998291015625,1,140.91998291015625],"title":"Linux驱动开发中，常用的调试方法有哪些？","type":8,"uuid":"f4f16bc3ea7db3a05bb402b672612210"}],"page":207,"rect":[0,492.91998291015625,1,493.91998291015625],"title":"设备驱动","type":8,"uuid":"d24d19ef3835a4f937935b8e296b47bd"},{"date":"2023-07-26 16:45:14","docid":0,"id":580,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":581,"linecolor":"ff59c6ff","page":209,"rect":[0,429.91998291015625,1,430.91998291015625],"title":"ioremap","type":8,"uuid":"b6e0158fbaf1ce77de751906719679b8"},{"date":"2023-07-26 16:45:14","docid":0,"id":582,"linecolor":"ff59c6ff","page":210,"rect":[0,68.91998291015625,1,69.91998291015625],"title":"open","type":8,"uuid":"6c345a3fdf28f5574c67937dcad26bf9"},{"date":"2023-07-26 16:45:14","docid":0,"id":583,"linecolor":"ff59c6ff","page":210,"rect":[0,279.91998291015625,1,280.91998291015625],"title":"read","type":8,"uuid":"d178dc84d83c42bbf210ffbd4d018bbe"},{"date":"2023-07-26 16:45:14","docid":0,"id":584,"linecolor":"ff59c6ff","page":210,"rect":[0,560.9199829101562,1,561.9199829101562],"title":"write","type":8,"uuid":"b90f44447eb276dd516932aff42f275b"},{"date":"2023-07-26 16:45:14","docid":0,"id":585,"linecolor":"ff59c6ff","page":211,"rect":[0,158.91998291015625,1,159.91998291015625],"title":"copy_to_user","type":8,"uuid":"d4e7f81ba7e8bfadc582022f60814ec5"},{"date":"2023-07-26 16:45:14","docid":0,"id":586,"linecolor":"ff59c6ff","page":211,"rect":[0,432.91998291015625,1,433.91998291015625],"title":"copy_from_user","type":8,"uuid":"fe392083d614b9641a147127dea49add"}],"page":209,"rect":[0,399.91998291015625,1,400.91998291015625],"title":"Linux驱动开发常用函数","type":8,"uuid":"d4b36996b24d930cf2be351ace7b802f"}],"page":177,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"Linux驱动   ","type":8,"uuid":"49e44726117a8a8a7ebe2b8fca3f81a6"},{"date":"2023-07-26 16:45:14","docid":0,"id":587,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":588,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":589,"linecolor":"ff59c6ff","page":213,"rect":[0,267.91998291015625,1,268.91998291015625],"title":"什么是进程？什么是线程？","type":8,"uuid":"a0c2326cc8938a9ccb4d7a79a1b1f426"},{"date":"2023-07-26 16:45:14","docid":0,"id":590,"linecolor":"ff59c6ff","page":213,"rect":[0,341.91998291015625,1,342.91998291015625],"title":"进程和线程有什么区别？","type":8,"uuid":"86a40fca47c6efd4bea95b78fbaf3026"},{"date":"2023-07-26 16:45:14","docid":0,"id":591,"linecolor":"ff59c6ff","page":213,"rect":[0,602.9199829101562,1,603.9199829101562],"title":"何时使用多进程，何时使用多线程？","type":8,"uuid":"fbca64ed4dc1721a48ed0d75068c611e"},{"date":"2023-07-26 16:45:14","docid":0,"id":592,"linecolor":"ff59c6ff","page":213,"rect":[0,676.9199829101562,1,677.9199829101562],"title":"进程有几种状态？画一下进程状态转换图？","type":8,"uuid":"aeb34ab90ae02b03862a8eacad422480"},{"date":"2023-07-26 16:45:14","docid":0,"id":593,"linecolor":"ff59c6ff","page":214,"rect":[0,510.91998291015625,1,511.91998291015625],"title":"创建进程有哪几种方式?","type":8,"uuid":"0c3cc6e09a2d355f26cfb0e7b95aac93"},{"date":"2023-07-26 16:45:14","docid":0,"id":594,"linecolor":"ff59c6ff","page":215,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"进程间通信方式有哪些？有什么优缺点？","type":8,"uuid":"89544f306c002730e04be6bbea550b07"},{"date":"2023-07-26 16:45:14","docid":0,"id":595,"linecolor":"ff59c6ff","page":216,"rect":[0,204.91998291015625,1,205.91998291015625],"title":"线程间同步方法有哪些？","type":8,"uuid":"02d2592c06334e9eafed1ec36aa13f23"},{"date":"2023-07-26 16:45:14","docid":0,"id":596,"linecolor":"ff59c6ff","page":216,"rect":[0,428.91998291015625,1,429.91998291015625],"title":"什么是内核线程和用户线程？","type":8,"uuid":"ed06bbeb947c069c26955c4c72c848c6"},{"date":"2023-07-26 16:45:14","docid":0,"id":597,"linecolor":"ff59c6ff","page":216,"rect":[0,561.9199829101562,1,562.9199829101562],"title":"内核线程和用户线程的区别？","type":8,"uuid":"e41843e02c64ae6f8c027cc2d2a8710d"},{"date":"2023-07-26 16:45:14","docid":0,"id":598,"linecolor":"ff59c6ff","page":217,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"内核线程和用户线程有什么优缺点？","type":8,"uuid":"ca7a81dff21f2badf10fbd9303c1778d"},{"date":"2023-07-26 16:45:14","docid":0,"id":599,"linecolor":"ff59c6ff","page":217,"rect":[0,344.91998291015625,1,345.91998291015625],"title":"什么是僵尸进程，孤儿进程，守护进程？","type":8,"uuid":"d774e6229145956c886379b2236bc05e"},{"date":"2023-07-26 16:45:14","docid":0,"id":600,"linecolor":"ff59c6ff","page":217,"rect":[0,523.9199829101562,1,524.9199829101562],"title":"僵尸进程有什么危害？","type":8,"uuid":"5dd647c36883d7b19b0583fa70879832"},{"date":"2023-07-26 16:45:14","docid":0,"id":601,"linecolor":"ff59c6ff","page":217,"rect":[0,657.9199829101562,1,658.9199829101562],"title":"如何清理僵尸进程？","type":8,"uuid":"9e2679b70be4fbd46c3db88fb40ad3d6"},{"date":"2023-07-26 16:45:14","docid":0,"id":602,"linecolor":"ff59c6ff","page":218,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"如何唤醒被阻塞的socket线程？","type":8,"uuid":"04dd341462952968583af8b9e80fdf99"},{"date":"2023-07-26 16:45:14","docid":0,"id":603,"linecolor":"ff59c6ff","page":218,"rect":[0,237.91998291015625,1,238.91998291015625],"title":"如何确定当前线程是繁忙还是阻塞？","type":8,"uuid":"4006b43ba56342f3e0a32f86b045c138"},{"date":"2023-07-26 16:45:14","docid":0,"id":604,"linecolor":"ff59c6ff","page":218,"rect":[0,288.91998291015625,1,289.91998291015625],"title":"空闲的进程和阻塞的进程状态会不会在唤醒的时候误判？","type":8,"uuid":"e887d495e56358f522e4c218ffbe128f"},{"date":"2023-07-26 16:45:14","docid":0,"id":605,"linecolor":"ff59c6ff","page":218,"rect":[0,354.91998291015625,1,355.91998291015625],"title":"请问就绪状态的进程在等待什么？","type":8,"uuid":"3897b12326f80a05b4513b3d5c3338ca"},{"date":"2023-07-26 16:45:14","docid":0,"id":606,"linecolor":"ff59c6ff","page":218,"rect":[0,405.91998291015625,1,406.91998291015625],"title":"如何实现线程池？","type":8,"uuid":"e3eeb798a4bd7a4987bb6ae2e8864b6f"},{"date":"2023-07-26 16:45:14","docid":0,"id":607,"linecolor":"ff59c6ff","page":218,"rect":[0,516.9199829101562,1,517.9199829101562],"title":"请你回答一下fork和vfork的区别？","type":8,"uuid":"1c7a6f21356983cf9627e3063550cffd"},{"date":"2023-07-26 16:45:14","docid":0,"id":608,"linecolor":"ff59c6ff","page":219,"rect":[0,650.9199829101562,1,651.9199829101562],"title":"server端监听端口，但还没有客户端连接进来，此时进程处于什么状态？","type":8,"uuid":"e8c8be7cb71f7638b6bb57c3bfcdec9c"}],"page":213,"rect":[0,237.91998291015625,1,238.91998291015625],"title":"进程和线程","type":8,"uuid":"f9e5373eb613c0ce93c9625ab58ad80f"},{"date":"2023-07-26 16:45:14","docid":0,"id":609,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:14","docid":0,"id":610,"linecolor":"ff59c6ff","page":220,"rect":[0,194.91998291015625,1,195.91998291015625],"title":"什么是代码段，数据段，bss段，堆，栈？","type":8,"uuid":"e0bcfc104ef1c9029a6de1264009e7fa"},{"date":"2023-07-26 16:45:14","docid":0,"id":611,"linecolor":"ff59c6ff","page":221,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"为什么堆的空间是不连续的？","type":8,"uuid":"04ca57a5b729127dd5c0977023d19e2a"},{"date":"2023-07-26 16:45:15","docid":0,"id":612,"linecolor":"ff59c6ff","page":221,"rect":[0,291.91998291015625,1,292.91998291015625],"title":"什么是用户栈和内核栈？","type":8,"uuid":"7e9376d24502328fc598c8b7fca97ffe"},{"date":"2023-07-26 16:45:15","docid":0,"id":613,"linecolor":"ff59c6ff","page":221,"rect":[0,471.91998291015625,1,472.91998291015625],"title":"用户栈和内核栈，为什么不能共用一个栈？","type":8,"uuid":"3f0ae477fd5777fafb6037fc0e02a148"},{"date":"2023-07-26 16:45:15","docid":0,"id":614,"linecolor":"ff59c6ff","page":221,"rect":[0,597.9199829101562,1,598.9199829101562],"title":"线程是否具有相同的堆栈?","type":8,"uuid":"3583cd69489dfd8aa45d1efcce88ef27"}],"page":220,"rect":[0,164.91998291015625,1,165.91998291015625],"title":"堆和栈","type":8,"uuid":"46337804492370057bc24eedf98dc184"},{"date":"2023-07-26 16:45:15","docid":0,"id":615,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":616,"linecolor":"ff59c6ff","page":222,"rect":[0,58.91998291015625,1,59.91998291015625],"title":"驱动里面为什么要有并发、互斥的控制？如何实现？讲个例子？","type":8,"uuid":"0ba957d0926259fc6c3b24a6a9d3e91e"},{"date":"2023-07-26 16:45:15","docid":0,"id":617,"linecolor":"ff59c6ff","page":222,"rect":[0,200.91998291015625,1,201.91998291015625],"title":"自旋锁是什么？信号量是什么？二者有何异同？","type":8,"uuid":"3e2ab1bc15310b1eab119fec70e885e5"},{"date":"2023-07-26 16:45:15","docid":0,"id":618,"linecolor":"ff59c6ff","page":223,"rect":[0,113.91998291015625,1,114.91998291015625],"title":"自旋锁和信号量可以睡眠吗？为什么？","type":8,"uuid":"cb29c747a2e725b0feae6c05d2746e46"},{"date":"2023-07-26 16:45:15","docid":0,"id":619,"linecolor":"ff59c6ff","page":223,"rect":[0,360.91998291015625,1,361.91998291015625],"title":"自旋锁和信号量可以用于中断中吗？","type":8,"uuid":"d78d141f8f003e071c78eaa7fc68ed95"},{"date":"2023-07-26 16:45:15","docid":0,"id":620,"linecolor":"ff59c6ff","page":223,"rect":[0,449.91998291015625,1,450.91998291015625],"title":"读写锁是什么？","type":8,"uuid":"bfac3155429b0d0a07676ea98e4a1f2f"},{"date":"2023-07-26 16:45:15","docid":0,"id":621,"linecolor":"ff59c6ff","page":223,"rect":[0,530.9199829101562,1,531.9199829101562],"title":"产生死锁的原因是什么？","type":8,"uuid":"2658fe04899f3853370f268d8720485c"},{"date":"2023-07-26 16:45:15","docid":0,"id":622,"linecolor":"ff59c6ff","page":223,"rect":[0,657.9199829101562,1,658.9199829101562],"title":"死锁的4个必要条件是什么？","type":8,"uuid":"fb9f12054592db935c60e88e2bfc0084"},{"date":"2023-07-26 16:45:15","docid":0,"id":623,"linecolor":"ff59c6ff","page":224,"rect":[0,83.91998291015625,1,84.91998291015625],"title":"死锁的处理方式有哪些？","type":8,"uuid":"96f8d306e8a43e4e825a20c6f8031993"},{"date":"2023-07-26 16:45:15","docid":0,"id":624,"linecolor":"ff59c6ff","page":224,"rect":[0,459.91998291015625,1,460.91998291015625],"title":"如何避免死锁？","type":8,"uuid":"56e1cd17837bae0548c5e43e12672910"},{"date":"2023-07-26 16:45:15","docid":0,"id":625,"linecolor":"ff59c6ff","page":227,"rect":[0,83.91998291015625,1,84.91998291015625],"title":"请问单核机器上写多线程程序，是否需要考虑加锁，为什么？","type":8,"uuid":"fb72b7d6a4af636e563533a4d4c98f39"}],"page":222,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"并发和互斥","type":8,"uuid":"c26f12760575ead75a23d7627c15fa8d"},{"date":"2023-07-26 16:45:15","docid":0,"id":626,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":627,"linecolor":"ff59c6ff","page":227,"rect":[0,343.91998291015625,1,344.91998291015625],"title":"在1G内存的计算机中能否malloc(1.2G)？为什么？","type":8,"uuid":"2eee7b6d0852268bd7325464adcc6348"},{"date":"2023-07-26 16:45:15","docid":0,"id":628,"linecolor":"ff59c6ff","page":227,"rect":[0,698.9199829101562,1,699.9199829101562],"title":"malloc能申请多大的空间？","type":8,"uuid":"7ec3573f7e6d76e89191f4457b99af73"},{"date":"2023-07-26 16:45:15","docid":0,"id":629,"linecolor":"ff59c6ff","page":228,"rect":[0,384.91998291015625,1,385.91998291015625],"title":"内存管理有哪几种方式？","type":8,"uuid":"1a7d2caaac41f1997ab2041f89f7bea5"},{"date":"2023-07-26 16:45:15","docid":0,"id":630,"linecolor":"ff59c6ff","page":229,"rect":[0,257.91998291015625,1,258.91998291015625],"title":"什么是虚拟内存？","type":8,"uuid":"de6d0fc3648edfec5044c0919988c744"},{"date":"2023-07-26 16:45:15","docid":0,"id":631,"linecolor":"ff59c6ff","page":229,"rect":[0,583.9199829101562,1,584.9199829101562],"title":"解释下内存碎片，内碎片，外碎片？","type":8,"uuid":"fc937c9ff9edf7682e868532ba18e984"},{"date":"2023-07-26 16:45:15","docid":0,"id":632,"linecolor":"ff59c6ff","page":230,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"解释下虚拟地址、逻辑地址、线性地址、物理地址？","type":8,"uuid":"945cbe5874595ee913436eb0013c8c30"},{"date":"2023-07-26 16:45:15","docid":0,"id":633,"linecolor":"ff59c6ff","page":230,"rect":[0,336.91998291015625,1,337.91998291015625],"title":"虚拟内存置换方式是怎么样的？","type":8,"uuid":"4d30f8eae8c0d6d86340b728cfe89b60"},{"date":"2023-07-26 16:45:15","docid":0,"id":634,"linecolor":"ff59c6ff","page":231,"rect":[0,158.91998291015625,1,159.91998291015625],"title":"给你一个类，里面有static，virtual之类的，来说一说这个类的内存分布？","type":8,"uuid":"6c1037884f1767fc84beba53f678bc77"},{"date":"2023-07-26 16:45:15","docid":0,"id":635,"linecolor":"ff59c6ff","page":232,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"假设临界区资源释放，如何保证只让一个线程获得临界区资源而不是都获得？","type":8,"uuid":"55cb6eb3c1326ed6b6bdf590a2c8bfce"},{"date":"2023-07-26 16:45:15","docid":0,"id":636,"linecolor":"ff59c6ff","page":232,"rect":[0,79.91998291015625,1,80.91998291015625],"title":"操作系统中的缺页中断是什么？","type":8,"uuid":"84f0ed9ec5ed8131189ba6c9cbe53512"},{"date":"2023-07-26 16:45:15","docid":0,"id":637,"linecolor":"ff59c6ff","page":232,"rect":[0,379.91998291015625,1,380.91998291015625],"title":"OS缺页置换算法如何实现的？","type":8,"uuid":"b5003b51782903a159c5940b21da4c54"},{"date":"2023-07-26 16:45:15","docid":0,"id":638,"linecolor":"ff59c6ff","page":232,"rect":[0,536.9199829101562,1,537.9199829101562],"title":"系统调用是什么，你用过哪些系统调用，和库函数有什么区别？","type":8,"uuid":"3354af481223ab4570eb8c131fe27e6c"},{"date":"2023-07-26 16:45:15","docid":0,"id":639,"linecolor":"ff59c6ff","page":233,"rect":[0,511.91998291015625,1,512.9199829101562],"title":"为什么要有page cache，操作系统怎么设计的page cache？","type":8,"uuid":"cdd5182afaaa7886df95ae9df9c868e1"}],"page":227,"rect":[0,313.91998291015625,1,314.91998291015625],"title":"内存","type":8,"uuid":"050d3c87dc6812c858fd7473bc33822a"},{"date":"2023-07-26 16:45:15","docid":0,"id":640,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":641,"linecolor":"ff59c6ff","page":234,"rect":[0,58.91998291015625,1,59.91998291015625],"title":"上下文有哪些？怎么理解？","type":8,"uuid":"52d686f85860b43972e2adb9992eb6bc"},{"date":"2023-07-26 16:45:15","docid":0,"id":642,"linecolor":"ff59c6ff","page":234,"rect":[0,456.91998291015625,1,457.91998291015625],"title":"为什么会有上下文这种概念？","type":8,"uuid":"659c46e25dec00ed1f1499cc3057a88b"},{"date":"2023-07-26 16:45:15","docid":0,"id":643,"linecolor":"ff59c6ff","page":235,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"什么情况下进行用户态到内核态的切换？","type":8,"uuid":"5dc41d1411d1a76ff8136297d4faa6e2"},{"date":"2023-07-26 16:45:15","docid":0,"id":644,"linecolor":"ff59c6ff","page":235,"rect":[0,139.91998291015625,1,140.91998291015625],"title":"中断上下文代码中有哪些注意事项？","type":8,"uuid":"efef2a1c976335d318119ddbbfc4fc88"},{"date":"2023-07-26 16:45:15","docid":0,"id":645,"linecolor":"ff59c6ff","page":235,"rect":[0,378.91998291015625,1,379.91998291015625],"title":"请问线程需要保存哪些上下文，SP、PC、EAX这些寄存器是干嘛用的？","type":8,"uuid":"5b8a270058bdf11dce88e3fb8edc870e"}],"page":234,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"上下文","type":8,"uuid":"792ea0b833d7cc16294329357774dc06"}],"page":211,"rect":[0,703.9199829101562,1,704.9199829101562],"title":"操作系统","type":8,"uuid":"f7ad2c587977c0633e5acd0a2b687004"},{"date":"2023-07-26 16:45:15","docid":0,"id":646,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":647,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":648,"linecolor":"ff59c6ff","page":236,"rect":[0,720.9199829101562,1,721.9199829101562],"title":"TCP怎么保证可靠性？","type":8,"uuid":"63dbc9b25c56abc023cab0015d2fbc8c"},{"date":"2023-07-26 16:45:15","docid":0,"id":649,"linecolor":"ff59c6ff","page":237,"rect":[0,233.91998291015625,1,234.91998291015625],"title":"简述一下TCP建立连接和断开连接的过程。","type":8,"uuid":"6a2c9cbf56417b7d6ab9945da842101f"},{"date":"2023-07-26 16:45:15","docid":0,"id":650,"linecolor":"ff59c6ff","page":238,"rect":[0,286.91998291015625,1,287.91998291015625],"title":"TCP的三次握手和四次挥手的原因是什么？","type":8,"uuid":"3127b0e6fd2744396c384570d5a3ebf2"},{"date":"2023-07-26 16:45:15","docid":0,"id":651,"linecolor":"ff59c6ff","page":238,"rect":[0,586.9199829101562,1,587.9199829101562],"title":"TCP，UDP的区别是什么？","type":8,"uuid":"3d1211d7cf79398389c819d6a7c4ca6c"},{"date":"2023-07-26 16:45:15","docid":0,"id":652,"linecolor":"ff59c6ff","page":238,"rect":[0,697.9199829101562,1,698.9199829101562],"title":"TCP，UDP的优缺点是什么？","type":8,"uuid":"02eee59361739f2580b7ba3e2c74d0ad"},{"date":"2023-07-26 16:45:15","docid":0,"id":653,"linecolor":"ff59c6ff","page":239,"rect":[0,234.91998291015625,1,235.91998291015625],"title":"TCP，UDP适用场景？","type":8,"uuid":"3a2efe9f0d529f7be9d460224906cea9"},{"date":"2023-07-26 16:45:15","docid":0,"id":654,"linecolor":"ff59c6ff","page":239,"rect":[0,414.91998291015625,1,415.91998291015625],"title":"TCP相比UDP为什么是可靠的？","type":8,"uuid":"cdfa60e8005e144f112ab27b18981cfc"},{"date":"2023-07-26 16:45:15","docid":0,"id":655,"linecolor":"ff59c6ff","page":239,"rect":[0,677.9199829101562,1,678.9199829101562],"title":"什么是TCP拥塞控制？以及达到什么情况的时候开始减慢增长的速度？","type":8,"uuid":"827a573708754629e424c0570e5b5ea4"},{"date":"2023-07-26 16:45:15","docid":0,"id":656,"linecolor":"ff59c6ff","page":240,"rect":[0,340.91998291015625,1,341.91998291015625],"title":"画出OSI和TCP/IP协议栈的对应关系","type":8,"uuid":"cc42fe0aca31e8cb71c0d42f4db8710f"},{"date":"2023-07-26 16:45:15","docid":0,"id":657,"linecolor":"ff59c6ff","page":241,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"TCP/IP数据链路层的交互过程是怎么样的？","type":8,"uuid":"1b9f41b828027273c82fc33a2be44676"},{"date":"2023-07-26 16:45:15","docid":0,"id":658,"linecolor":"ff59c6ff","page":241,"rect":[0,124.91998291015625,1,125.91998291015625],"title":"传递到IP层怎么知道报文该给哪个应用程序，它怎么区分UDP报文还是TCP报文？","type":8,"uuid":"314c3632fc322db174f80201a53d70d7"},{"date":"2023-07-26 16:45:15","docid":0,"id":659,"linecolor":"ff59c6ff","page":241,"rect":[0,198.91998291015625,1,199.91998291015625],"title":"请你来介绍一下UDP的connect函数","type":8,"uuid":"1a2ffce58c5f0f33bbbf23b3d651461c"},{"date":"2023-07-26 16:45:15","docid":0,"id":660,"linecolor":"ff59c6ff","page":241,"rect":[0,604.9199829101562,1,605.9199829101562],"title":"请说说你对TCP连接中time_wait状态的理解","type":8,"uuid":"3b7ec952a5f56f5557d9c9f099174f68"},{"date":"2023-07-26 16:45:15","docid":0,"id":661,"linecolor":"ff59c6ff","page":243,"rect":[0,373.91998291015625,1,374.91998291015625],"title":"为什么要设置time_wait？","type":8,"uuid":"03c80e205665c47b27e30e97184f9887"},{"date":"2023-07-26 16:45:15","docid":0,"id":662,"linecolor":"ff59c6ff","page":243,"rect":[0,484.91998291015625,1,485.91998291015625],"title":"请你说一说TCP的模型，状态转移。","type":8,"uuid":"8eada1e82fd290db95904b05ffcda5ee"},{"date":"2023-07-26 16:45:15","docid":0,"id":663,"linecolor":"ff59c6ff","page":244,"rect":[0,682.9199829101562,1,683.9199829101562],"title":"什么是OSI七层模型和TCP/IP四层模型？每层列举2个协议。","type":8,"uuid":"5b43c58bad06099627ee7e1fdc600eb8"},{"date":"2023-07-26 16:45:15","docid":0,"id":664,"linecolor":"ff59c6ff","page":245,"rect":[0,83.91998291015625,1,84.91998291015625],"title":"典型网络模型，简单说说有哪些？","type":8,"uuid":"b74ec21ac2d4265392a82c7db751b8f1"},{"date":"2023-07-26 16:45:15","docid":0,"id":665,"linecolor":"ff59c6ff","page":245,"rect":[0,263.91998291015625,1,264.91998291015625],"title":"搜索baidu，会用到计算机网络中的什么层？每层是干什么的?","type":8,"uuid":"3948d55a6de9d8bd2cdd020630d76068"}],"page":236,"rect":[0,690.9199829101562,1,691.9199829101562],"title":"TCP/ UDP","type":8,"uuid":"0943f009c6111785510f027961592249"},{"date":"2023-07-26 16:45:15","docid":0,"id":666,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":667,"linecolor":"ff59c6ff","page":246,"rect":[0,337.91998291015625,1,338.91998291015625],"title":"什么是http协议？","type":8,"uuid":"a3f9714806430cc5c55ec4eac51697c3"},{"date":"2023-07-26 16:45:15","docid":0,"id":668,"linecolor":"ff59c6ff","page":246,"rect":[0,532.9199829101562,1,533.9199829101562],"title":"http协议有什么特点？","type":8,"uuid":"0feb38d42bc72f13f2a62ab2fcd9f3aa"},{"date":"2023-07-26 16:45:15","docid":0,"id":669,"linecolor":"ff59c6ff","page":247,"rect":[0,73.91998291015625,1,74.91998291015625],"title":"https建立连接过程是什么?","type":8,"uuid":"c05cccf466dc3be9a056689a7f17732a"},{"date":"2023-07-26 16:45:15","docid":0,"id":670,"linecolor":"ff59c6ff","page":247,"rect":[0,483.91998291015625,1,484.91998291015625],"title":"http和https的区别是什么？https有什么优缺点？","type":8,"uuid":"abad0396238660ef523f9edb284b3930"},{"date":"2023-07-26 16:45:15","docid":0,"id":671,"linecolor":"ff59c6ff","page":248,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"请你说一说http返回码是什么？","type":8,"uuid":"301bffd814eca1e72ad3bc8bd0010517"},{"date":"2023-07-26 16:45:15","docid":0,"id":672,"linecolor":"ff59c6ff","page":248,"rect":[0,458.91998291015625,1,459.91998291015625],"title":"http1.1和http1.0的区别？","type":8,"uuid":"f6f05dc6d486d58ee159ad4a23ab0a32"},{"date":"2023-07-26 16:45:15","docid":0,"id":673,"linecolor":"ff59c6ff","page":249,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"请你说一下http协议会话结束标志怎么截出来？","type":8,"uuid":"aef0711484c937be3f85a31a7efa9e9a"},{"date":"2023-07-26 16:45:15","docid":0,"id":674,"linecolor":"ff59c6ff","page":249,"rect":[0,79.91998291015625,1,80.91998291015625],"title":"请你说一说IP地址作用，以及MAC地址作用","type":8,"uuid":"04aeb10c3fae15bd225dcf0163cd79ad"}],"page":246,"rect":[0,307.91998291015625,1,308.91998291015625],"title":"HTTP/IP","type":8,"uuid":"bca1177bdc9f44fdcf417f30da3fc9f9"},{"date":"2023-07-26 16:45:15","docid":0,"id":675,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":676,"linecolor":"ff59c6ff","page":249,"rect":[0,324.91998291015625,1,325.91998291015625],"title":"请问你有没有基于做过socket的开发？具体网络层的操作该怎么做？","type":8,"uuid":"500865f2e524f9c760e04d68390d08fc"},{"date":"2023-07-26 16:45:15","docid":0,"id":677,"linecolor":"ff59c6ff","page":249,"rect":[0,398.91998291015625,1,399.91998291015625],"title":"请你来说一下socket编程中服务器端和客户端主要用到哪些函数？","type":8,"uuid":"2a9a1491623eca44691d4719e4e87238"},{"date":"2023-07-26 16:45:15","docid":0,"id":678,"linecolor":"ff59c6ff","page":251,"rect":[0,415.91998291015625,1,416.91998291015625],"title":"请你讲述一下Socket编程的send() recv() accept() socket()函数？","type":8,"uuid":"a0cbc0bada5a337ab4ffb195d22c6e23"}],"page":249,"rect":[0,294.91998291015625,1,295.91998291015625],"title":"SOCKET","type":8,"uuid":"a3230a76ce2a5c5fe200502657eeb660"},{"date":"2023-07-26 16:45:15","docid":0,"id":679,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":680,"linecolor":"ff59c6ff","page":251,"rect":[0,699.9199829101562,1,700.9199829101562],"title":"URI（统一资源标识符）和URL（统一资源定位符）之间的区别","type":8,"uuid":"28f92b14046d84154a6a9aba69a81412"},{"date":"2023-07-26 16:45:15","docid":0,"id":681,"linecolor":"ff59c6ff","page":252,"rect":[0,296.91998291015625,1,297.91998291015625],"title":"为什么服务端易受到SYN攻击？","type":8,"uuid":"3bfaff9112db39072724cb75a8c05444"},{"date":"2023-07-26 16:45:15","docid":0,"id":682,"linecolor":"ff59c6ff","page":253,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"为什么客户端最后还要等待2MSL？","type":8,"uuid":"deff9b8a7e0d94179f85daadd0c2a3bd"},{"date":"2023-07-26 16:45:15","docid":0,"id":683,"linecolor":"ff59c6ff","page":253,"rect":[0,351.91998291015625,1,352.91998291015625],"title":"请问server端监听端口，但还没有客户端连接进来，此时进程处于什么状态？","type":8,"uuid":"b4953465482fbbc5f904a98605abd8c2"},{"date":"2023-07-26 16:45:15","docid":0,"id":684,"linecolor":"ff59c6ff","page":253,"rect":[0,424.91998291015625,1,425.91998291015625],"title":"请你来说一下数字证书是什么，里面都包含那些内容？","type":8,"uuid":"a89cd21e46f306a632dfee951515106a"},{"date":"2023-07-26 16:45:15","docid":0,"id":685,"linecolor":"ff59c6ff","page":254,"rect":[0,93.91998291015625,1,94.91998291015625],"title":"请你来说一下GET和POST的区别","type":8,"uuid":"976ce8475c314b2e935e98fb19fdca80"}],"page":251,"rect":[0,669.9199829101562,1,670.9199829101562],"title":"客户端/服务端","type":8,"uuid":"2e5798b4f1ef53ca1b94512ff5f87916"}],"page":235,"rect":[0,511.91998291015625,1,512.9199829101562],"title":"网络编程","type":8,"uuid":"64ad4fe37e7e21e395f78963bafc1dd5"}],"page":28,"rect":[0,324.91998291015625,1,325.91998291015625],"title":"嵌入式知识点总结","type":8,"uuid":"22ae9f80a864b9fcb2c43de2238ccf8f"},{"date":"2023-07-26 16:45:15","docid":0,"id":686,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":687,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":688,"linecolor":"ff59c6ff","page":254,"rect":[0,438.91998291015625,1,439.91998291015625],"title":"1. 自我介绍","type":8,"uuid":"b8ae31ca78dc84dc832279c8b106e810"},{"date":"2023-07-26 16:45:15","docid":0,"id":689,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":690,"linecolor":"ff59c6ff","page":254,"rect":[0,568.9199829101562,1,569.9199829101562],"title":"2.1 Linux驱动","type":8,"uuid":"41b1ce2c21e9e323c600eaa3ab71e550"},{"date":"2023-07-26 16:45:15","docid":0,"id":691,"linecolor":"ff59c6ff","page":255,"rect":[0,113.91998291015625,1,114.91998291015625],"title":"2.2 Arm体系与架构","type":8,"uuid":"07c2c0a708f7219e5b4fc74face3c13a"},{"date":"2023-07-26 16:45:15","docid":0,"id":692,"linecolor":"ff59c6ff","page":255,"rect":[0,194.91998291015625,1,195.91998291015625],"title":"2.3 数据结构与算法分析","type":8,"uuid":"682a17446acd865edd145827d07edcce"},{"date":"2023-07-26 16:45:15","docid":0,"id":693,"linecolor":"ff59c6ff","page":257,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"2.4 C语言","type":8,"uuid":"cede25a8b24f00a89a7c76c42aaeb7d4"},{"date":"2023-07-26 16:45:15","docid":0,"id":694,"linecolor":"ff59c6ff","page":257,"rect":[0,177.91998291015625,1,178.91998291015625],"title":"2.5 操作系统&计组","type":8,"uuid":"d39df5222685b6c95c6763fa3345d256"},{"date":"2023-07-26 16:45:15","docid":0,"id":695,"linecolor":"ff59c6ff","page":258,"rect":[0,585.9199829101562,1,586.9199829101562],"title":"2.6 项目经验","type":8,"uuid":"30a1842367d15aee6240d159732c9af4"},{"date":"2023-07-26 16:45:15","docid":0,"id":696,"linecolor":"ff59c6ff","page":259,"rect":[0,332.91998291015625,1,333.91998291015625],"title":"2.7 其他","type":8,"uuid":"d4681c9ee1790dbb6b5b10ba3b1809a2"}],"page":254,"rect":[0,538.9199829101562,1,539.9199829101562],"title":"2. 秋招准备","type":8,"uuid":"0bf9d1487f28fd6259da115bf4c68dc3"},{"date":"2023-07-26 16:45:15","docid":0,"id":697,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":698,"linecolor":"ff59c6ff","page":260,"rect":[0,324.91998291015625,1,325.91998291015625],"title":"C语言","type":8,"uuid":"bfa42858f2a4431d48b6ffb37abc5457"},{"date":"2023-07-26 16:45:15","docid":0,"id":699,"linecolor":"ff59c6ff","page":260,"rect":[0,375.91998291015625,1,376.91998291015625],"title":"数据结构","type":8,"uuid":"7d18836ec500101cd8ce488bc3d9b51d"},{"date":"2023-07-26 16:45:15","docid":0,"id":700,"linecolor":"ff59c6ff","page":260,"rect":[0,426.91998291015625,1,427.91998291015625],"title":"硬件原理","type":8,"uuid":"b417e0fb0ed9192290088a258effb047"},{"date":"2023-07-26 16:45:15","docid":0,"id":701,"linecolor":"ff59c6ff","page":260,"rect":[0,477.91998291015625,1,478.91998291015625],"title":"Linux驱动","type":8,"uuid":"0344f556a26ada07cd532c3b2d114006"},{"date":"2023-07-26 16:45:15","docid":0,"id":702,"linecolor":"ff59c6ff","page":260,"rect":[0,528.9199829101562,1,529.9199829101562],"title":"Linux应用编程","type":8,"uuid":"fe3876c238a395367bbad02789762c77"},{"date":"2023-07-26 16:45:15","docid":0,"id":703,"linecolor":"ff59c6ff","page":260,"rect":[0,579.9199829101562,1,580.9199829101562],"title":"计算机基础","type":8,"uuid":"62504d1096206a43bacdffc8489f3629"},{"date":"2023-07-26 16:45:15","docid":0,"id":704,"linecolor":"ff59c6ff","page":260,"rect":[0,646.9199829101562,1,647.9199829101562],"title":"Linux内核","type":8,"uuid":"01f74e40fb71af2209705a4390261468"}],"page":260,"rect":[0,294.91998291015625,1,295.91998291015625],"title":"3. 书籍推荐","type":8,"uuid":"faf1eefc366754a44172640649defcfa"},{"date":"2023-07-26 16:45:15","docid":0,"id":705,"linecolor":"ff59c6ff","page":261,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"4. 未来展望","type":8,"uuid":"fe2c334d531acdfe00dc9be90553c09a"},{"date":"2023-07-26 16:45:15","docid":0,"id":706,"linecolor":"ff59c6ff","page":261,"rect":[0,219.91998291015625,1,220.91998291015625],"title":"5. 总结","type":8,"uuid":"a1fed4e3c8d95f214844741cbb829d9e"},{"date":"2023-07-26 16:45:15","docid":0,"id":707,"linecolor":"ff59c6ff","page":261,"rect":[0,319.91998291015625,1,320.91998291015625],"title":"6. 致谢","type":8,"uuid":"f436a35947749e109d05912ef56d79b2"}],"page":254,"rect":[0,321.91998291015625,1,322.91998291015625],"title":"我的嵌入式软件工程师秋招之路","type":8,"uuid":"465a4050442b6d49e07f10bc4155865e"},{"date":"2023-07-26 16:45:15","docid":0,"id":708,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":709,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":710,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":711,"linecolor":"ff59c6ff","page":262,"rect":[0,693.9199829101562,1,694.9199829101562],"title":"一面（35min，8.5）","type":8,"uuid":"c25ede56d1fa01844b8c0c327ea58e4d"},{"date":"2023-07-26 16:45:15","docid":0,"id":712,"linecolor":"ff59c6ff","page":264,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"总结","type":8,"uuid":"86c8244a338df451c4e955ce4065925b"}],"page":262,"rect":[0,597.9199829101562,1,598.9199829101562],"title":"联发科北京（7.16）","type":8,"uuid":"4510a39dffe35c166cc06906aa30456f"},{"date":"2023-07-26 16:45:15","docid":0,"id":713,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":714,"linecolor":"ff59c6ff","page":264,"rect":[0,269.91998291015625,1,270.91998291015625],"title":"一面（60min，9.14）","type":8,"uuid":"10bbb53f9ad4359a6a2c588fea8adaee"},{"date":"2023-07-26 16:45:15","docid":0,"id":715,"linecolor":"ff59c6ff","page":264,"rect":[0,332.91998291015625,1,333.91998291015625],"title":"二面（25min，9.16）","type":8,"uuid":"a290adcbaef9b0d97ccba0b21dae708a"},{"date":"2023-07-26 16:45:15","docid":0,"id":716,"linecolor":"ff59c6ff","page":264,"rect":[0,395.91998291015625,1,396.91998291015625],"title":"三面（40min，9.18）","type":8,"uuid":"b679a0eefc75782f7c424a4c9505a4cc"},{"date":"2023-07-26 16:45:15","docid":0,"id":717,"linecolor":"ff59c6ff","page":264,"rect":[0,640.9199829101562,1,641.9199829101562],"title":"总结","type":8,"uuid":"0a2961c29e7c3620ae847be641ed7df6"}],"page":264,"rect":[0,243.91998291015625,1,244.91998291015625],"title":"广州朗国电子科技（8.24）","type":8,"uuid":"86e9c8f9514385d9b3d07f6f744fb7f2"},{"date":"2023-07-26 16:45:15","docid":0,"id":718,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":719,"linecolor":"ff59c6ff","page":265,"rect":[0,54.91998291015625,1,55.91998291015625],"title":"一面（30min，9.10）","type":8,"uuid":"369ec52350e84823518f30b6917cbcab"},{"date":"2023-07-26 16:45:15","docid":0,"id":720,"linecolor":"ff59c6ff","page":266,"rect":[0,621.9199829101562,1,622.9199829101562],"title":"总结","type":8,"uuid":"b46c3b4132d886a9bb85c51943c3b328"},{"date":"2023-07-26 16:45:15","docid":0,"id":721,"linecolor":"ff59c6ff","page":266,"rect":[0,706.9199829101562,1,707.9199829101562],"title":"二面（35min,9.12）","type":8,"uuid":"3929d65702508394b7bce99ec11bfe6f"},{"date":"2023-07-26 16:45:15","docid":0,"id":722,"linecolor":"ff59c6ff","page":269,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"总结","type":8,"uuid":"778d6b7da3e53c57b9e237b8520eb882"},{"date":"2023-07-26 16:45:15","docid":0,"id":723,"linecolor":"ff59c6ff","page":269,"rect":[0,152.91998291015625,1,153.91998291015625],"title":"三面（15min，9.14） ","type":8,"uuid":"31d2f400dbf71a61100fcde65a06b415"},{"date":"2023-07-26 16:45:15","docid":0,"id":724,"linecolor":"ff59c6ff","page":269,"rect":[0,488.91998291015625,1,489.91998291015625],"title":"总结","type":8,"uuid":"fee15ce4a95b6729c0f5ceed4d16e9bf"}],"page":265,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"浙江大华股份（9.3）","type":8,"uuid":"01b7529bc9c604984fcb42dd5838200d"},{"date":"2023-07-26 16:45:15","docid":0,"id":725,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":726,"linecolor":"ff59c6ff","page":269,"rect":[0,585.9199829101562,1,586.9199829101562],"title":"一面（50min，9.21）","type":8,"uuid":"8b9f930a4d14eef61151271d0f68f4a6"},{"date":"2023-07-26 16:45:15","docid":0,"id":727,"linecolor":"ff59c6ff","page":270,"rect":[0,174.91998291015625,1,175.91998291015625],"title":"二面（15min，9.25）","type":8,"uuid":"3f54605e0b85fa1f7c3e22ff24b59ef2"},{"date":"2023-07-26 16:45:15","docid":0,"id":728,"linecolor":"ff59c6ff","page":270,"rect":[0,525.9199829101562,1,526.9199829101562],"title":"总结","type":8,"uuid":"0649f50a8dbd26030a1ddc9dbd2bc135"}],"page":269,"rect":[0,559.9199829101562,1,560.9199829101562],"title":"兆易创新（9.3）","type":8,"uuid":"7ea3f1aad0b61d8192694d5ddd8a32d9"},{"date":"2023-07-26 16:45:15","docid":0,"id":729,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":730,"linecolor":"ff59c6ff","page":270,"rect":[0,640.9199829101562,1,641.9199829101562],"title":"一面（35min，9.23）","type":8,"uuid":"dfa4e9c1a9bfe8de7c251ac701cd5b41"},{"date":"2023-07-26 16:45:15","docid":0,"id":731,"linecolor":"ff59c6ff","page":271,"rect":[0,417.91998291015625,1,418.91998291015625],"title":"二面（45min，9.23）","type":8,"uuid":"a078f99d93f8f3fce82c625e4d3c95f2"},{"date":"2023-07-26 16:45:15","docid":0,"id":732,"linecolor":"ff59c6ff","page":271,"rect":[0,708.9199829101562,1,709.9199829101562],"title":"三面（30min，9.23）","type":8,"uuid":"93d6081641c57397f9ecc19de24d9467"},{"date":"2023-07-26 16:45:15","docid":0,"id":733,"linecolor":"ff59c6ff","page":272,"rect":[0,197.91998291015625,1,198.91998291015625],"title":"总结","type":8,"uuid":"b7de95cd6bf1ab00d653886e2a5d78f8"}],"page":270,"rect":[0,589.9199829101562,1,590.9199829101562],"title":"景嘉微（9.13）","type":8,"uuid":"caa7ca0cda003b9ed2a7ab3ced3aa1c4"},{"date":"2023-07-26 16:45:15","docid":0,"id":734,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":735,"linecolor":"ff59c6ff","page":272,"rect":[0,286.91998291015625,1,287.91998291015625],"title":"一面（20min，9.23）","type":8,"uuid":"b8bb517d5d9d31c4caaa35b3ffa75c2b"},{"date":"2023-07-26 16:45:15","docid":0,"id":736,"linecolor":"ff59c6ff","page":272,"rect":[0,552.9199829101562,1,553.9199829101562],"title":"二面（40min，9.26）","type":8,"uuid":"e7ee6fe40d6c296337ecf893e5f7fa6e"},{"date":"2023-07-26 16:45:15","docid":0,"id":737,"linecolor":"ff59c6ff","page":273,"rect":[0,432.91998291015625,1,433.91998291015625],"title":"HR面（20min 9.26）","type":8,"uuid":"73a4fc462acf2416b4ee8d3c587e0582"}],"page":272,"rect":[0,260.91998291015625,1,261.91998291015625],"title":"全志科技（9.15）","type":8,"uuid":"7aa23f77547d1e2e86b81ed0656bd1cb"},{"date":"2023-07-26 16:45:15","docid":0,"id":738,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:15","docid":0,"id":739,"linecolor":"ff59c6ff","page":273,"rect":[0,611.9199829101562,1,612.9199829101562],"title":"一面（40min，9.21）","type":8,"uuid":"1dfa3aab0b18bee116deb0e045ca1d77"},{"date":"2023-07-26 16:45:15","docid":0,"id":740,"linecolor":"ff59c6ff","page":274,"rect":[0,682.9199829101562,1,683.9199829101562],"title":"总结","type":8,"uuid":"27d135a7637255f04f0fa8e74c7c0918"},{"date":"2023-07-26 16:45:16","docid":0,"id":741,"linecolor":"ff59c6ff","page":275,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"二面 (50min,9.25)","type":8,"uuid":"a349cc8504807a5290f5a15236478a31"},{"date":"2023-07-26 16:45:16","docid":0,"id":742,"linecolor":"ff59c6ff","page":276,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"三面（10min，10.15）","type":8,"uuid":"9a081274a2c26a35db7bf92e84463966"},{"date":"2023-07-26 16:45:16","docid":0,"id":743,"linecolor":"ff59c6ff","page":276,"rect":[0,144.91998291015625,1,145.91998291015625],"title":"总结","type":8,"uuid":"5c57fd8ee5e25d694d582c2d81b6570a"}],"page":273,"rect":[0,585.9199829101562,1,586.9199829101562],"title":"小米（9.15）","type":8,"uuid":"3cf02c0b85e05bed7798614f2ffe77ed"},{"date":"2023-07-26 16:45:16","docid":0,"id":744,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":745,"linecolor":"ff59c6ff","page":276,"rect":[0,532.9199829101562,1,533.9199829101562],"title":"总结","type":8,"uuid":"54e2fa1755f998733f1608c04c5cbfb6"}],"page":276,"rect":[0,207.91998291015625,1,208.91998291015625],"title":"中国长城科技集团（9.15）","type":8,"uuid":"c2109a57bc61e8e5ebda01edbd722212"},{"date":"2023-07-26 16:45:16","docid":0,"id":746,"linecolor":"ff59c6ff","page":276,"rect":[0,595.9199829101562,1,596.9199829101562],"title":"CEC子公司-北京华大电子（9.15）","type":8,"uuid":"88b6ee852fe57d1442c67ce0004d3a45"},{"date":"2023-07-26 16:45:16","docid":0,"id":747,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":748,"linecolor":"ff59c6ff","page":276,"rect":[0,703.9199829101562,1,704.9199829101562],"title":"一面（10min，9.21）","type":8,"uuid":"f14a4922e9799e7e11a446cd278f98a6"},{"date":"2023-07-26 16:45:16","docid":0,"id":749,"linecolor":"ff59c6ff","page":277,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"二面（15min，10.19）","type":8,"uuid":"3c5423e732ca46f1b1e8bf04828d792a"},{"date":"2023-07-26 16:45:16","docid":0,"id":750,"linecolor":"ff59c6ff","page":277,"rect":[0,266.91998291015625,1,267.91998291015625],"title":"总结","type":8,"uuid":"450233ad6f587aed8564b1bdd07e8f77"}],"page":276,"rect":[0,676.9199829101562,1,677.9199829101562],"title":"京信通信（9.16）","type":8,"uuid":"4706b2a7ba060b4fc4468264f8f7bdaf"},{"date":"2023-07-26 16:45:16","docid":0,"id":751,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":752,"linecolor":"ff59c6ff","page":277,"rect":[0,393.91998291015625,1,394.91998291015625],"title":"一面（20min,9.27）","type":8,"uuid":"adf177f5d47889889635b50c1d3c5665"},{"date":"2023-07-26 16:45:16","docid":0,"id":753,"linecolor":"ff59c6ff","page":277,"rect":[0,456.91998291015625,1,457.91998291015625],"title":"二面（25min，9.27）","type":8,"uuid":"e370139159917d4e2c5fcaeb57181dff"},{"date":"2023-07-26 16:45:16","docid":0,"id":754,"linecolor":"ff59c6ff","page":278,"rect":[0,417.91998291015625,1,418.91998291015625],"title":"三面（10min，9.28）","type":8,"uuid":"e303e31d8d65b06604138d8e929d3944"},{"date":"2023-07-26 16:45:16","docid":0,"id":755,"linecolor":"ff59c6ff","page":278,"rect":[0,480.91998291015625,1,481.91998291015625],"title":"四面（15min，9.28）","type":8,"uuid":"5ae243bf8ab97ebae33044426a6bd8a5"},{"date":"2023-07-26 16:45:16","docid":0,"id":756,"linecolor":"ff59c6ff","page":278,"rect":[0,573.9199829101562,1,574.9199829101562],"title":"总结","type":8,"uuid":"2e3c198221991f32d86c30b790e3ef74"}],"page":277,"rect":[0,366.91998291015625,1,367.91998291015625],"title":"海格通信（9.27）","type":8,"uuid":"4c4e380b6df6dead0ce916697c4e5e66"}],"page":262,"rect":[0,567.9199829101562,1,568.9199829101562],"title":"有面试","type":8,"uuid":"a3d797eeaec0540caff56834af9209f3"},{"date":"2023-07-26 16:45:16","docid":0,"id":757,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":758,"linecolor":"ff59c6ff","page":279,"rect":[0,68.91998291015625,1,69.91998291015625],"title":"oppo（8.23）","type":8,"uuid":"da1f136134f7285c4247f3bda49caa43"}],"page":279,"rect":[0,38.91998291015625,1,39.91998291015625],"title":"简历被刷","type":8,"uuid":"98234492ffde7bbc2d71da996398b01a"},{"date":"2023-07-26 16:45:16","docid":0,"id":759,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":760,"linecolor":"ff59c6ff","page":280,"rect":[0,68.91998291015625,1,69.91998291015625],"title":"海康威视（9.1）","type":8,"uuid":"545bfe55f89906ee54763c13b24e2456"},{"date":"2023-07-26 16:45:16","docid":0,"id":761,"linecolor":"ff59c6ff","page":280,"rect":[0,119.91998291015625,1,120.91998291015625],"title":"乐鑫（8.18）","type":8,"uuid":"e8c23c89250de794b239f87f2f990b51"},{"date":"2023-07-26 16:45:16","docid":0,"id":762,"linecolor":"ff59c6ff","page":280,"rect":[0,267.91998291015625,1,268.91998291015625],"title":"CVTE（9.16）","type":8,"uuid":"c25c240ccc94513ab893c68adfb3c4cc"}],"page":280,"rect":[0,38.91998291015625,1,39.91998291015625],"title":"笔试/测评挂","type":8,"uuid":"5fdfe8420a9f11e3d93c49e99b33ff54"},{"date":"2023-07-26 16:45:16","docid":0,"id":763,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":764,"linecolor":"ff59c6ff","page":281,"rect":[0,68.91998291015625,1,69.91998291015625],"title":"寒武纪（9.3）","type":8,"uuid":"cdfe9d7d90cc84bc9bbfdc01c68dfc2a"},{"date":"2023-07-26 16:45:16","docid":0,"id":765,"linecolor":"ff59c6ff","page":281,"rect":[0,134.91998291015625,1,135.91998291015625],"title":"华为（9.10）","type":8,"uuid":"b892b7a7a4a043552006e68a2cdf4bef"},{"date":"2023-07-26 16:45:16","docid":0,"id":766,"linecolor":"ff59c6ff","page":281,"rect":[0,593.9199829101562,1,594.9199829101562],"title":"BOE（8.25 & 9.12）","type":8,"uuid":"9b5bbccf54c10e7430afb14cc159f7a7"},{"date":"2023-07-26 16:45:16","docid":0,"id":767,"linecolor":"ff59c6ff","page":281,"rect":[0,644.9199829101562,1,645.9199829101562],"title":"恩智浦（9.15）","type":8,"uuid":"0f4afbde8cab12e61b2efefb1d2cc482"},{"date":"2023-07-26 16:45:16","docid":0,"id":768,"linecolor":"ff59c6ff","page":281,"rect":[0,695.9199829101562,1,696.9199829101562],"title":"瑞芯微（9.17）","type":8,"uuid":"4b046a42a4a5007025469f5361b57e41"},{"date":"2023-07-26 16:45:16","docid":0,"id":769,"linecolor":"ff59c6ff","page":282,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"紫光展锐（9.18）","type":8,"uuid":"4feda873815037be09a3a30bc278d94f"},{"date":"2023-07-26 16:45:16","docid":0,"id":770,"linecolor":"ff59c6ff","page":282,"rect":[0,132.91998291015625,1,133.91998291015625],"title":"联发科成都（9.18）","type":8,"uuid":"be1b35afe0260aed1303597ef5907e08"},{"date":"2023-07-26 16:45:16","docid":0,"id":771,"linecolor":"ff59c6ff","page":282,"rect":[0,183.91998291015625,1,184.91998291015625],"title":"小马智行（9.18）","type":8,"uuid":"43b6514ffd81f308d46ccdfc0c7e2b9c"}],"page":281,"rect":[0,38.91998291015625,1,39.91998291015625],"title":"没消息","type":8,"uuid":"6f0e2fecff4d73217676344823088e27"},{"date":"2023-07-26 16:45:16","docid":0,"id":772,"linecolor":"ff59c6ff","page":282,"rect":[0,234.91998291015625,1,235.91998291015625],"title":"总结","type":8,"uuid":"26188f34bc0ad5efa136e42b845b9675"}],"page":262,"rect":[0,411.91998291015625,1,412.91998291015625],"title":"2020秋招联发科小米等面经分享","type":8,"uuid":"2a8d87f4e09f97e5625e00f537bca6b5"},{"date":"2023-07-26 16:45:16","docid":0,"id":773,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":774,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":775,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":776,"linecolor":"ff59c6ff","page":283,"rect":[0,712.9199829101562,1,713.9199829101562],"title":"自我介绍","type":8,"uuid":"312c7a3662688eb3d99558d832423d8b"},{"date":"2023-07-26 16:45:16","docid":0,"id":777,"linecolor":"ff59c6ff","page":284,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"项目介绍","type":8,"uuid":"0416a0d1a1b8b5320f1710ef367e42cb"},{"date":"2023-07-26 16:45:16","docid":0,"id":778,"linecolor":"ff59c6ff","page":284,"rect":[0,51.91998291015625,1,52.91998291015625],"title":"你做的这个项目遇到了那些问题，如何解决的？","type":8,"uuid":"3d29bdf93e3915e3e4d540536659a7d3"},{"date":"2023-07-26 16:45:16","docid":0,"id":779,"linecolor":"ff59c6ff","page":284,"rect":[0,75.91998291015625,1,76.91998291015625],"title":"移植uboot，只做了移植吗？","type":8,"uuid":"2a943405015a1aeaaacbdbe525b49171"},{"date":"2023-07-26 16:45:16","docid":0,"id":780,"linecolor":"ff59c6ff","page":284,"rect":[0,98.91998291015625,1,99.91998291015625],"title":"用的那个文件系统？","type":8,"uuid":"791167fe18afee3d95daa6a5e36b90e7"},{"date":"2023-07-26 16:45:16","docid":0,"id":781,"linecolor":"ff59c6ff","page":284,"rect":[0,121.91998291015625,1,122.91998291015625],"title":"移植过程中，网卡驱动做了那些工作？","type":8,"uuid":"48007c047762145eb4a90caca264b93b"},{"date":"2023-07-26 16:45:16","docid":0,"id":782,"linecolor":"ff59c6ff","page":284,"rect":[0,144.91998291015625,1,145.91998291015625],"title":"写过那些驱动，讲一个你熟悉的？","type":8,"uuid":"4ed7de818437e88cd25dc7967673b12e"},{"date":"2023-07-26 16:45:16","docid":0,"id":783,"linecolor":"ff59c6ff","page":284,"rect":[0,168.91998291015625,1,169.91998291015625],"title":"写驱动过程中，遇到过什么问题，如何解决的？","type":8,"uuid":"a614ffbfdd46b592ee038ac59ff0fe33"},{"date":"2023-07-26 16:45:16","docid":0,"id":784,"linecolor":"ff59c6ff","page":284,"rect":[0,191.91998291015625,1,192.91998291015625],"title":"对网络设备驱动有了解吗？","type":8,"uuid":"02c1181caa99f48a536fae0b0545ac7f"},{"date":"2023-07-26 16:45:16","docid":0,"id":785,"linecolor":"ff59c6ff","page":284,"rect":[0,214.91998291015625,1,215.91998291015625],"title":"你有什么想问我的？","type":8,"uuid":"a55fd02c92e905f94742b3996114ccb5"}],"page":283,"rect":[0,686.9199829101562,1,687.9199829101562],"title":"一面（3.23,35min）","type":8,"uuid":"776bcd45c2254a811ea14440af614d56"},{"date":"2023-07-26 16:45:16","docid":0,"id":786,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":787,"linecolor":"ff59c6ff","page":284,"rect":[0,264.91998291015625,1,265.91998291015625],"title":"自我介绍","type":8,"uuid":"2e7b2dc36b002efe9cbe9b67e68f02f9"},{"date":"2023-07-26 16:45:16","docid":0,"id":788,"linecolor":"ff59c6ff","page":284,"rect":[0,287.91998291015625,1,288.91998291015625],"title":"作为北方人，你对南方的饮食，气候习惯吗？","type":8,"uuid":"b215d00dbdddf99ef3727d15f77362f3"},{"date":"2023-07-26 16:45:16","docid":0,"id":789,"linecolor":"ff59c6ff","page":284,"rect":[0,310.91998291015625,1,311.91998291015625],"title":"为什么写博客？","type":8,"uuid":"359528bcfa0847fd47f6186d1b9b5891"},{"date":"2023-07-26 16:45:16","docid":0,"id":790,"linecolor":"ff59c6ff","page":284,"rect":[0,333.91998291015625,1,334.91998291015625],"title":"读研也挺忙的，写博客不会影响你日常工作吗？","type":8,"uuid":"746f63c0129ef0b85bc324e0d4592de7"},{"date":"2023-07-26 16:45:16","docid":0,"id":791,"linecolor":"ff59c6ff","page":284,"rect":[0,357.91998291015625,1,358.91998291015625],"title":"团队协作能力怎么样？举个例子？","type":8,"uuid":"bca93562b574a7dd26e963d550e41bc5"},{"date":"2023-07-26 16:45:16","docid":0,"id":792,"linecolor":"ff59c6ff","page":284,"rect":[0,380.91998291015625,1,381.91998291015625],"title":"周围的人是如何评价你的？","type":8,"uuid":"4583f27101c4d6111146c2741a170eac"},{"date":"2023-07-26 16:45:16","docid":0,"id":793,"linecolor":"ff59c6ff","page":284,"rect":[0,403.91998291015625,1,404.91998291015625],"title":"三个词概括你自己","type":8,"uuid":"a7bed6c4f856dad7303e930c546973fc"}],"page":284,"rect":[0,237.91998291015625,1,238.91998291015625],"title":"HR面（3.30，25min）","type":8,"uuid":"a537780ed83f39efaa448093de31617d"},{"date":"2023-07-26 16:45:16","docid":0,"id":794,"linecolor":"ff59c6ff","page":284,"rect":[0,426.91998291015625,1,427.91998291015625],"title":"签约答疑（4.9,30min）","type":8,"uuid":"391257f0b76d6ee178badf9d5ea2a77a"}],"page":283,"rect":[0,656.9199829101562,1,657.9199829101562],"title":"海康","type":8,"uuid":"2979c74cfcc9f8f0a953a944ebd8e5fa"},{"date":"2023-07-26 16:45:16","docid":0,"id":795,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":796,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":797,"linecolor":"ff59c6ff","page":284,"rect":[0,556.9199829101562,1,557.9199829101562],"title":"自我介绍","type":8,"uuid":"61aeb6abec2bec4cc281821907a584e4"},{"date":"2023-07-26 16:45:16","docid":0,"id":798,"linecolor":"ff59c6ff","page":284,"rect":[0,579.9199829101562,1,580.9199829101562],"title":"三个项目，问的很详细","type":8,"uuid":"b913b918b6aeaeb150362ac9c65db86d"},{"date":"2023-07-26 16:45:16","docid":0,"id":799,"linecolor":"ff59c6ff","page":284,"rect":[0,603.9199829101562,1,604.9199829101562],"title":"SPI是什么？有几条线？几种模式？","type":8,"uuid":"f9460d376bd87ab45f0bb04cc0c29104"},{"date":"2023-07-26 16:45:16","docid":0,"id":800,"linecolor":"ff59c6ff","page":284,"rect":[0,626.9199829101562,1,627.9199829101562],"title":"使用IO模拟过SPI吗？","type":8,"uuid":"205a4842374d1508e60f3ae7b9bbde7d"},{"date":"2023-07-26 16:45:16","docid":0,"id":801,"linecolor":"ff59c6ff","page":284,"rect":[0,649.9199829101562,1,650.9199829101562],"title":"堆和栈有什么区别？","type":8,"uuid":"2297e8bb9ef1f936377fb5f9ef4b60dd"},{"date":"2023-07-26 16:45:16","docid":0,"id":802,"linecolor":"ff59c6ff","page":284,"rect":[0,673.9199829101562,1,674.9199829101562],"title":"调用函数时，有那些内容需要压栈？","type":8,"uuid":"53fbcf160604f607b7992ff36bc92c45"},{"date":"2023-07-26 16:45:16","docid":0,"id":803,"linecolor":"ff59c6ff","page":284,"rect":[0,696.9199829101562,1,697.9199829101562],"title":"有什么要问我的？","type":8,"uuid":"3c267ce62d0927d03fd3d3775e936316"}],"page":284,"rect":[0,530.9199829101562,1,531.9199829101562],"title":"一面（4.2,20min）","type":8,"uuid":"af7394ab5577a5dafe2593ed3ecf932c"},{"date":"2023-07-26 16:45:16","docid":0,"id":804,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":805,"linecolor":"ff59c6ff","page":285,"rect":[0,54.91998291015625,1,55.91998291015625],"title":"自我介绍","type":8,"uuid":"691fb9101cad0d3a494d8c2ec407e7b5"},{"date":"2023-07-26 16:45:16","docid":0,"id":806,"linecolor":"ff59c6ff","page":285,"rect":[0,78.91998291015625,1,79.91998291015625],"title":"项目","type":8,"uuid":"a1ee60a03e11099bfd2c790944e32b2b"},{"date":"2023-07-26 16:45:16","docid":0,"id":807,"linecolor":"ff59c6ff","page":285,"rect":[0,101.91998291015625,1,102.91998291015625],"title":"uboot启动流程","type":8,"uuid":"fb5f66585cd6784401dee83336e1e931"},{"date":"2023-07-26 16:45:16","docid":0,"id":808,"linecolor":"ff59c6ff","page":285,"rect":[0,124.91998291015625,1,125.91998291015625],"title":"uboot启动前还需要做那些事情？","type":8,"uuid":"fca0b5e2b1a54e39bad3957a141c5673"},{"date":"2023-07-26 16:45:16","docid":0,"id":809,"linecolor":"ff59c6ff","page":285,"rect":[0,147.91998291015625,1,148.91998291015625],"title":"uboot启动时使用的是物理地址还是虚拟地址？MMU要开启吗？","type":8,"uuid":"d3c551eb83ca19f19991770f75fa76a6"},{"date":"2023-07-26 16:45:16","docid":0,"id":810,"linecolor":"ff59c6ff","page":285,"rect":[0,171.91998291015625,1,172.91998291015625],"title":"x86汇编和Arm汇编有什么区别？","type":8,"uuid":"6d31657c05db7df3143ba5da1600c1ba"},{"date":"2023-07-26 16:45:16","docid":0,"id":811,"linecolor":"ff59c6ff","page":285,"rect":[0,194.91998291015625,1,195.91998291015625],"title":"介绍一个你熟悉的驱动程序","type":8,"uuid":"ade1c17539ccfb862f995510eedc2454"},{"date":"2023-07-26 16:45:16","docid":0,"id":812,"linecolor":"ff59c6ff","page":285,"rect":[0,217.91998291015625,1,218.91998291015625],"title":"操作系统学过吗？自旋锁和信号量有什么区别？","type":8,"uuid":"0238cd646893b3e1069ab6a305c596db"},{"date":"2023-07-26 16:45:16","docid":0,"id":813,"linecolor":"ff59c6ff","page":285,"rect":[0,240.91998291015625,1,241.91998291015625],"title":"Linux系统的启动流程","type":8,"uuid":"e020bd790d65b11b29bd82c4e9de9573"},{"date":"2023-07-26 16:45:16","docid":0,"id":814,"linecolor":"ff59c6ff","page":285,"rect":[0,264.91998291015625,1,265.91998291015625],"title":"学过那些专业课，哪些学的比较好？","type":8,"uuid":"05ea52860069cbc222bb20727ecd230c"},{"date":"2023-07-26 16:45:16","docid":0,"id":815,"linecolor":"ff59c6ff","page":285,"rect":[0,287.91998291015625,1,288.91998291015625],"title":"你有什么想问我的？","type":8,"uuid":"f39691c52773c86d674ad813bb49b7ab"}],"page":285,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"二面（4.9,40min）","type":8,"uuid":"f70cda16a190d7357d0b5396cffc7ef2"},{"date":"2023-07-26 16:45:16","docid":0,"id":816,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":817,"linecolor":"ff59c6ff","page":285,"rect":[0,336.91998291015625,1,337.91998291015625],"title":"自我介绍","type":8,"uuid":"4e80c7008d34c43c195923fff66f47ea"},{"date":"2023-07-26 16:45:16","docid":0,"id":818,"linecolor":"ff59c6ff","page":285,"rect":[0,360.91998291015625,1,361.91998291015625],"title":"HR介绍部门","type":8,"uuid":"2979b4b4887285b7be53827dfcbb6ad3"},{"date":"2023-07-26 16:45:16","docid":0,"id":819,"linecolor":"ff59c6ff","page":285,"rect":[0,383.91998291015625,1,384.91998291015625],"title":"和那个公司签约了？","type":8,"uuid":"5d031c90a7f778f4fe05a28899532d26"},{"date":"2023-07-26 16:45:16","docid":0,"id":820,"linecolor":"ff59c6ff","page":285,"rect":[0,406.91998291015625,1,407.91998291015625],"title":"对工作地有什么要求？","type":8,"uuid":"30ae19db6cc1e7525601cb3e8ba8f6f6"},{"date":"2023-07-26 16:45:16","docid":0,"id":821,"linecolor":"ff59c6ff","page":285,"rect":[0,429.91998291015625,1,430.91998291015625],"title":"你有什么想问我的？","type":8,"uuid":"28f918e02a45f5e5bf9bf86f5884c64f"}],"page":285,"rect":[0,310.91998291015625,1,311.91998291015625],"title":"三面（4.12,15min）","type":8,"uuid":"2021dac5b905e4d6b46dd41a89f63b9d"},{"date":"2023-07-26 16:45:16","docid":0,"id":822,"linecolor":"ff59c6ff","page":285,"rect":[0,453.91998291015625,1,454.91998291015625],"title":"Offer","type":8,"uuid":"9b03faddd2c85740a866f2c6cead3aa7"}],"page":284,"rect":[0,500.91998291015625,1,501.91998291015625],"title":"OPPO","type":8,"uuid":"31cac25f431b178db28b0b5e627689a4"},{"date":"2023-07-26 16:45:16","docid":0,"id":823,"linecolor":"ff59c6ff","page":285,"rect":[0,556.9199829101562,1,557.9199829101562],"title":"总结","type":8,"uuid":"c2ad1d64acb9a62b86ab528f44ddaa93"}],"page":283,"rect":[0,417.91998291015625,1,418.91998291015625],"title":"oppo和海康嵌入式软件工程师面经分享","type":8,"uuid":"a5a15e44467485f1bd078c49c0d3af61"},{"date":"2023-07-26 16:45:16","docid":0,"id":824,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":825,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":826,"linecolor":"ff59c6ff","page":286,"rect":[0,89.91998291015625,1,90.91998291015625],"title":"个人情况简介","type":8,"uuid":"7a075582968172f8356e0f60ca4ba630"},{"date":"2023-07-26 16:45:16","docid":0,"id":827,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":828,"linecolor":"ff59c6ff","page":286,"rect":[0,441.91998291015625,1,442.91998291015625],"title":"投递过的企业","type":8,"uuid":"f3b03a12ac5093a6a68c63e359268383"},{"date":"2023-07-26 16:45:16","docid":0,"id":829,"linecolor":"ff59c6ff","page":286,"rect":[0,534.9199829101562,1,535.9199829101562],"title":"拿到的offer","type":8,"uuid":"a2c130b47450a229f4458909953de12d"}],"page":286,"rect":[0,336.91998291015625,1,337.91998291015625],"title":"秋招投递及offer情况","type":8,"uuid":"ae2b9f2ea2367b1d1f5728c7aedbfc37"},{"date":"2023-07-26 16:45:16","docid":0,"id":830,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":831,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":832,"linecolor":"ff59c6ff","page":287,"rect":[0,102.91998291015625,1,103.91998291015625],"title":"本科阶段","type":8,"uuid":"6777a0d5c8d4e7856907202da1108ea4"},{"date":"2023-07-26 16:45:16","docid":0,"id":833,"linecolor":"ff59c6ff","page":287,"rect":[0,226.91998291015625,1,227.91998291015625],"title":"研究生阶段","type":8,"uuid":"9b466ee1c4a269db770aa03d7b3a948f"}],"page":287,"rect":[0,79.91998291015625,1,80.91998291015625],"title":"项目","type":8,"uuid":"5bf0a9d660b17f770363c254a09b9bd3"},{"date":"2023-07-26 16:45:16","docid":0,"id":834,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":835,"linecolor":"ff59c6ff","page":292,"rect":[0,68.91998291015625,1,69.91998291015625],"title":"刷算法题","type":8,"uuid":"9a00898fd717981a0a4102ab3408c01c"}],"page":289,"rect":[0,502.91998291015625,1,503.91998291015625],"title":"专业知识","type":8,"uuid":"9c66fca242be829219097ad4ff2966cc"}],"page":287,"rect":[0,53.91998291015625,1,54.91998291015625],"title":"秋招准备","type":8,"uuid":"0375089b0d464396435ab9923d54eb98"},{"date":"2023-07-26 16:45:16","docid":0,"id":836,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:16","docid":0,"id":837,"linecolor":"ff59c6ff","page":296,"rect":[0,675.9199829101562,1,676.9199829101562],"title":"vivo 2021年06月13日一面(挂)","type":8,"uuid":"18725174da48c7c1fb355cdc6a873dcc"},{"date":"2023-07-26 16:45:16","docid":0,"id":838,"linecolor":"ff59c6ff","page":297,"rect":[0,204.91998291015625,1,205.91998291015625],"title":"乐鑫 2021年06月17日11:00一面(70min 挂)","type":8,"uuid":"aacb456b8ec490a72c85995c8b5ff419"},{"date":"2023-07-26 16:45:16","docid":0,"id":839,"linecolor":"ff59c6ff","page":297,"rect":[0,426.91998291015625,1,427.91998291015625],"title":"大华 2021年07月19日9:00电话面试一面(15min)","type":8,"uuid":"4080fd060d68803070f99bac1156d6b2"},{"date":"2023-07-26 16:45:16","docid":0,"id":840,"linecolor":"ff59c6ff","page":298,"rect":[0,250.91998291015625,1,251.91998291015625],"title":"大华 2021年07月23日电话面试二面(10min)","type":8,"uuid":"e2f1901ea102ffe9124ebc9b875a74d2"},{"date":"2023-07-26 16:45:16","docid":0,"id":841,"linecolor":"ff59c6ff","page":299,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"大华 2021年07月27日电话面试(hr面10min)","type":8,"uuid":"3f86f39a5e6423fe3c83f283a8398319"},{"date":"2023-07-26 16:45:16","docid":0,"id":842,"linecolor":"ff59c6ff","page":299,"rect":[0,99.91998291015625,1,100.91998291015625],"title":"联发科技 2021年07月16日一面10:45(60min)","type":8,"uuid":"c9e3c5027eefff8f492bf2c408aaa664"},{"date":"2023-07-26 16:45:16","docid":0,"id":843,"linecolor":"ff59c6ff","page":299,"rect":[0,192.91998291015625,1,193.91998291015625],"title":"联发科技 2021年07月19日16:45二面 35min","type":8,"uuid":"07ab7d596f7fa2e24e0b2f0a6dc022aa"},{"date":"2023-07-26 16:45:16","docid":0,"id":844,"linecolor":"ff59c6ff","page":299,"rect":[0,240.91998291015625,1,241.91998291015625],"title":"联发科技 2021年8月22日18:00谈薪","type":8,"uuid":"2c80bd6f29d3906976a2f2eef017ff25"},{"date":"2023-07-26 16:45:16","docid":0,"id":845,"linecolor":"ff59c6ff","page":299,"rect":[0,334.91998291015625,1,335.91998291015625],"title":"汇顶 2021年07月17日9:45一面(50min)","type":8,"uuid":"8eda253a6fd936392298968642b6fc12"},{"date":"2023-07-26 16:45:17","docid":0,"id":846,"linecolor":"ff59c6ff","page":299,"rect":[0,504.91998291015625,1,505.91998291015625],"title":"汇顶 2021年07月20日15:00二面(15min)","type":8,"uuid":"32a69a1b76d3df82dff3a9623ed41607"},{"date":"2023-07-26 16:45:17","docid":0,"id":847,"linecolor":"ff59c6ff","page":299,"rect":[0,620.9199829101562,1,621.9199829101562],"title":"汇顶谈薪 2021年08月12日16:40","type":8,"uuid":"ec18c731b93926a685512930d6105c2e"},{"date":"2023-07-26 16:45:17","docid":0,"id":848,"linecolor":"ff59c6ff","page":300,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"星宸科技 2021年07月13日一面 电话面试(36min)","type":8,"uuid":"ff701720aa4fa306db5b32c347ab998f"},{"date":"2023-07-26 16:45:17","docid":0,"id":849,"linecolor":"ff59c6ff","page":301,"rect":[0,614.9199829101562,1,615.9199829101562],"title":"星宸科技 2021年07月17日20min HR沟通","type":8,"uuid":"3094bb3c0351087b1db8f14f7480b488"},{"date":"2023-07-26 16:45:17","docid":0,"id":850,"linecolor":"ff59c6ff","page":302,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"星宸谈薪2021年9月27日16:50","type":8,"uuid":"247c8c8d9432f64587539cde74d5fdd4"},{"date":"2023-07-26 16:45:17","docid":0,"id":851,"linecolor":"ff59c6ff","page":302,"rect":[0,99.91998291015625,1,100.91998291015625],"title":"联影微 2021年08月9日15:00一面(60min)","type":8,"uuid":"2dd43ab465d6d9fb7a4f2186ab03bd27"},{"date":"2023-07-26 16:45:17","docid":0,"id":852,"linecolor":"ff59c6ff","page":304,"rect":[0,637.9199829101562,1,638.9199829101562],"title":"紫光展锐 2021年08月6日10:00一面(30min)","type":8,"uuid":"64c3ab557637422652e7d1e97502535c"},{"date":"2023-07-26 16:45:17","docid":0,"id":853,"linecolor":"ff59c6ff","page":305,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"海康威视 2021年08月7日11:00(突然来电30min)","type":8,"uuid":"292ea6d9ade4411cccd9b0ef8079f5b3"},{"date":"2023-07-26 16:45:17","docid":0,"id":854,"linecolor":"ff59c6ff","page":305,"rect":[0,236.91998291015625,1,237.91998291015625],"title":"紫光展锐 2021年08月9日16:50二面(16min)","type":8,"uuid":"1ebb47b4b6965d5f12111b3dedb46aaa"},{"date":"2023-07-26 16:45:17","docid":0,"id":855,"linecolor":"ff59c6ff","page":305,"rect":[0,443.91998291015625,1,444.91998291015625],"title":"诺瓦科技 2021年08月12日10:40(嵌入式一面50min)","type":8,"uuid":"036c196bdd83eb8cc2f02833acf6810c"},{"date":"2023-07-26 16:45:17","docid":0,"id":856,"linecolor":"ff59c6ff","page":305,"rect":[0,491.91998291015625,1,492.91998291015625],"title":"诺瓦科技 2021年08月12日15:00(FPGA一面30min)","type":8,"uuid":"28cdbef38d90a8c961e27a2be83fb07c"},{"date":"2023-07-26 16:45:17","docid":0,"id":857,"linecolor":"ff59c6ff","page":305,"rect":[0,539.9199829101562,1,540.9199829101562],"title":"诺瓦科技 2021年08月19日09:50二面(嵌入式方向)","type":8,"uuid":"39b0a7cb5653c74096291635ee078ea9"},{"date":"2023-07-26 16:45:17","docid":0,"id":858,"linecolor":"ff59c6ff","page":305,"rect":[0,633.9199829101562,1,634.9199829101562],"title":"CVTE 2021年08月12日16:00(一面15min)","type":8,"uuid":"b1ae918620d92e4c31fd53c34a45c652"},{"date":"2023-07-26 16:45:17","docid":0,"id":859,"linecolor":"ff59c6ff","page":306,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"CVTE 2021年08月18日21:00 (HR面25min)","type":8,"uuid":"c17390bb9bac638bb7ce5c0a60781a7d"},{"date":"2023-07-26 16:45:17","docid":0,"id":860,"linecolor":"ff59c6ff","page":306,"rect":[0,76.91998291015625,1,77.91998291015625],"title":"阿里云 2021年08月17日20:00电话面试(30min)","type":8,"uuid":"13aa2e3df8e7c2b5a7164e57c709f1da"},{"date":"2023-07-26 16:45:17","docid":0,"id":861,"linecolor":"ff59c6ff","page":306,"rect":[0,246.91998291015625,1,247.91998291015625],"title":"小米 2021年08月24日14:00(一面)","type":8,"uuid":"d47db1e9414c41dc6923515f1a262c1e"},{"date":"2023-07-26 16:45:17","docid":0,"id":862,"linecolor":"ff59c6ff","page":307,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"小米 2021年08月26日15:00(二面)","type":8,"uuid":"e6cceb632b730fc4b0fc153640b463d1"},{"date":"2023-07-26 16:45:17","docid":0,"id":863,"linecolor":"ff59c6ff","page":307,"rect":[0,448.91998291015625,1,449.91998291015625],"title":"小米 2021年9月15日19:30(谈薪)","type":8,"uuid":"181659a9d3af51a625961baf0e622a81"},{"date":"2023-07-26 16:45:17","docid":0,"id":864,"linecolor":"ff59c6ff","page":307,"rect":[0,542.9199829101562,1,543.9199829101562],"title":"荣耀 2021年08月25日09:00~11:00(一面)","type":8,"uuid":"427b90ab5400aefd44d22e0756589295"},{"date":"2023-07-26 16:45:17","docid":0,"id":865,"linecolor":"ff59c6ff","page":307,"rect":[0,688.9199829101562,1,689.9199829101562],"title":"荣耀 2021年08月28日09:30~10:10(二面)","type":8,"uuid":"cc445fa49b239f1bc8b2e280eb3e1a9b"},{"date":"2023-07-26 16:45:17","docid":0,"id":866,"linecolor":"ff59c6ff","page":308,"rect":[0,144.91998291015625,1,145.91998291015625],"title":"大疆 2021年08月27日19:45~20:30(一面)","type":8,"uuid":"08c49cc690bc4409ef4b368da650afcf"},{"date":"2023-07-26 16:45:17","docid":0,"id":867,"linecolor":"ff59c6ff","page":310,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"大疆 2021年09月4日10:00(二面)","type":8,"uuid":"b6975ad1ed08b868dd90b4dbdcaff8d2"},{"date":"2023-07-26 16:45:17","docid":0,"id":868,"linecolor":"ff59c6ff","page":310,"rect":[0,213.91998291015625,1,214.91998291015625],"title":"大疆 2021年09月13日15:30(三面)20min","type":8,"uuid":"8e02c609d345fe98b5b26e0933bba6a9"},{"date":"2023-07-26 16:45:17","docid":0,"id":869,"linecolor":"ff59c6ff","page":311,"rect":[0,280.91998291015625,1,281.91998291015625],"title":"大疆 2021年9月28日(谈薪)","type":8,"uuid":"6d8646cfff0ee2b244dca5fa35e8297e"},{"date":"2023-07-26 16:45:17","docid":0,"id":870,"linecolor":"ff59c6ff","page":311,"rect":[0,351.91998291015625,1,352.91998291015625],"title":"ARM 2021年09月13日14:00(一面)20min","type":8,"uuid":"d2c7375bcc3088d6506f385b17a62dd7"},{"date":"2023-07-26 16:45:17","docid":0,"id":871,"linecolor":"ff59c6ff","page":312,"rect":[0,372.91998291015625,1,373.91998291015625],"title":"ARM 2021年09月18日17:00(二面)","type":8,"uuid":"0aebce52435b47b4b24b6b829cea39f2"},{"date":"2023-07-26 16:45:17","docid":0,"id":872,"linecolor":"ff59c6ff","page":312,"rect":[0,602.9199829101562,1,603.9199829101562],"title":"科大讯飞 2021年09月13日15:30~16:00(一面)","type":8,"uuid":"5f27c1fd04fc713070efe22cef1c26fe"},{"date":"2023-07-26 16:45:17","docid":0,"id":873,"linecolor":"ff59c6ff","page":313,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"360 2021年09月6日14:00(一面)","type":8,"uuid":"695a25b4db3e126848ec60523e671bf5"},{"date":"2023-07-26 16:45:17","docid":0,"id":874,"linecolor":"ff59c6ff","page":313,"rect":[0,577.9199829101562,1,578.9199829101562],"title":"小马智行 2021年09月11日16:15(一面)","type":8,"uuid":"5a30fa4fdb6a6ddb1d2cc77f36cc3af7"},{"date":"2023-07-26 16:45:17","docid":0,"id":875,"linecolor":"ff59c6ff","page":314,"rect":[0,555.9199829101562,1,556.9199829101562],"title":"小马智行 2021年09月26日14:00(二面)60min","type":8,"uuid":"97b8bf6e3f1bd70fccd4ad4fcc0e6883"},{"date":"2023-07-26 16:45:17","docid":0,"id":876,"linecolor":"ff59c6ff","page":315,"rect":[0,477.91998291015625,1,478.91998291015625],"title":"小马智行 2021年10月12日20:00(三面)","type":8,"uuid":"5f9a34b308a07cf1d9ab4c63a0e8c32d"},{"date":"2023-07-26 16:45:17","docid":0,"id":877,"linecolor":"ff59c6ff","page":316,"rect":[0,211.91998291015625,1,212.91998291015625],"title":"华为 2021年09月13日15:00(一面)","type":8,"uuid":"a95f2054781271a76c56b66c50f7ce1d"},{"date":"2023-07-26 16:45:17","docid":0,"id":878,"linecolor":"ff59c6ff","page":317,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"华为 2021年09月13日(紧接着二面)","type":8,"uuid":"8ad1b7be7531626d41ea5d5ca18aab2e"},{"date":"2023-07-26 16:45:17","docid":0,"id":879,"linecolor":"ff59c6ff","page":317,"rect":[0,205.91998291015625,1,206.91998291015625],"title":"华为  2021年09月17日15:00(主管面)","type":8,"uuid":"d972ed7f20ac2b714c55dde24d81297e"},{"date":"2023-07-26 16:45:17","docid":0,"id":880,"linecolor":"ff59c6ff","page":317,"rect":[0,367.91998291015625,1,368.91998291015625],"title":"美团 2021年09月19日10:45(一面)","type":8,"uuid":"b738f82d649c313d6c9848adff82737e"},{"date":"2023-07-26 16:45:17","docid":0,"id":881,"linecolor":"ff59c6ff","page":317,"rect":[0,438.91998291015625,1,439.91998291015625],"title":"美团 2021年09月25日16:00（二面）","type":8,"uuid":"bb09055b29798910082e5e0ad64f2169"},{"date":"2023-07-26 16:45:17","docid":0,"id":882,"linecolor":"ff59c6ff","page":317,"rect":[0,509.91998291015625,1,510.91998291015625],"title":"vivo 2021年09月28日14:30~15:00(一面)","type":8,"uuid":"0918e3932ff493ca2a3cce83782208c7"},{"date":"2023-07-26 16:45:17","docid":0,"id":883,"linecolor":"ff59c6ff","page":317,"rect":[0,694.9199829101562,1,695.9199829101562],"title":"OPPO 2021年09月27日16:00(一面)","type":8,"uuid":"98eea98803371183c52fd8ecfbfea243"},{"date":"2023-07-26 16:45:17","docid":0,"id":884,"linecolor":"ff59c6ff","page":318,"rect":[0,75.91998291015625,1,76.91998291015625],"title":"OPPO 2021年09月29日19:00(二面)","type":8,"uuid":"f7515c456ab08413a1db53aa05a38a08"},{"date":"2023-07-26 16:45:17","docid":0,"id":885,"linecolor":"ff59c6ff","page":318,"rect":[0,306.91998291015625,1,307.91998291015625],"title":"OPPO 2021年10月11日15:20~16:00(三面)","type":8,"uuid":"f832f92591cdf5d15cc3ca647307a94a"}],"page":296,"rect":[0,649.9199829101562,1,650.9199829101562],"title":"秋招实况记录","type":8,"uuid":"d085b5294cdb85f315768c039b188d5d"},{"date":"2023-07-26 16:45:17","docid":0,"id":886,"linecolor":"ff59c6ff","page":319,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"总结","type":8,"uuid":"74c2dd4797470b236c8a6fd7d661e9de"}],"page":286,"rect":[0,59.91998291015625,1,60.91998291015625],"title":"秋招总拿SP是什么样的体验","type":8,"uuid":"44f0b01bb478e6c6ff7e394261629c16"},{"date":"2023-07-26 16:45:17","docid":0,"id":887,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:17","docid":0,"id":888,"linecolor":"ff59c6ff","page":325,"rect":[0,432.91998291015625,1,433.91998291015625],"title":"个人背景","type":8,"uuid":"2b8085819ce880ac1632fbd261f71627"},{"date":"2023-07-26 16:45:17","docid":0,"id":889,"linecolor":"ff59c6ff","page":325,"rect":[0,679.9199829101562,1,680.9199829101562],"title":"学习经历","type":8,"uuid":"6a4cc47d1125aa0b44d362fa04491d35"},{"date":"2023-07-26 16:45:17","docid":0,"id":890,"linecolor":"ff59c6ff","page":326,"rect":[0,53.91998291015625,1,54.91998291015625],"title":"实习经历","type":8,"uuid":"52ea9cfd28c845cbf1f29f4e586bb162"},{"date":"2023-07-26 16:45:17","docid":0,"id":891,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:17","docid":0,"id":892,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:17","docid":0,"id":893,"linecolor":"ff59c6ff","page":326,"rect":[0,278.91998291015625,1,279.91998291015625],"title":"联发科提前批一面 30分钟 8.2","type":8,"uuid":"f362eab6b0b5f120b27e2086b1402c77"},{"date":"2023-07-26 16:45:17","docid":0,"id":894,"linecolor":"ff59c6ff","page":326,"rect":[0,431.91998291015625,1,432.91998291015625],"title":"联发科提前批二面 30分钟   8.9","type":8,"uuid":"aa64004f95ed1231b41008cbf209ae5c"},{"date":"2023-07-26 16:45:17","docid":0,"id":895,"linecolor":"ff59c6ff","page":326,"rect":[0,600.9199829101562,1,601.9199829101562],"title":"总结","type":8,"uuid":"45674a82116edc3635c25fa8fca45c42"}],"page":326,"rect":[0,230.91998291015625,1,231.91998291015625],"title":"联发科面试 oc","type":8,"uuid":"19d2ae3958b27594f0942b3c7479595f"},{"date":"2023-07-26 16:45:17","docid":0,"id":896,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:17","docid":0,"id":897,"linecolor":"ff59c6ff","page":326,"rect":[0,686.9199829101562,1,687.9199829101562],"title":"星宸科技技术面 一小时  8.12","type":8,"uuid":"8f79cc3bb30288bbe6ef70694d203ddd"},{"date":"2023-07-26 16:45:17","docid":0,"id":898,"linecolor":"ff59c6ff","page":327,"rect":[0,203.91998291015625,1,204.91998291015625],"title":"星宸科技HR 半小时  8.17","type":8,"uuid":"e7addf57bef1b57cd514061b84d6d0d3"},{"date":"2023-07-26 16:45:17","docid":0,"id":899,"linecolor":"ff59c6ff","page":327,"rect":[0,401.91998291015625,1,402.91998291015625],"title":"总结","type":8,"uuid":"0b0c481be8e3db4a79d7ef004347955d"}],"page":326,"rect":[0,663.9199829101562,1,664.9199829101562],"title":"星宸科技 oc","type":8,"uuid":"6797291848c07903ab7c9aa96f38fe0f"},{"date":"2023-07-26 16:45:17","docid":0,"id":900,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:17","docid":0,"id":901,"linecolor":"ff59c6ff","page":327,"rect":[0,487.91998291015625,1,488.91998291015625],"title":"大疆一面 一小时 8.19","type":8,"uuid":"e581a78c4e6c162596dbc607fbba8a01"},{"date":"2023-07-26 16:45:17","docid":0,"id":902,"linecolor":"ff59c6ff","page":328,"rect":[0,670.9199829101562,1,671.9199829101562],"title":"大疆二面 半小时  8.26","type":8,"uuid":"3687db6da59b4f8d23a8cd6a4263917d"},{"date":"2023-07-26 16:45:17","docid":0,"id":903,"linecolor":"ff59c6ff","page":329,"rect":[0,83.91998291015625,1,84.91998291015625],"title":"大疆三面 半小时  9.3","type":8,"uuid":"1bdc6ee05c2493e311f32dd9607cf081"},{"date":"2023-07-26 16:45:17","docid":0,"id":904,"linecolor":"ff59c6ff","page":329,"rect":[0,221.91998291015625,1,222.91998291015625],"title":"总结","type":8,"uuid":"623f84dd1a3155214bee9aac3b964717"}],"page":327,"rect":[0,464.91998291015625,1,465.91998291015625],"title":"大疆oc+签约","type":8,"uuid":"2e6b8370be26f076304a443aeab513d9"},{"date":"2023-07-26 16:45:17","docid":0,"id":905,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:17","docid":0,"id":906,"linecolor":"ff59c6ff","page":329,"rect":[0,337.91998291015625,1,338.91998291015625],"title":"荣耀一面 半小时 8.21","type":8,"uuid":"22bed42552d2c4404a65c44dc868bdc1"},{"date":"2023-07-26 16:45:17","docid":0,"id":907,"linecolor":"ff59c6ff","page":329,"rect":[0,460.91998291015625,1,461.91998291015625],"title":"荣耀二面 半小时 8.22","type":8,"uuid":"9d2db6e0a71545f0f23be24231ccda5f"},{"date":"2023-07-26 16:45:17","docid":0,"id":908,"linecolor":"ff59c6ff","page":329,"rect":[0,583.9199829101562,1,584.9199829101562],"title":"荣耀综合面  9.7","type":8,"uuid":"ac22cbce0564cda74b1880fde329d414"},{"date":"2023-07-26 16:45:17","docid":0,"id":909,"linecolor":"ff59c6ff","page":330,"rect":[0,83.91998291015625,1,84.91998291015625],"title":"总结","type":8,"uuid":"e3c472e84b8d4a44b0217f7fc1c4809a"}],"page":329,"rect":[0,314.91998291015625,1,315.91998291015625],"title":"荣耀 oc","type":8,"uuid":"8163324f6812dcd5794dbcbc73ddd43f"},{"date":"2023-07-26 16:45:17","docid":0,"id":910,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:17","docid":0,"id":911,"linecolor":"ff59c6ff","page":330,"rect":[0,169.91998291015625,1,170.91998291015625],"title":"紫光一面 40分钟  8.24","type":8,"uuid":"604b1d34602945114bf25349da200f44"},{"date":"2023-07-26 16:45:17","docid":0,"id":912,"linecolor":"ff59c6ff","page":330,"rect":[0,307.91998291015625,1,308.91998291015625],"title":"紫光二面 40分钟  8.29","type":8,"uuid":"74d7fa7e6f2cffaf28c675e3de00687b"},{"date":"2023-07-26 16:45:17","docid":0,"id":913,"linecolor":"ff59c6ff","page":330,"rect":[0,490.91998291015625,1,491.91998291015625],"title":"总结","type":8,"uuid":"c828f80919f1601942c20bc24bb24a4b"}],"page":330,"rect":[0,146.91998291015625,1,147.91998291015625],"title":"紫光 面试通过泡池子","type":8,"uuid":"45990ec035c564b70042565c2f0d97e9"},{"date":"2023-07-26 16:45:17","docid":0,"id":914,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:17","docid":0,"id":915,"linecolor":"ff59c6ff","page":330,"rect":[0,576.9199829101562,1,577.9199829101562],"title":"CVTE提前批技术面 1个多小时  8.25","type":8,"uuid":"af038d2d836523fff47fc4b7bde59083"},{"date":"2023-07-26 16:45:17","docid":0,"id":916,"linecolor":"ff59c6ff","page":331,"rect":[0,143.91998291015625,1,144.91998291015625],"title":"CVTE提前批 HR面  9.2","type":8,"uuid":"ddaab0a905f886ae4c28faeb70f547c9"},{"date":"2023-07-26 16:45:17","docid":0,"id":917,"linecolor":"ff59c6ff","page":331,"rect":[0,311.91998291015625,1,312.91998291015625],"title":"总结","type":8,"uuid":"5ac963b6e2bf85f98da734301c702f60"}],"page":330,"rect":[0,553.9199829101562,1,554.9199829101562],"title":"CVTE oc","type":8,"uuid":"1300b9da42663dba09ac7a10a08b96ac"},{"date":"2023-07-26 16:45:17","docid":0,"id":918,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:17","docid":0,"id":919,"linecolor":"ff59c6ff","page":331,"rect":[0,397.91998291015625,1,398.91998291015625],"title":"科大讯飞一面 半小时 8.25","type":8,"uuid":"c7a49213745e554a58c92bd67b0658d8"},{"date":"2023-07-26 16:45:17","docid":0,"id":920,"linecolor":"ff59c6ff","page":331,"rect":[0,535.9199829101562,1,536.9199829101562],"title":"科大讯飞二面 20分钟 8.28","type":8,"uuid":"000a28229836200562a89b8940f4c476"},{"date":"2023-07-26 16:45:17","docid":0,"id":921,"linecolor":"ff59c6ff","page":331,"rect":[0,643.9199829101562,1,644.9199829101562],"title":"科大讯飞Hr 20分钟 9.1","type":8,"uuid":"fed76b5b82e3e8fcc6e21dbea98866af"}],"page":331,"rect":[0,374.91998291015625,1,375.91998291015625],"title":"科大讯飞 oc","type":8,"uuid":"40ad140025fc9930adb55b7c4c931065"},{"date":"2023-07-26 16:45:17","docid":0,"id":922,"linecolor":"ff59c6ff","page":332,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"总结","type":8,"uuid":"766398a974898110e65f5bdcf76b517c"},{"date":"2023-07-26 16:45:17","docid":0,"id":923,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:17","docid":0,"id":924,"linecolor":"ff59c6ff","page":332,"rect":[0,114.91998291015625,1,115.91998291015625],"title":"ARM 一面 一个小时   9.8","type":8,"uuid":"1d797ebb6f13a47222a1ef947a8df76c"},{"date":"2023-07-26 16:45:17","docid":0,"id":925,"linecolor":"ff59c6ff","page":333,"rect":[0,53.91998291015625,1,54.91998291015625],"title":"ARM 二面 9.24 一小时","type":8,"uuid":"3afafe1248488e78ea1b00f37f6a4e2f"},{"date":"2023-07-26 16:45:17","docid":0,"id":926,"linecolor":"ff59c6ff","page":333,"rect":[0,462.91998291015625,1,463.91998291015625],"title":"ARM 三面 9.24 一小时","type":8,"uuid":"891477e07353848d09b7cd62629644ae"},{"date":"2023-07-26 16:45:17","docid":0,"id":927,"linecolor":"ff59c6ff","page":333,"rect":[0,661.9199829101562,1,662.9199829101562],"title":"ARM 四面 9.26 45分钟","type":8,"uuid":"fd8bbd4cb10312527378e4a07a9182d1"},{"date":"2023-07-26 16:45:17","docid":0,"id":928,"linecolor":"ff59c6ff","page":334,"rect":[0,143.91998291015625,1,144.91998291015625],"title":"总结","type":8,"uuid":"fabc3aa48e2ff49b1d6e574d8d3f6d05"}],"page":332,"rect":[0,91.91998291015625,1,92.91998291015625],"title":"Arm china oc","type":8,"uuid":"05213694af8e6120b763784b78158154"},{"date":"2023-07-26 16:45:17","docid":0,"id":929,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:17","docid":0,"id":930,"linecolor":"ff59c6ff","page":334,"rect":[0,244.91998291015625,1,245.91998291015625],"title":"诺瓦 一面 40分钟 9.11","type":8,"uuid":"fa1cd8a27de96c4684d7c6cba10ba79c"},{"date":"2023-07-26 16:45:17","docid":0,"id":931,"linecolor":"ff59c6ff","page":334,"rect":[0,532.9199829101562,1,533.9199829101562],"title":"诺瓦 二面 40分钟  9.14","type":8,"uuid":"fd01e99abb6e1021079926a03c13c089"},{"date":"2023-07-26 16:45:17","docid":0,"id":932,"linecolor":"ff59c6ff","page":334,"rect":[0,715.9199829101562,1,716.9199829101562],"title":"总结","type":8,"uuid":"a701facecd1c9b8ab396853c8065c6e3"}],"page":334,"rect":[0,221.91998291015625,1,222.91998291015625],"title":"诺瓦科技 oc","type":8,"uuid":"612d292b4d36d0e90b36bc1acb7ba7d8"},{"date":"2023-07-26 16:45:17","docid":0,"id":933,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:17","docid":0,"id":934,"linecolor":"ff59c6ff","page":335,"rect":[0,51.91998291015625,1,52.91998291015625],"title":"全志科技一面 半小时  9.16","type":8,"uuid":"7a24e97d5eac7cd21de97a9bfb319883"},{"date":"2023-07-26 16:45:17","docid":0,"id":935,"linecolor":"ff59c6ff","page":335,"rect":[0,294.91998291015625,1,295.91998291015625],"title":"全志科技hr 半小时  10.8","type":8,"uuid":"0b297fce77835e1c382a452da77d323b"},{"date":"2023-07-26 16:45:17","docid":0,"id":936,"linecolor":"ff59c6ff","page":335,"rect":[0,477.91998291015625,1,478.91998291015625],"title":"总结","type":8,"uuid":"df35f74f71ce239833504b804a0e5f42"}],"page":335,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"全志科技 oc","type":8,"uuid":"ffe4fb5e0ed6e876243d63495fcbb87b"},{"date":"2023-07-26 16:45:17","docid":0,"id":937,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:17","docid":0,"id":938,"linecolor":"ff59c6ff","page":335,"rect":[0,564.9199829101562,1,565.9199829101562],"title":"小米一面  9.24 35分钟","type":8,"uuid":"79b53dcba60f86b421f1f850b3529878"},{"date":"2023-07-26 16:45:17","docid":0,"id":939,"linecolor":"ff59c6ff","page":336,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"小米二面  9.26 40分钟","type":8,"uuid":"c02cf62ab662b3926cce177f47598654"},{"date":"2023-07-26 16:45:17","docid":0,"id":940,"linecolor":"ff59c6ff","page":336,"rect":[0,272.91998291015625,1,273.91998291015625],"title":"总结","type":8,"uuid":"74cc70510cd7d9379d5ee866a550c0a6"}],"page":335,"rect":[0,540.9199829101562,1,541.9199829101562],"title":"小米 oc","type":8,"uuid":"3d07373a3814aa474b0fa058a654fb83"},{"date":"2023-07-26 16:45:18","docid":0,"id":941,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":942,"linecolor":"ff59c6ff","page":336,"rect":[0,373.91998291015625,1,374.91998291015625],"title":"美团一面 80分钟  9.30","type":8,"uuid":"5081858fbbd040becfd50e335ead67df"},{"date":"2023-07-26 16:45:18","docid":0,"id":943,"linecolor":"ff59c6ff","page":336,"rect":[0,571.9199829101562,1,572.9199829101562],"title":"美团二面 50分钟  10.8","type":8,"uuid":"3d72e60372634058f899e53c71bd12f3"},{"date":"2023-07-26 16:45:18","docid":0,"id":944,"linecolor":"ff59c6ff","page":337,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"总结","type":8,"uuid":"50ae7aaeb4ef138e946b6c9dd6c3c624"}],"page":336,"rect":[0,350.91998291015625,1,351.91998291015625],"title":"美团 待开奖","type":8,"uuid":"7377d49ef0f1167b424be9ae67346725"}],"page":326,"rect":[0,164.91998291015625,1,165.91998291015625],"title":"面试经历","type":8,"uuid":"102d76587ce9499225176c307332c5db"},{"date":"2023-07-26 16:45:18","docid":0,"id":945,"linecolor":"ff59c6ff","page":337,"rect":[0,106.91998291015625,1,107.91998291015625],"title":"个人总结","type":8,"uuid":"c2d31d98156b6cd7caff5c63fc9991fc"}],"page":319,"rect":[0,516.9199829101562,1,517.9199829101562],"title":"双非本科进大疆","type":8,"uuid":"f960eab576218e122ff9cec3a15c8ea7"},{"date":"2023-07-26 16:45:18","docid":0,"id":946,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":947,"linecolor":"ff59c6ff","page":341,"rect":[0,321.91998291015625,1,322.91998291015625],"title":"个人背景","type":8,"uuid":"dcc1b060222b36c578263393dde1d6b5"},{"date":"2023-07-26 16:45:18","docid":0,"id":948,"linecolor":"ff59c6ff","page":341,"rect":[0,432.91998291015625,1,433.91998291015625],"title":"学习经历","type":8,"uuid":"37c69a487f31225a62a2567da96f41e5"},{"date":"2023-07-26 16:45:18","docid":0,"id":949,"linecolor":"ff59c6ff","page":341,"rect":[0,710.9199829101562,1,711.9199829101562],"title":"实习经历","type":8,"uuid":"f50049abe6f2df417429dc79383d2722"},{"date":"2023-07-26 16:45:18","docid":0,"id":950,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":951,"linecolor":"ff59c6ff","page":342,"rect":[0,169.91998291015625,1,170.91998291015625],"title":"1．面试情况","type":8,"uuid":"a9caf200564543623dc2f3bd3317fc58"},{"date":"2023-07-26 16:45:18","docid":0,"id":952,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":953,"linecolor":"ff59c6ff","page":343,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"1）OPPO篇","type":8,"uuid":"f9b94264377534e6d7d40af6b5ff848a"},{"date":"2023-07-26 16:45:18","docid":0,"id":954,"linecolor":"ff59c6ff","page":343,"rect":[0,304.91998291015625,1,305.91998291015625],"title":"2) 视源股份(CVTE)篇","type":8,"uuid":"f8f4492cac66a353eaf8ce2b87b6c279"},{"date":"2023-07-26 16:45:18","docid":0,"id":955,"linecolor":"ff59c6ff","page":344,"rect":[0,483.91998291015625,1,484.91998291015625],"title":"3）TCL篇","type":8,"uuid":"4d01d8e97a0222fbea7758d836bf0853"},{"date":"2023-07-26 16:45:18","docid":0,"id":956,"linecolor":"ff59c6ff","page":344,"rect":[0,561.9199829101562,1,562.9199829101562],"title":"4）海康威视篇","type":8,"uuid":"94eaf97bfeee98be9d502f994b1253fc"},{"date":"2023-07-26 16:45:18","docid":0,"id":957,"linecolor":"ff59c6ff","page":345,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"5）中兴篇","type":8,"uuid":"cdd0e9e3ce0730bc388fddef0db57ff8"},{"date":"2023-07-26 16:45:18","docid":0,"id":958,"linecolor":"ff59c6ff","page":345,"rect":[0,204.91998291015625,1,205.91998291015625],"title":"6）荣耀篇","type":8,"uuid":"16425eaf794b0c52427c1059786a74f9"}],"page":342,"rect":[0,698.9199829101562,1,699.9199829101562],"title":"2．面试问到的问题","type":8,"uuid":"5eaf111bbe037766f518e09e99558287"},{"date":"2023-07-26 16:45:18","docid":0,"id":959,"linecolor":"ff59c6ff","page":345,"rect":[0,275.91998291015625,1,276.91998291015625],"title":"3. 关于HR面","type":8,"uuid":"bbdd1ec242963f68987eb0d6fb18d75a"}],"page":342,"rect":[0,143.91998291015625,1,144.91998291015625],"title":"面试经历","type":8,"uuid":"3005e7e95199331d6e57eefb2c76d354"},{"date":"2023-07-26 16:45:18","docid":0,"id":960,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":961,"linecolor":"ff59c6ff","page":345,"rect":[0,507.91998291015625,1,508.91998291015625],"title":"在投递时间上","type":8,"uuid":"6df4419fa011fece111276ceb3fd9664"},{"date":"2023-07-26 16:45:18","docid":0,"id":962,"linecolor":"ff59c6ff","page":345,"rect":[0,585.9199829101562,1,586.9199829101562],"title":"在公司投递选择上","type":8,"uuid":"8817872ee01f4ea5b31ddd13bb617c0a"},{"date":"2023-07-26 16:45:18","docid":0,"id":963,"linecolor":"ff59c6ff","page":345,"rect":[0,678.9199829101562,1,679.9199829101562],"title":"在面试准备上","type":8,"uuid":"cad155f07a8b81fcfe4139515cf14df8"},{"date":"2023-07-26 16:45:18","docid":0,"id":964,"linecolor":"ff59c6ff","page":346,"rect":[0,150.91998291015625,1,151.91998291015625],"title":"在心态上","type":8,"uuid":"2e6be4b093ff5202a8bbdbd67edae655"},{"date":"2023-07-26 16:45:18","docid":0,"id":965,"linecolor":"ff59c6ff","page":346,"rect":[0,297.91998291015625,1,298.91998291015625],"title":"最后寄语及感谢","type":8,"uuid":"553ba6c32c2dd343ff1a3aeba3b69627"}],"page":345,"rect":[0,480.91998291015625,1,481.91998291015625],"title":"个人总结","type":8,"uuid":"8add57c3d19ee22f8e880563ac113e69"}],"page":337,"rect":[0,426.91998291015625,1,427.91998291015625],"title":"双非本科拿下Oppo sp","type":8,"uuid":"bdab706bdc4092424d295913ecf73bf5"},{"date":"2023-07-26 16:45:18","docid":0,"id":966,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":967,"linecolor":"ff59c6ff","page":346,"rect":[0,613.9199829101562,1,614.9199829101562],"title":"offer","type":8,"uuid":"1b9a4f4c23e7829c4df1183c919cc9e4"},{"date":"2023-07-26 16:45:18","docid":0,"id":968,"linecolor":"ff59c6ff","page":346,"rect":[0,679.9199829101562,1,680.9199829101562],"title":"基本介绍","type":8,"uuid":"86ebbe6463f34aea98c5c910fadf588f"},{"date":"2023-07-26 16:45:18","docid":0,"id":969,"linecolor":"ff59c6ff","page":347,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"本科","type":8,"uuid":"210937b59ab4000e99c1ed647e877114"},{"date":"2023-07-26 16:45:18","docid":0,"id":970,"linecolor":"ff59c6ff","page":347,"rect":[0,124.91998291015625,1,125.91998291015625],"title":"硕士","type":8,"uuid":"05c3fe0d6af5c449688b22b7545c822c"},{"date":"2023-07-26 16:45:18","docid":0,"id":971,"linecolor":"ff59c6ff","page":347,"rect":[0,220.91998291015625,1,221.91998291015625],"title":"实习","type":8,"uuid":"49b53e9a54e56b13cbd84deabf98ef6e"},{"date":"2023-07-26 16:45:18","docid":0,"id":972,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":973,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":974,"linecolor":"ff59c6ff","page":348,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"一面（9.5）（30min）","type":8,"uuid":"91a42fded285c7c99b4a4a5230d246d0"},{"date":"2023-07-26 16:45:18","docid":0,"id":975,"linecolor":"ff59c6ff","page":348,"rect":[0,226.91998291015625,1,227.91998291015625],"title":"二面（9.8）（30min）","type":8,"uuid":"4c0bfc18610f6173eef571ba199f8cdf"},{"date":"2023-07-26 16:45:18","docid":0,"id":976,"linecolor":"ff59c6ff","page":348,"rect":[0,319.91998291015625,1,320.91998291015625],"title":"三面（9.19）（30min）","type":8,"uuid":"9e9d617395ffe0e1c02bde5794f50118"},{"date":"2023-07-26 16:45:18","docid":0,"id":977,"linecolor":"ff59c6ff","page":348,"rect":[0,447.91998291015625,1,448.91998291015625],"title":"总结","type":8,"uuid":"cf5d1e47bf8a2bb15d0057e630be91e8"}],"page":347,"rect":[0,708.9199829101562,1,709.9199829101562],"title":"大疆","type":8,"uuid":"935226da01dd97f76bc415bd4f36a82b"},{"date":"2023-07-26 16:45:18","docid":0,"id":978,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":979,"linecolor":"ff59c6ff","page":348,"rect":[0,548.9199829101562,1,549.9199829101562],"title":"一面（60min）（淘汰）","type":8,"uuid":"ffee8080b9b1aaf07caef21ef70f8e1d"},{"date":"2023-07-26 16:45:18","docid":0,"id":980,"linecolor":"ff59c6ff","page":349,"rect":[0,192.91998291015625,1,193.91998291015625],"title":"总结：","type":8,"uuid":"51b6095c203e4379db4476ba642dee42"}],"page":348,"rect":[0,525.9199829101562,1,526.9199829101562],"title":"图森","type":8,"uuid":"ae6fa4041bcc7733f6965adc664e0ac0"},{"date":"2023-07-26 16:45:18","docid":0,"id":981,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":982,"linecolor":"ff59c6ff","page":349,"rect":[0,279.91998291015625,1,280.91998291015625],"title":"一面（30min）","type":8,"uuid":"1cc1e9ea24ef2f6eff7d939dadce1bb8"},{"date":"2023-07-26 16:45:18","docid":0,"id":983,"linecolor":"ff59c6ff","page":349,"rect":[0,417.91998291015625,1,418.91998291015625],"title":"二面（10min）","type":8,"uuid":"a11d0524ee4e4931ab8896395874fab1"},{"date":"2023-07-26 16:45:18","docid":0,"id":984,"linecolor":"ff59c6ff","page":349,"rect":[0,480.91998291015625,1,481.91998291015625],"title":"总结：","type":8,"uuid":"cc93c13c22d7866c0d9ef1c11e74b130"}],"page":349,"rect":[0,255.91998291015625,1,256.91998291015625],"title":"寒武纪","type":8,"uuid":"45c60db712ffcd178864a607eb91e079"},{"date":"2023-07-26 16:45:18","docid":0,"id":985,"linecolor":"ff59c6ff","page":349,"rect":[0,625.9199829101562,1,626.9199829101562],"title":"蔚来","type":8,"uuid":"8507e5492763527a799aa72ceb4f0c89"},{"date":"2023-07-26 16:45:18","docid":0,"id":986,"linecolor":"ff59c6ff","page":349,"rect":[0,649.9199829101562,1,650.9199829101562],"title":"一面10.15（20min）","type":8,"uuid":"d63e375e8a44cb63e12af2a945f860fd"},{"date":"2023-07-26 16:45:18","docid":0,"id":987,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":988,"linecolor":"ff59c6ff","page":350,"rect":[0,181.91998291015625,1,182.91998291015625],"title":"总结：","type":8,"uuid":"e71a88929f1846c00cc6c2eaa0efd135"}],"page":350,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"二面10.20（30min）（淘汰）","type":8,"uuid":"966e0059bdbaeff05621259a379437ff"},{"date":"2023-07-26 16:45:18","docid":0,"id":989,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":990,"linecolor":"ff59c6ff","page":350,"rect":[0,322.91998291015625,1,323.91998291015625],"title":"笔试+一面（120min）","type":8,"uuid":"2a0cb04d378e7eb4b736a2547233c52e"},{"date":"2023-07-26 16:45:18","docid":0,"id":991,"linecolor":"ff59c6ff","page":350,"rect":[0,438.91998291015625,1,439.91998291015625],"title":"二面（90min）","type":8,"uuid":"23259297750e45fa500b2d318d36a63f"},{"date":"2023-07-26 16:45:18","docid":0,"id":992,"linecolor":"ff59c6ff","page":350,"rect":[0,554.9199829101562,1,555.9199829101562],"title":"三面（60min）","type":8,"uuid":"96f1a6bd8f08daf3aa72bf4424bced3c"}],"page":350,"rect":[0,259.91998291015625,1,260.91998291015625],"title":"HPE","type":8,"uuid":"45bbed746997881a7580c0fee717e5e1"},{"date":"2023-07-26 16:45:18","docid":0,"id":993,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":994,"linecolor":"ff59c6ff","page":350,"rect":[0,655.9199829101562,1,656.9199829101562],"title":"一面9.24（40min）","type":8,"uuid":"3a8b6e240f3a40cba3a6807530639fed"},{"date":"2023-07-26 16:45:18","docid":0,"id":995,"linecolor":"ff59c6ff","page":351,"rect":[0,53.91998291015625,1,54.91998291015625],"title":"二面（9.30）（30min）","type":8,"uuid":"30e6175bda17bbde0255f03a82670398"}],"page":350,"rect":[0,632.9199829101562,1,633.9199829101562],"title":"小米","type":8,"uuid":"25ae64c2c2932124004b246746e25a28"},{"date":"2023-07-26 16:45:18","docid":0,"id":996,"linecolor":"ff59c6ff","page":351,"rect":[0,176.91998291015625,1,177.91998291015625],"title":"总结：","type":8,"uuid":"a5752b3604998476bdd44ad015c9f0bd"}],"page":347,"rect":[0,346.91998291015625,1,347.91998291015625],"title":"面经","type":8,"uuid":"6cb290a8bc8e36703eed6e414b68b4b1"},{"date":"2023-07-26 16:45:18","docid":0,"id":997,"linecolor":"ff59c6ff","page":351,"rect":[0,239.91998291015625,1,240.91998291015625],"title":"最后","type":8,"uuid":"220ecc0816a6188c8c02bbfba55572d2"}],"page":346,"rect":[0,583.9199829101562,1,584.9199829101562],"title":"优秀的学弟","type":8,"uuid":"ad122f7090122ba15eaf4e42ed0043ed"},{"date":"2023-07-26 16:45:18","docid":0,"id":998,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":999,"linecolor":"ff59c6ff","page":352,"rect":[0,58.91998291015625,1,59.91998291015625],"title":"作者简介","type":8,"uuid":"e8630cf0006ae7c0c075732c9620c514"},{"date":"2023-07-26 16:45:18","docid":0,"id":1000,"linecolor":"ff59c6ff","page":352,"rect":[0,185.91998291015625,1,186.91998291015625],"title":"面试前准备","type":8,"uuid":"e78b74e7dfaf6319edd3a9d592aeee70"},{"date":"2023-07-26 16:45:18","docid":0,"id":1001,"linecolor":"ff59c6ff","page":352,"rect":[0,211.91998291015625,1,212.91998291015625],"title":"资料推荐","type":8,"uuid":"74568977ea0168022bc8d56ee93fe265"},{"date":"2023-07-26 16:45:18","docid":0,"id":1002,"linecolor":"ff59c6ff","page":352,"rect":[0,455.91998291015625,1,456.91998291015625],"title":"要不要刷笔试题、力扣","type":8,"uuid":"97711f88e41a9a189cea80c99732ad57"},{"date":"2023-07-26 16:45:18","docid":0,"id":1003,"linecolor":"ff59c6ff","page":355,"rect":[0,237.91998291015625,1,238.91998291015625],"title":"企业资讯获取","type":8,"uuid":"c76ebba3eb9f57367d043e6ebb5e8811"},{"date":"2023-07-26 16:45:18","docid":0,"id":1004,"linecolor":"ff59c6ff","page":356,"rect":[0,594.9199829101562,1,595.9199829101562],"title":"简历制作","type":8,"uuid":"b4b2935e26059682d0309a53be61d534"},{"date":"2023-07-26 16:45:18","docid":0,"id":1005,"linecolor":"ff59c6ff","page":358,"rect":[0,586.9199829101562,1,587.9199829101562],"title":"去不去外包","type":8,"uuid":"32c96488101f2d772b1f332f01bffb3a"},{"date":"2023-07-26 16:45:18","docid":0,"id":1006,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":1007,"linecolor":"ff59c6ff","page":359,"rect":[0,54.91998291015625,1,55.91998291015625],"title":"自我介绍","type":8,"uuid":"c96162bd6496c963d5621c26801f5d87"},{"date":"2023-07-26 16:45:18","docid":0,"id":1008,"linecolor":"ff59c6ff","page":359,"rect":[0,200.91998291015625,1,201.91998291015625],"title":"技术面试","type":8,"uuid":"811e903a1fe5227ebac5a5c98d90ea5f"},{"date":"2023-07-26 16:45:18","docid":0,"id":1009,"linecolor":"ff59c6ff","page":360,"rect":[0,379.91998291015625,1,380.91998291015625],"title":"HR面","type":8,"uuid":"e9333f5ca23e707dbb8965cfe33a2d87"}],"page":359,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"面试","type":8,"uuid":"fb8131c81d6c30d6cef919ac5ac0804a"},{"date":"2023-07-26 16:45:18","docid":0,"id":1010,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":1011,"linecolor":"ff59c6ff","page":361,"rect":[0,473.91998291015625,1,474.91998291015625],"title":"基础","type":8,"uuid":"93d1a0d355da2cd987adc1c24257c049"},{"date":"2023-07-26 16:45:18","docid":0,"id":1012,"linecolor":"ff59c6ff","page":362,"rect":[0,471.91998291015625,1,472.91998291015625],"title":"媒体层知识","type":8,"uuid":"a83d814d8f35a47f9d6fc15851b415cc"},{"date":"2023-07-26 16:45:18","docid":0,"id":1013,"linecolor":"ff59c6ff","page":363,"rect":[0,324.91998291015625,1,325.91998291015625],"title":"项目","type":8,"uuid":"95bdb6043041a1d1a0f994f1da764cf8"},{"date":"2023-07-26 16:45:18","docid":0,"id":1014,"linecolor":"ff59c6ff","page":364,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"谈薪资","type":8,"uuid":"eb0d69f38cfaf52230e9d1d204c726a6"}],"page":361,"rect":[0,75.91998291015625,1,76.91998291015625],"title":"我的面试经历","type":8,"uuid":"a60d239d4a32af07a355fe6676af33b6"},{"date":"2023-07-26 16:45:18","docid":0,"id":1015,"linecolor":"ff59c6ff","page":365,"rect":[0,489.91998291015625,1,490.91998291015625],"title":"最后","type":8,"uuid":"6b8dd82f21ac3b4f9b47cd0a60c598ad"}],"page":352,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"一位音视频方向读者的秋招总结","type":8,"uuid":"8e37cbe563bfba77590afb733639ba62"},{"date":"2023-07-26 16:45:18","docid":0,"id":1016,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":1017,"linecolor":"ff59c6ff","page":368,"rect":[0,504.91998291015625,1,505.91998291015625],"title":"个人介绍","type":8,"uuid":"28c47fa2e08e27ad2e2c9eed77077a0c"},{"date":"2023-07-26 16:45:18","docid":0,"id":1018,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":1019,"linecolor":"ff59c6ff","page":369,"rect":[0,147.91998291015625,1,148.91998291015625],"title":"技术面","type":8,"uuid":"9db1c267ed6ca1012d5638fab8f4ad6a"},{"date":"2023-07-26 16:45:18","docid":0,"id":1020,"linecolor":"ff59c6ff","page":369,"rect":[0,293.91998291015625,1,294.91998291015625],"title":"HR面","type":8,"uuid":"b546840269c70bb0a8fcd3c8d835b0b7"}],"page":369,"rect":[0,120.91998291015625,1,121.91998291015625],"title":"海康","type":8,"uuid":"c67ea356629e2d3f6fd64cbeacfc7e4d"},{"date":"2023-07-26 16:45:18","docid":0,"id":1021,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:18","docid":0,"id":1022,"linecolor":"ff59c6ff","page":369,"rect":[0,457.91998291015625,1,458.91998291015625],"title":"性格测评","type":8,"uuid":"38d73609cd298df866bd64ce6f421862"},{"date":"2023-07-26 16:45:18","docid":0,"id":1023,"linecolor":"ff59c6ff","page":369,"rect":[0,535.9199829101562,1,536.9199829101562],"title":"笔试","type":8,"uuid":"b1729e0052a837c2a61d8b1f00833e5c"},{"date":"2023-07-26 16:45:18","docid":0,"id":1024,"linecolor":"ff59c6ff","page":369,"rect":[0,613.9199829101562,1,614.9199829101562],"title":"大疆一面（挂）","type":8,"uuid":"107e781c15cc8563871a054d5212259c"}],"page":369,"rect":[0,431.91998291015625,1,432.91998291015625],"title":"大疆","type":8,"uuid":"9623d5c29e1f60a7df44601c4eec9dde"},{"date":"2023-07-26 16:45:19","docid":0,"id":1025,"linecolor":"ff59c6ff","page":370,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"OPPO","type":8,"uuid":"1fd80c113cccef612d86e043f184ca03"},{"date":"2023-07-26 16:45:19","docid":0,"id":1026,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:19","docid":0,"id":1027,"linecolor":"ff59c6ff","page":370,"rect":[0,258.91998291015625,1,259.91998291015625],"title":"面试","type":8,"uuid":"ebf706a16f5d34d920346b784d1337ff"}],"page":370,"rect":[0,177.91998291015625,1,178.91998291015625],"title":"中科创达","type":8,"uuid":"b127ffd37dfbd3ced2a0f99973450929"},{"date":"2023-07-26 16:45:19","docid":0,"id":1028,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:19","docid":0,"id":1029,"linecolor":"ff59c6ff","page":370,"rect":[0,561.9199829101562,1,562.9199829101562],"title":"一面","type":8,"uuid":"4592bf0a03b84c32eca06e0bc9da3236"},{"date":"2023-07-26 16:45:19","docid":0,"id":1030,"linecolor":"ff59c6ff","page":370,"rect":[0,669.9199829101562,1,670.9199829101562],"title":"二面","type":8,"uuid":"abdf2b7d3e1ba4c315f5e84bdc8575c7"}],"page":370,"rect":[0,441.91998291015625,1,442.91998291015625],"title":"中兴通讯","type":8,"uuid":"091c2bace780e14df23c26b74aa17775"},{"date":"2023-07-26 16:45:19","docid":0,"id":1031,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:19","docid":0,"id":1032,"linecolor":"ff59c6ff","page":371,"rect":[0,54.91998291015625,1,55.91998291015625],"title":"一面","type":8,"uuid":"96a8f4173404046440f82838d01a87c6"},{"date":"2023-07-26 16:45:19","docid":0,"id":1033,"linecolor":"ff59c6ff","page":371,"rect":[0,192.91998291015625,1,193.91998291015625],"title":"二面：","type":8,"uuid":"dfb081de56cd1d9e7615dfe9e950a775"}],"page":371,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"联发科","type":8,"uuid":"eef14e2b0d7ee309b8502190a1124112"},{"date":"2023-07-26 16:45:19","docid":0,"id":1034,"linecolor":"ff59c6ff","page":371,"rect":[0,263.91998291015625,1,264.91998291015625],"title":"总结","type":8,"uuid":"742b1d2f1be664c5ae233b715b759322"}],"page":366,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"一位通信工程本科生的秋招经历","type":8,"uuid":"edf238d4273eef7bc0ce3963297b66e6"},{"date":"2023-07-26 16:45:19","docid":0,"id":1035,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:19","docid":0,"id":1036,"linecolor":"ff59c6ff","page":371,"rect":[0,399.91998291015625,1,400.91998291015625],"title":"个人背景","type":8,"uuid":"94b963168fac902b19520a67d6548f0b"},{"date":"2023-07-26 16:45:19","docid":0,"id":1037,"linecolor":"ff59c6ff","page":371,"rect":[0,519.9199829101562,1,520.9199829101562],"title":"学习经历","type":8,"uuid":"3fd819544eb30390207a3d432f709dc7"},{"date":"2023-07-26 16:45:19","docid":0,"id":1038,"linecolor":"ff59c6ff","page":371,"rect":[0,720.9199829101562,1,721.9199829101562],"title":"秋招准备","type":8,"uuid":"b6660f59e3df96a684247d051ecefb39"},{"date":"2023-07-26 16:45:19","docid":0,"id":1039,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:19","docid":0,"id":1040,"linecolor":"ff59c6ff","page":372,"rect":[0,292.91998291015625,1,293.91998291015625],"title":"上海瀚讯（通过）","type":8,"uuid":"c52c26c44c5f1bf6fa1651e6f6749356"},{"date":"2023-07-26 16:45:19","docid":0,"id":1041,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:19","docid":0,"id":1042,"linecolor":"ff59c6ff","page":372,"rect":[0,417.91998291015625,1,418.91998291015625],"title":"小米一面：","type":8,"uuid":"a4031f90273d92ee5a7eb6b1e3adff62"},{"date":"2023-07-26 16:45:19","docid":0,"id":1043,"linecolor":"ff59c6ff","page":372,"rect":[0,609.9199829101562,1,610.9199829101562],"title":"小米二面：","type":8,"uuid":"2b56728aaf28a0c0c2e64695df31e027"}],"page":372,"rect":[0,393.91998291015625,1,394.91998291015625],"title":"小米（通过）","type":8,"uuid":"e6d204e272b2cee4b73538d48e68036e"},{"date":"2023-07-26 16:45:19","docid":0,"id":1044,"linecolor":"ff59c6ff","page":372,"rect":[0,709.9199829101562,1,710.9199829101562],"title":"乐鑫科技（通过）：","type":8,"uuid":"d15b2a31866680bda859cec6334f6800"},{"date":"2023-07-26 16:45:19","docid":0,"id":1045,"linecolor":"ff59c6ff","page":373,"rect":[0,53.91998291015625,1,54.91998291015625],"title":"Tplink（一面挂）","type":8,"uuid":"dc0337ae57f8e7817a04c84551f4d3ed"},{"date":"2023-07-26 16:45:19","docid":0,"id":1046,"linecolor":"ff59c6ff","page":373,"rect":[0,153.91998291015625,1,154.91998291015625],"title":"广联达（一面挂）","type":8,"uuid":"4bb9b2b3e123cc1171033bf2241a5bdb"},{"date":"2023-07-26 16:45:19","docid":0,"id":1047,"linecolor":"ff59c6ff","page":373,"rect":[0,255.91998291015625,1,256.91998291015625],"title":"Marvell（通过）","type":8,"uuid":"78b4770682a181c0cd12b1c72bf571c8"},{"date":"2023-07-26 16:45:19","docid":0,"id":1048,"linecolor":"ff59c6ff","page":373,"rect":[0,415.91998291015625,1,416.91998291015625],"title":"华为2012实验室（通过）","type":8,"uuid":"2c8caa7458fee43758f498d7019ef4be"}],"page":372,"rect":[0,226.91998291015625,1,227.91998291015625],"title":"面试经验","type":8,"uuid":"0d62459ad3f24281f5836f60ebf64cd5"},{"date":"2023-07-26 16:45:19","docid":0,"id":1049,"linecolor":"ff59c6ff","page":373,"rect":[0,516.9199829101562,1,517.9199829101562],"title":"个人总结","type":8,"uuid":"4bb056e157062940b4bd548ebdd12266"}],"page":371,"rect":[0,344.91998291015625,1,345.91998291015625],"title":"机械专业转行嵌入式成功上岸","type":8,"uuid":"a0f012a427f73e0f9d628c16390b51eb"}],"page":286,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"读者秋招总结","type":8,"uuid":"16ec2b07ecbf95e61bb36f00650cda81"},{"date":"2023-07-26 16:45:19","docid":0,"id":1050,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:19","docid":0,"id":1051,"linecolor":"ff59c6ff","page":374,"rect":[0,310.91998291015625,1,311.91998291015625],"title":"笔试准备","type":8,"uuid":"3c902708ee088ba5853132fbed132733"},{"date":"2023-07-26 16:45:19","docid":0,"id":1052,"linecolor":"ff59c6ff","page":376,"rect":[0,408.91998291015625,1,409.91998291015625],"title":"刷题","type":8,"uuid":"fa97ee35887176465c118295710febdf"},{"date":"2023-07-26 16:45:19","docid":0,"id":1053,"linecolor":"ff59c6ff","page":386,"rect":[0,374.91998291015625,1,375.91998291015625],"title":"复盘","type":8,"uuid":"11a4228b3e6e1507dc90f566bb9945c6"},{"date":"2023-07-26 16:45:19","docid":0,"id":1054,"linecolor":"ff59c6ff","page":386,"rect":[0,671.9199829101562,1,672.9199829101562],"title":"谈薪","type":8,"uuid":"81e39c8016cd3930519bdfa808fa792f"},{"date":"2023-07-26 16:45:19","docid":0,"id":1055,"linecolor":"ff59c6ff","page":387,"rect":[0,196.91998291015625,1,197.91998291015625],"title":"谈薪话术","type":8,"uuid":"2d1d240163f46425514da045c0055293"},{"date":"2023-07-26 16:45:19","docid":0,"id":1056,"linecolor":"ff59c6ff","page":387,"rect":[0,478.91998291015625,1,479.91998291015625],"title":"最后","type":8,"uuid":"953c4cc6629a6cef0f9470c76e60910b"}],"page":374,"rect":[0,253.91998291015625,1,254.91998291015625],"title":"个人随谈（附谈薪话术）","type":8,"uuid":"798580e6126d5df1310d05d204376151"}],"page":254,"rect":[0,284.91998291015625,1,285.91998291015625],"title":"面经总结","type":8,"uuid":"afc1b987c2f33599019ffe7328710539"},{"date":"2023-07-26 16:45:19","docid":0,"id":1057,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:19","docid":0,"id":1058,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:19","docid":0,"id":1059,"linecolor":"ff59c6ff","page":388,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"选择题","type":8,"uuid":"18cfd9a82a200f7c69a8db5d85dfa892"},{"date":"2023-07-26 16:45:19","docid":0,"id":1060,"linecolor":"ff59c6ff","page":391,"rect":[0,212.91998291015625,1,213.91998291015625],"title":"专项选择题","type":8,"uuid":"b603e47ba4c8e7d69d142e23429119c8"},{"date":"2023-07-26 16:45:19","docid":0,"id":1061,"linecolor":"ff59c6ff","page":395,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"编程题1（字符串筛选）","type":8,"uuid":"cba903be9543ba512be8a70cf7a73338"},{"date":"2023-07-26 16:45:19","docid":0,"id":1062,"linecolor":"ff59c6ff","page":395,"rect":[0,708.9199829101562,1,709.9199829101562],"title":"编程题2（字符串有效判断）","type":8,"uuid":"cf93adef79a9ba53d5696cc277b6d4f7"}],"page":387,"rect":[0,643.9199829101562,1,644.9199829101562],"title":"小米嵌入式软件工程师笔试题目解析","type":8,"uuid":"463b069fc27aa356ad98a8afc16d4a0a"},{"date":"2023-07-26 16:45:19","docid":0,"id":1063,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:19","docid":0,"id":1064,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:19","docid":0,"id":1065,"linecolor":"ff59c6ff","page":397,"rect":[0,561.9199829101562,1,562.9199829101562],"title":"1. 参加断型冠状病毒疫苗开发研讨会的70名学者中,亚商学者39人,博士33人,非亚裔学者中无博士学位的4人，根据以上陈述,参加此次研讨会的亚裔博士有几人?","type":8,"uuid":"6305328b3ee7009a5c140fc221d67dc9"},{"date":"2023-07-26 16:45:19","docid":0,"id":1066,"linecolor":"ff59c6ff","page":398,"rect":[0,68.91998291015625,1,69.91998291015625],"title":"2. 某省妇女儿童占全省总人口的2/3。如果妇女是指所有女性人口，儿童是指所有非成年人口，并且对任一年龄段，该省男女人口的数量持平，则上述断定能推出以下哪项结论？","type":8,"uuid":"a3a638d0c086f2a3b3c8ecdd897cf881"},{"date":"2023-07-26 16:45:19","docid":0,"id":1067,"linecolor":"ff59c6ff","page":398,"rect":[0,495.91998291015625,1,496.91998291015625],"title":"3. 某次讨论会共有25名与会者,已知(1)至少有7名青年教师是男性，(2)至少有8名男教师已过中年(3)至少有10名男青年是教师;如上述3句话两真一假,则关于与会人员可以得出以下哪项","type":8,"uuid":"2914b9c48507ee63430f961b68679928"},{"date":"2023-07-26 16:45:19","docid":0,"id":1068,"linecolor":"ff59c6ff","page":399,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"4. 某中药配方有如下要求(1)如果有甲药材,那么没有乙药材(2)如果没有丙药材,那么必须有丁药材(3)人参和天麻不能都有(4)如果没有甲药材而有丙药材,则需要有人参。如果还有天麻,则关于该配方的断定哪项为真?D","type":8,"uuid":"956f6c5f351d0cd7891c53b2fe4d3aec"},{"date":"2023-07-26 16:45:19","docid":0,"id":1069,"linecolor":"ff59c6ff","page":399,"rect":[0,302.91998291015625,1,303.91998291015625],"title":"5. 某国拟在甲、乙、丙、丁、戊己6种农作物中进口几种,用于该国庞大的动物饲料产业,考虑到些农作物可能有违禁成分,以及它们之间存在的互补或可替代因素,该国对进口这些农作物有如下要求(1)它们当中不含违禁成分的都进口。2)如果甲或乙含有违禁成分,就进口丙和丁。3)如果戊含有违禁成分,那么己就不进口了;如果进口丙,就进口乙和己。(4)如果不进口己,就进口戊;如果进口戊,就不进口己。根据上述要求,以下哪项所列的农作物是该国可以进囗的；","type":8,"uuid":"68137f112d87a99f7ea8018e9f797539"}],"page":397,"rect":[0,531.9199829101562,1,532.9199829101562],"title":"逻辑题","type":8,"uuid":"038763e5efe0537b0fb178b47198540a"},{"date":"2023-07-26 16:45:19","docid":0,"id":1070,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:19","docid":0,"id":1071,"linecolor":"ff59c6ff","page":399,"rect":[0,670.9199829101562,1,671.9199829101562],"title":"1. int i =1;const int j =2;以下说法不正确的是","type":8,"uuid":"c54f6006380eaed84554495be5c6516c"},{"date":"2023-07-26 16:45:19","docid":0,"id":1072,"linecolor":"ff59c6ff","page":400,"rect":[0,151.91998291015625,1,152.91998291015625],"title":"2. 以下关于内存的说法正确的是","type":8,"uuid":"073a1d4eb2bff7baa0c983f4de17fa22"},{"date":"2023-07-26 16:45:19","docid":0,"id":1073,"linecolor":"ff59c6ff","page":400,"rect":[0,316.91998291015625,1,317.91998291015625],"title":"3. 以下哪些事件会导致进程的创建","type":8,"uuid":"78113165779d0c56a2a75c4123924657"},{"date":"2023-07-26 16:45:19","docid":0,"id":1074,"linecolor":"ff59c6ff","page":400,"rect":[0,708.9199829101562,1,709.9199829101562],"title":"4. 下列说法正确的有","type":8,"uuid":"80fcb4392971c2ee4f33094195c4a5b3"},{"date":"2023-07-26 16:45:19","docid":0,"id":1075,"linecolor":"ff59c6ff","page":401,"rect":[0,121.91998291015625,1,122.91998291015625],"title":"5. 32位系统中，该程序的输出为","type":8,"uuid":"5457ca3a933fed3948451ef60a217b5d"},{"date":"2023-07-26 16:45:19","docid":0,"id":1076,"linecolor":"ff59c6ff","page":401,"rect":[0,619.9199829101562,1,620.9199829101562],"title":"6. 有以下程序,求输出结果","type":8,"uuid":"b75efb0c1edd093c91d5b7326e615e81"},{"date":"2023-07-26 16:45:19","docid":0,"id":1077,"linecolor":"ff59c6ff","page":402,"rect":[0,249.91998291015625,1,250.91998291015625],"title":"7. 若 int x = 5&6,那么x的值为（）","type":8,"uuid":"e877e16d5ec6c8a6bdcc4285f3992656"},{"date":"2023-07-26 16:45:19","docid":0,"id":1078,"linecolor":"ff59c6ff","page":402,"rect":[0,471.91998291015625,1,472.91998291015625],"title":"8. 以下错误的表达式为","type":8,"uuid":"265b35c6a6b1c0f6ae19f938c6f1c9b6"},{"date":"2023-07-26 16:45:19","docid":0,"id":1079,"linecolor":"ff59c6ff","page":403,"rect":[0,434.91998291015625,1,435.91998291015625],"title":"9. 关于对象的this指针,以下叙述不正确的有","type":8,"uuid":"7157325040e4d9ce50a49718ae18cb72"},{"date":"2023-07-26 16:45:19","docid":0,"id":1080,"linecolor":"ff59c6ff","page":404,"rect":[0,53.91998291015625,1,54.91998291015625],"title":"10. 若某线性表中最常用的操作是在最后一个元素之后插入一个元素和删除第一个元素,则最节省运算时间的存储方式是","type":8,"uuid":"2f71b88cb2754dfeef566aeb8629c017"}],"page":399,"rect":[0,640.9199829101562,1,641.9199829101562],"title":"不定向选择","type":8,"uuid":"4a2ac162b4d7147c5e60fdaac3d713e7"},{"date":"2023-07-26 16:45:19","docid":0,"id":1081,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:19","docid":0,"id":1082,"linecolor":"ff59c6ff","page":404,"rect":[0,439.91998291015625,1,440.91998291015625],"title":"1. F和Q分别是指向单链表两个元素的指针,那么,F所指元素是Q所指元素后继的条件是（Q->next == F）","type":8,"uuid":"b058a0f56b850db33e19f857e0fbf203"},{"date":"2023-07-26 16:45:19","docid":0,"id":1083,"linecolor":"ff59c6ff","page":404,"rect":[0,482.91998291015625,1,483.91998291015625],"title":"2.设有一个空栈,现有输入序列为1，2，3，4，5，经过 push, push, pop, push pop, push, pop, push后,输出序列是（2,3,4）","type":8,"uuid":"1f98373370645ab401b4146777168c30"},{"date":"2023-07-26 16:45:19","docid":0,"id":1084,"linecolor":"ff59c6ff","page":405,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"3.H是一个带有头结点的单链表,那么在第一个元素之后插入一个结点（设P为要插入节点的指针），其操作是（ p->next=H->next; ）（H->next = p;）","type":8,"uuid":"21b739fe18e77873f6c9c7d096b3d343"},{"date":"2023-07-26 16:45:19","docid":0,"id":1085,"linecolor":"ff59c6ff","page":405,"rect":[0,71.91998291015625,1,72.91998291015625],"title":"4.已知二叉树后序遍历序列为dabec，中序遍历序列为debac，它的前序遍历序列为","type":8,"uuid":"e8e45ff4bc6e8a008dc7d2141bf30fc8"},{"date":"2023-07-26 16:45:19","docid":0,"id":1086,"linecolor":"ff59c6ff","page":405,"rect":[0,629.9199829101562,1,630.9199829101562],"title":"5.以下程序的输出结果为","type":8,"uuid":"e840ba9b9ebb79214f63885cc35227dd"},{"date":"2023-07-26 16:45:19","docid":0,"id":1087,"linecolor":"ff59c6ff","page":406,"rect":[0,537.9199829101562,1,538.9199829101562],"title":"6.这段程序会存在什么问题","type":8,"uuid":"1517848c8cb63ca43fcdbb78507fb7ea"},{"date":"2023-07-26 16:45:19","docid":0,"id":1088,"linecolor":"ff59c6ff","page":407,"rect":[0,288.91998291015625,1,289.91998291015625],"title":"7.改正程序中的错误","type":8,"uuid":"356387ae9570b32e4aa2a517dca45edd"}],"page":404,"rect":[0,409.91998291015625,1,410.91998291015625],"title":"填空题","type":8,"uuid":"861c944a1997025ec317c3ed10af661c"},{"date":"2023-07-26 16:45:19","docid":0,"id":1089,"linecolor":"ff59c6ff","page":409,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"编程题","type":8,"uuid":"843826bfe95aa335254203c51d9dd0c1"}],"page":397,"rect":[0,499.91998291015625,1,500.91998291015625],"title":"北京联发科嵌入式软件工程师笔试题目解析","type":8,"uuid":"e59232ef988013abdd974b281fdd9a29"},{"date":"2023-07-26 16:45:19","docid":0,"id":1090,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:19","docid":0,"id":1091,"linecolor":"ff59c6ff","page":410,"rect":[0,622.9199829101562,1,623.9199829101562],"title":"单选题","type":8,"uuid":"743b83c01dc6d9d8bd2f2e5e63326086"},{"date":"2023-07-26 16:45:19","docid":0,"id":1092,"linecolor":"ff59c6ff","page":413,"rect":[0,342.91998291015625,1,343.91998291015625],"title":"简答","type":8,"uuid":"25fafe5b3272af67e4484536ca075fea"},{"date":"2023-07-26 16:45:19","docid":0,"id":1093,"linecolor":"ff59c6ff","page":416,"rect":[0,28.91998291015625,1,29.91998291015625],"title":"编程题","type":8,"uuid":"32ec1da143c726fd78a24457c86dc2a1"}],"page":410,"rect":[0,513.9199829101562,1,514.9199829101562],"title":"兆易创新嵌入式软件工程师笔试题目解析","type":8,"uuid":"4e847d3f24a4ca633891d82c8c82ce83"}],"page":387,"rect":[0,606.9199829101562,1,607.9199829101562],"title":"名企笔试真题解析","type":8,"uuid":"389a45c005b9cb266a4dce8a06c55b99"},{"date":"2023-07-26 16:45:19","docid":0,"id":1094,"linecolor":"ff59c6ff","markups":[{"date":"2023-07-26 16:45:19","docid":0,"id":1095,"linecolor":"ff59c6ff","page":418,"rect":[0,224.91998291015625,1,225.91998291015625],"title":"微信","type":8,"uuid":"21a88ecbde7ad4197f092492d87c799d"},{"date":"2023-07-26 16:45:19","docid":0,"id":1096,"linecolor":"ff59c6ff","page":418,"rect":[0,588.9199829101562,1,589.9199829101562],"title":"公众号","type":8,"uuid":"0975b4a34329be8e95d92aa3b0a66192"},{"date":"2023-07-26 16:45:19","docid":0,"id":1097,"linecolor":"ff59c6ff","page":419,"rect":[0,348.91998291015625,1,349.91998291015625],"title":"赞赏","type":8,"uuid":"3ee3d4ad011725134ee82b89773c2e54"}],"page":418,"rect":[0,162.91998291015625,1,163.91998291015625],"title":"联系作者","type":8,"uuid":"2572a1d71c2972e454b955d2cc00e4c2"},{"date":"2023-07-26 16:45:19","docid":0,"id":1098,"linecolor":"ff59c6ff","page":420,"rect":[0,356.91998291015625,1,357.91998291015625],"title":"文档更新记录","type":8,"uuid":"41764d452389784b7f80a81f854de781"}],"maxid":1129,"notelinks":[],"scalingratio":50,"summaries":[],"title":"嵌入式软件开发笔试面试指南-已解锁(1)","unimportant":[]}